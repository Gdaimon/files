%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (\700\753\750\770\745\760) ()
%%Title: (floral design elements.eps)
%%CreationDate: 9/1/2011 10:51 PM
%%Canvassize: 16383
%%BoundingBox: 12 106 601 688
%%HiResBoundingBox: 12.4023 106.3135 600.458 687.8838
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 22.7197 -7.41992 583.2402 805.46
%AI3_DocumentPreview: Header
%AI5_ArtSize: 600 600
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -40.9058 690.9058 1.38 1003 864 18 1 0 49 117 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Trail  ver4.2 for Win AICS4) (FILTERiT4 Live Trail ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Tiling  ver4.2 for Win AICS4) (FILTERiT4 Live Tiling ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 DropShadow  ver4.2 for Win AICS4) (FILTERiT4 Live Shadow ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Reflections  ver4.2 for Win AICS4) (FILTERiT4 Live Reflections ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Neon  ver4.2 for Win AICS4) (FILTERiT4 Live Neon ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Generation  ver4.2 for Win AICS4) (FILTERiT4 Live Generation ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Galaxy  ver4.2 for Win AICS4) (FILTERiT4 Live Galaxy ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Frame  ver4.2 for Win AICS4) (FILTERiT4 Live Frame ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Explosion  ver4.2 for Win AICS4) (FILTERiT4 Live Explosion ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Emboss  ver4.2 for Win AICS4) (FILTERiT4 Live Emboss ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Cutout  ver4.2 for Win AICS4) (FILTERiT4 Live Cutout ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Circle  ver4.2 for Win AICS4) (FILTERiT4 Live Circle ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Border  ver4.2 for Win AICS4) (FILTERiT4 Live Border ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Blue Strike)
(Blue Strike) 0 3 Bd
[
<
9C9C9A9A98979695949391918F8F8E8C8B8A8A888786858483838180807E7E7C7B7A797877767574
737271706F6D6D6B6B6A696867666563636261605F5E5D5C5C5A5A59585756555454535252504F4F
4E4E4D4C4B4A49494847464545444342424241403F3F3E3D3D3C3B3A3A3938383737363635353433
3232313130302F2E2E2D2D2C2B2B2A2A29292828282827262524242323222221212020201F1F1E1E
1C1C1C1C1C1B1B1A1A191919181817171716161615151414141313131212121111111010100F0F0F
0F0E0E0E0D0D0D0D0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A09090909080808080807070707070606
06060606050505050505050505050505050404040404040403030303030303030302020202020202
02020201010101010101010101010100000000000000000000000101010101010000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000
>
0.000031
<
3535343433333432333132323130302F2F302E2F2D2E2D2C2C2C2B2B2B2A2A2A2929292829282627
27262626252524252424242223222121212120201F201E1E1F1D1D1E1D1C1C1C1C1B1B1B1B1A1A1A
1A191918191717181717151616161415141414141313131412121213131111121111100F1010100E
0F0F0F0F0E0E0E0D0D0D0E0C0C0C0C0D0D0D0B0B0B0C0B0B0A0A0A0A0A0A0A080909090908080808
07070707070808060606060606070707050505050606060606060404040505050505050505030404
04040404040404040403030303030303030303030303030302020202020202020202020202020202
02020101010101010101010101010101010101010101010101010000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000
>
0.000031
<
505153545657585A5B5D5E5F616263656667686A6B6C6E6F70717374757677797A7B7C7D7E808182
8384858687898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A4A5A6A7A8A9AA
ABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B8B9BABBBBBCBDBDBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8
C8C9CACACBCBCCCDCDCECECFD0D0D1D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9D9DADADBDBDBDCDCDDDD
DEDEDFDFDFE0E0E1E1E2E2E2E3E3E4E4E4E5E5E5E6E6E7E7E7E8E8E8E9E9E9EAEAEAEBEBEBECECEC
ECEDEDEDEEEEEEEEEFEFEFF0F0F0F0F1F1F1F1F2F2F2F2F2F3F3F3F3F4F4F4F4F4F5F5F5F5F5F6F6
F6F6F6F6F7F7F7F7F7F7F8F8F8F8F8F8F8F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFB
FBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF
>
<
C4C4C5C5C6C6C7C7C8C8C9C9CACACACBCBCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D4D4D4D5
D5D6D6D6D7D7D7D8D8D9D9D9DADADADBDBDBDCDCDCDDDDDDDEDEDEDFDFDFE0E0E0E0E1E1E1E2E2E2
E3E3E3E3E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7E8E8E8E8E9E9E9E9EAEAEAEAEBEBEBEBEBECECECEC
EDEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F2F3F3F3F3F3F3F3F4
F4F4F4F4F4F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F9F9
F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF
>
<
CECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D4D5D5D6D6D6D7D7D7D8D8D8D9D9D9DADADADBDBDBDCDC
DCDDDDDDDEDEDEDEDFDFDFE0E0E0E1E1E1E1E2E2E2E2E3E3E3E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7
E7E8E8E8E8E9E9E9E9E9EAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0
F0F0F0F0F0F1F1F1F1F1F1F2F2F2F2F2F2F2F3F3F3F3F3F3F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F6
F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFA
FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF
>
4 %_Br
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000010101010100000000000000000000000101010101
01010101010101020202020202020202020303030303030303030404040404040405050505050505
05050505050506060606060607070707070808080808090909090A0A0A0A0A0B0B0B0B0B0B0B0B0C
0C0C0D0D0D0D0E0E0E0E0F0F0F101010111111121212131313141414151515161617171718181819
191A1A1B1B1B1C1C1C1C1E1E1E1F1F20202121222223232424252627272828282829292A2B2B2C2C
2D2D2E2F2F30303132323334343535363637373838393A3B3B3C3D3D3E3F40404142424243444545
46474849494A4B4C4D4E4E4F4F50525253535455565758595A5A5C5C5D5E5F606162636365666768
696A6B6B6C6D6E6F707172747476777878797B7C7D7E7E808181838385868787898A8A8B8D8E8F90
91919394959697989A9A9C9C
>
0.000031
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001010101010101010101010101010101
01010101010101010202020202020202020202020202020202020303030303030303030303030303
03040404040404040404040403050505050505050504040406060606060605050505070707070606
060606080807070707070809080808090909080A0A0A0A0A0A0A0B0B0B0C0B0B0B0D0D0C0C0C0C0E
0E0D0D0E0E0F0E0F0F0F0E101010100F101111121111131312121214131314141414151514161616
151717181717191819191A1A1A1A1B1B1B1B1C1C1C1C1D1E1D1D1F1E1E1F1F202021212121222322
24242424262525272626272727272828282929292B2A2A2B2B2B2C2C2C2E2D2F2F2E302F2F303031
323233333234333334343535
>
0.000031
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFC
FCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F8F8F8F8F8F8F8
F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F4F4F4F4F4F3F3F3F3F2F2F2F2F2F1F1F1F1F0F0F0F0EF
EFEFEEEEEEEEEDEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E8E7E7E7E6E6E6E5E5E4E4E4E3E3E3E2
E2E1E1E0E0E0DFDFDEDEDDDDDDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D0D0CFCF
CECECDCCCCCBCBCAC9C9C8C7C7C6C6C5C4C4C3C2C2C1C0BFBFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4
B3B2B1B0B0AFAEADACABABAAA9A8A7A6A5A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F
8E8D8C8B8A8988878685848281807F7E7D7C7A7978777675737271706E6D6C6B6968676664636260
5F5E5C5B5A58575654535150
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFA
FAFAF9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F5F5
F5F5F5F5F5F4F4F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F1F0F0F0F0F0EFEFEFEFEF
EFEEEEEEEEEEEDEDEDEDECECECECECEBEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6
E5E5E5E5E4E4E4E3E3E3E3E2E2E2E1E1E1E0E0E0E0DFDFDFDEDEDEDDDDDDDCDCDCDBDBDBDADADAD9
D9D9D8D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D2D1D1D0D0D0CFCFCECECDCDCDCCCCCBCBCACACA
C9C9C8C8C7C7C6C6C5C5C4C4
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F1
F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDECECECECECEBEBEBEBEBEAEAEA
EAE9E9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E1E1E1E1E0E0E0
DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D5D5D5D4D4D4D3D3D3
D2D2D1D1D1D0D0D0CFCFCECE
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 Bs
0.613581 0.000031 0.20972 0.000031 0.313726 0.768627 0.807843 2 18.6047 50 %_BS
%_0.613581 0.000031 0.20972 0.000031 0.313726 0.768627 0.807843 2 18.6047 50 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 81.1765 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 81.1765 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Broccoli)
(Broccoli) 1 6 Bd
[
<
DEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDDDEDEDEDDDEDEDEDEDDDEDDDDDDDDDDDCDCDCDBDBDBDBDA
DADAD9D9D9D8D8D7D7D7D7D6D6D6D5
>
<
54535453525251504F4E4E4E4D4C4B4A49494747464544434241403F3F3E3D3C3B39383736353432
31302F2E2C2B2A292826252422211F
>
<
E3E5E2E4E5E2E4E5E4E5E5E4E5E7E6E7E5E6E6E5E6E5E6E7E6E8E6E7E5E6E7E6E7E6E7E5E6E7E6E6
E5E5E4E5E5E4E5E4E5E3E4E3E4E3E3
>
<
3D3B3B3938383635333232302F2D2C2A29292726252322201F1E1C1B1B1A1817161514131211100E
0D0C0C0B0A09080707060505040403
>
<
181818171717171716161616161515151514141414131313131312121212111111111010100F0F0F
0F0E0E0E0E0D0D0D0D0C0C0C0C0B0B
>
<
6C6D6D6E6F6F7071727373747576777879797A7B7C7D7E7F80818283838485868788898A8B8C8D8E
8F909192939495969798999A9B9C9D
>
<
4141424242434343444444454545464647474748484949494A4A4B4B4C4C4C4D4D4E4E4F4F4F5050
515152525253535454555556565757
>
4 %_Br
<
D5D5D5D5D5D4D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0D0CFCFCECECDCDCDCCCCCCCBCACAC9C9C9
C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0BFBEBEBDBCBCBBBBBAB9B9B9B8B7B6B6B5B4B4B3B2B1B0
B0AFAEADACABABAAA9A8A7A6A6A5A4A3A2A2A1A09F9E
>
<
1F1F1F1F1E1E1E1E1E1E1D1D1D1D1D1C1C1C1D1D1B1C1C1C1C1B1B1B1B1C1A1A1B1B191A1A1A1A19
1919191A181818191717181818171718181617171716161717171616161715161617151616171716
16171716161717161616171616161716161617161617
>
<
E3E3E1E1E0E0E0DEDEDCDDDADAD9D9D8D7D6D4D4D3D3D1D1D0D0CFCFCDCBCCCACAC8C9C7C6C6C4C4
C3C1C1C0C0BEBEBDBCBCBABAB8B7B7B6B5B5B3B3B1B0B0AEAEACABABA9A7A8A6A6A4A3A3A1A09F9E
9E9C9B9B9997979694949293918F8F8E8C8C8A898987
>
<
03030303030303030303030303030303030303030202020202020202020202020202020202020202
02020202010101010101010101010101010101010101010101010101010101010101000000000000
00000000000000000000000000000000000000000000
>
<
0B0C0C0D0D0E0F101011121313141516171718191A1B1C1C1D1E1F2021222223242526272829292A
2B2C2D2E2F30313233333435363738393A3B3C3D3E3F40414243444445464748494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F60616263646566
>
<
9D9D9D9D9E9E9E9E9E9E9F9F9F9F9FA0A0A0A0A0A1A1A1A1A1A2A2A2A2A2A3A3A3A3A4A4A4A4A4A5
A5A5A5A5A6A6A6A6A7A7A7A7A7A8A8A8A8A9A9A9A9AAAAAAAAAAABABABABACACACACADADADADADAE
AEAEAEAFAFAFAFB0B0B0B0B1B1B1B1B2B2B2B2B3B3B3
>
<
575758585959595A5A5B5B5C5C5D5D5E5E5F6060616162626363646465666667676868696A6A6B6B
6C6D6D6E6E6F6F707171727273747475757677777879797A7A7B7C7C7D7E7E7F7F80818182838384
84858686878888898A8A8B8B8C8D8D8E8F8F90919192
>
4 %_Br
<
9E9F9FA0A0A1A1A2A2A3A4A5A5A6A6A7A8A8A9AAABABACACADAEAFAFB0B1B1B2B3B4B5B5B6B6B7B7
B8B9B9BABBBBBCBCBDBDBEBEBFC0C1C1C2C2C3C3C4C5C5C6C6C7C7C7C8C8C9C9CACACBCCCCCCCDCD
CECECFCFD0D0D0D1D1D1D2D2D2D3D3D4D4D4D4D5D5D5
>
<
17171616171717161616171616161617171616161717161616171716161517161616171716161617
1716161617171616171717171618181717181818171919181818191919191A1A1A1A1B1B1B1A1A1B
1B1B1B1C1C1C1B1D1C1C1C1E1D1D1D1E1E1E1E1F1F1F
>
<
878789898A8A8B8C8C8E8E8F8F91919293949696979799999B9B9C9D9EA09FA1A1A3A3A4A6A6A8A7
A9ABABADACAEAEB0B1B1B3B3B5B5B6B7B7B8BABABCBDBDBEBFC0C1C1C3C4C4C6C6C7C8C8CACCCCCD
CDCFD0D0D1D3D3D4D6D6D8D7D9DADBDCDEDEE0E1E1E3
>
<
00000000000000000000000000000000000000000000000000000000000000000000010101010101
01010101010101010101010101010101010101010101010101010202020202020202020202020202
02020202020202030303030303030303030303030303
>
<
666565646463626161605F5E5E5D5C5B5A5A59585756555554535251504F4F4E4D4C4B4A49484847
464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2D2C2B2A292827262524232221
201F1E1D1C1B1A191817161514131211100F0E0D0C0B
>
<
B3B3B3B3B2B2B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAFAEAEAEAEAEADADADADACACACACACAB
ABABABABAAAAAAAAA9A9A9A9A9A8A8A8A8A7A7A7A7A6A6A6A6A6A5A5A5A5A4A4A4A4A3A3A3A3A3A2
A2A2A2A1A1A1A1A0A0A0A09F9F9F9F9E9E9E9E9D9D9D
>
<
929291919090908F8F8E8E8D8D8C8C8B8B8A8989888887878686858584838382828181807F7F7E7E
7D7C7C7B7B7A7A797878777776757574747372727170706F6F6E6D6D6C6B6B6A6A69686867666665
65646363626161605F5F5E5E5D5C5C5B5A5A59585857
>
4 %_Br
<
D5D5D5D5D5D4D4D4D3D3D3D3D2D2D2D2D1D1D1D0D0D0CFCFCECECECECDCCCCCBCBCBCAC9C9C9C8C8
C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBEBEBDBCBCBBBABAB9B9B8B8B7B6B6B5B5B4B3B2B2B1B0
AFAEAEADACABAAA9A8A7A6A6A5A4A3A3A1A0A09E9D9D9C9B9A999897969594939291908F8E8D8C8B
8B8989888786858483
>
<
1F1F1F1E1E1E1E1E1D1D1D1D1C1C1C1C1B1B1B1B1A1A1A1B1919191A181819171718181617171715
16161414151514141413131313121213111212111111121010111010100F0F0F100E0F0F0E0E0E0D
0D0E0E0D0D0E0C0D0D0C0D0D0B0C0C0D0B0C0C0B0B0B0A0B0B0A0A0B0A0A0B0A0A0A0B0A0A0B0A0A
0B0A0A0B0A0A0B0A0B
>
<
E3E3E1E2E0E0DEDEDDDDDBDBD9D9D8D6D6D5D5D3D4D2D1D0CFCFCECCCDCBCBCAC8C8C6C7C5C4C4C3
C1C1C0C0BEBDBDBCBABAB9B7B7B6B5B4B3B2B2B0AFAFADACACAAA9A9A7A6A6A4A2A3A19FA09E9D9D
9B999998969695939192908F8F8D8B8B8A888686848383817F807E7C7B7B79787876757373717070
6F6E6C6B6B69676866
>
<
03030303030303030303030303030303020202020202020202020202020202010101010101010101
01010101010101010100000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000
>
<
0B0C0C0D0D0E0F0F101112121314151516171819191A1B1C1D1D1E1F202122232324252627282929
2A2B2C2D2E2F3030313233343536373839393A3B3C3D3E3F40414243444546464748494A4B4C4D4E
4F50515253545556575859595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475
767778797A7B7C7D7E
>
<
9D9D9D9E9E9E9E9E9F9F9F9FA0A0A0A0A1A1A1A1A2A2A2A2A3A3A3A3A4A4A4A5A5A5A5A6A6A6A6A7
A7A7A8A8A8A8A9A9A9AAAAAAAAABABABACACACADADADADAEAEAEAFAFAFB0B0B0B0B1B1B1B2B2B2B3
B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B7B8B8B8B9B9B9BABABABBBBBBBCBCBCBDBDBDBDBEBEBEBFBF
BFC0C0C0C1C1C1C2C2
>
<
5757585859595A5A5B5B5C5C5D5D5E5F5F60606161626363646465666667676869696A6A6B6C6C6D
6E6E6F6F7071717273737475757677777879797A7B7B7C7D7D7E7F7F808181828383848585868787
8889898A8B8B8C8D8E8E8F9090919292939495959697979899999A9B9C9C9D9E9E9FA0A1A1A2A3A3
A4A5A6A6A7A8A9A9AA
>
4 %_Br
<
838281807F7E7D7C7B7A7878767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B
5A5958575554535251504F4E4D4C4A494847464544434241403E3D3C3B3A39383736353433323130
2F2E2D2C2B2A292827262524232221201F1E1D1C1B191817161514131211100F0E0D0C0B0A090807
06050504030201000000
>
<
0B0B0A0B0A0A090A0809080808080708070706070807070607060606060506050605050405050405
04050404040403040304030303030203030303020302030202020201020102010101010201020101
01010101000100010001000100010101010101000100000000000000000000000000000000000000
00000000000000000000
>
<
666465636262615F605E5D5D5C5A5B59585857555554535251514F4F4E4D4C4C4A4A494847474644
45434242403E3F3D3C3C3B3939383737353434333132302F2F2E2E2D2B2C2A292928272726242523
2222211F201E1D1D1C1B1B1A1919171616151414131211100E0F0D0C0C0B0B090808070607050505
04030302010101000000
>
0.000031
<
7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5
A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCD
CECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
F6F7F8F9FAFBFCFDFEFF
>
<
C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACBCBCBCCCCCDCDCECECFCFD0D0D1D1D2D2D3D3D3D4D4
D5D5D6D6D7D7D8D8D9D9DADADBDBDCDCDCDDDDDEDEDFDFE0E0E1E1E2E2E3E3E4E4E5E5E5E6E6E7E7
E8E8E9E9EAEAEBEBECECEDEDEEEEEEEFEFF0F0F1F1F2F2F3F3F4F4F5F5F6F6F6F7F7F8F8F9F9FAFA
FBFBFCFCFDFDFEFEFFFF
>
<
AAABABACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B7B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4
C4C5C6C6C7C8C8C9CACACBCCCCCDCECECFD0D0D1D2D2D3D4D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDE
DFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9EAEBEBECEDEDEEEFEFF0F1F1F2F2F3F4F4F5F6F6F7F8F8
F9FAFAFBFCFCFDFEFEFF
>
4 %_Br
[
0.869718 0.33048 0.890227 0.237491 0.094118 0.423529 0.254902 2 53.8461 2.2472 %_BS
%_0.869718 0.33048 0.890227 0.237491 0.094118 0.423529 0.254902 2 53.8461 2.2472 Bs
0.836698 0.122683 0.891814 0.013367 0.043137 0.615686 0.341176 2 53.8461 28.0899 %_BS
%_0.836698 0.122683 0.891814 0.013367 0.043137 0.615686 0.341176 2 53.8461 28.0899 Bs
0.618738 0.09012 0.529992 0.000031 0.4 0.701961 0.572549 2 53.8461 35.6725 %_BS
%_0.618738 0.09012 0.529992 0.000031 0.4 0.701961 0.572549 2 53.8461 35.6725 Bs
0.836698 0.122683 0.891814 0.013367 0.043137 0.615686 0.341176 2 53.8461 65.7303 %_BS
%_0.836698 0.122683 0.891814 0.013367 0.043137 0.615686 0.341176 2 53.8461 65.7303 Bs
0.513237 0.041474 0.399451 0.000031 0.494118 0.760784 0.666667 2 50 73.6842 %_BS
%_0.513237 0.041474 0.399451 0.000031 0.494118 0.760784 0.666667 2 50 73.6842 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Fade To Center Black)
(Fade To Center Black) 0 3 Bd
[
0.716609
0.702357
0.623194
0.772702
0.113725
0.094118
0.109804
4 %_Br
0.716609
0.702357
0.623194
0.772702
0.113725
0.094118
0.109804
4 %_Br
[
0.716609 0.702357 0.623194 0.772702 0.113725 0.094118 0.109804 2 50 100 %_BS
%_0.716609 0.702357 0.623194 0.772702 0.113725 0.094118 0.109804 2 50 100 Bs
0.716609 0.702357 0.623194 0.772702 0.113725 0.094118 0.109804 2 50 50 %_BS
%_0.716609 0.702357 0.623194 0.772702 0.113725 0.094118 0.109804 2 50 50 Bs
0.716609 0.702357 0.623194 0.772702 0.113725 0.094118 0.109804 2 50 0 %_BS
%_0.716609 0.702357 0.623194 0.772702 0.113725 0.094118 0.109804 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White Border Grey Vignette)
(White Border Grey Vignette) 1 3 Bd
[
<
97979797979797979797979797979797979797979797979797979797979797979797979797979797
97979797979797979797979797979797979797979797979797979797979797979797979797979797
97979797979797979797979797979797979797979797979797979797979796969696969696969696
96969696969696969696969696969696969595959595959595959595959595959494949494949494
949494939394949494949492929393939393929292929292919191919190909090908F8F8F90908F
8F8F8F8E8E8E8D8D8D8D8C8C8C8B8B8B8A8A8A898989888887878786868585858484838382828181
80807F7F7E7E7D7E7C7B7B7A7A79787878767675747473727171706F6E6D6D6C6B6A696868676564
6362615F5E5C5B5A585756545251504F4E4C4A494846454342413E3D3C3A3937363433302E2C2B29
28262423211F1D1C1A17171413110E0C0A09070504020000
>
<
7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C
7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C
7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7A7B7B7B7B7B7B7B7B
7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B797A7A7A7A7A7A7A7A7A7A7A7A7A7B79797979797979
79797978787878787878787977787878787878767677777777757576767674747575757373747474
72737373727273737171727070716F6F706E6E6F6E6E6F6D6D6E6C6D6B6C6C6B6B6A6A6969686867
67656664656364636362626160605F5F5F5D5E5D5C5C5B5A59595857565755545453535251504F4E
4D4C4A494A48474645424140403F3E3D3C3B3938373635333231302E2D2D2A2A282726242321201F
1C1C1A1A1816151312120F0E0C0B0B090706040302010000
>
<
6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F
6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F
6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F706E6E6E6E6E6E6E6E
6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6F6E6E6E6E6E6E6E6E6E6E6E6E6E6E6F6D6D6D6D6D6D
6D6D6D6E6E6C6C6C6C6C6C6C6E6C6C6C6C6C6C6D6D6B6B6B6B6C6C6A6A6A6B6B6A6A6A6B6B696969
6A68686869696767686766686866676765666664656563656563646463636162626262616160605F
5F605E5F5D5E5D5C5C5B5B5A5B595A58585957565755555555535453525051504F4E4E4D4C4B4A49
484948474544424140403F3E3D3C3B3A39383635343332322F2E2D2D2B2A2A272726232221201F1D
1D1B1A1818161413120F0F0E0C0C09080605040302010000
>
<
20202020202020202020202020202020202020202020202020202020202020202020202020202020
20202020202020202020202020202020202020202020202020202020202020202020202020202020
20202020202020202020202020202020202020202020202020202020202020201F1F1F1F1F1F1F1F
1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1C1C1C1C1C1C
1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A19191919191918181818181717171717161616
161515151515141414131313131212121111111010100F0F0F0E0E0E0D0D0C0C0C0B0B0A0A0A0A09
09090808080807060606060505050504040404030303030202020202020202010101010101010101
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
>
<
6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D
6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D
6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6E6E6E6E6E6E6E6E6E6E
6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7070707070707070
70707071717171717171717272727272727273737373737374747474747575757575767676767677
777777787878797979797A7A7A7B7B7B7C7C7C7D7D7D7E7E7F7F7F80808181818282838384848585
86868787888889898A8B8B8C8C8D8E8E8F90909192929394959596979899999A9B9C9D9E9E9FA0A1
A2A3A4A5A6A7A8A9AAABACADAFB0B1B2B3B4B6B7B8B9BABCBDBEC0C1C2C4C5C7C8CACBCDCED0D1D3
D4D6D8D9DBDDDEE0E2E4E5E7E9EBEDEFF1F3F5F7F9FBFDFF
>
<
71717171717171717171717171717171717171717171717171717171717171717171717171717171
71717171717171717171717171717171717171717171717171717171717171717171717171717171
71717171717171717171717171717171717171717171717171717171717171727272727272727272
72727272727272727272727272727272727273737373737373737373737373737374747474747474
74747475757575757575757576767676767676777777777777787878787879797979797A7A7A7A7A
7B7B7B7B7C7C7C7C7D7D7D7E7E7E7F7F7F8080808181818282828383848484858586868787888889
898A8A8B8B8C8C8D8D8E8E8F9090919192939394959596979898999A9B9B9C9D9E9F9FA0A1A2A3A4
A5A6A7A8A8A9AAABACAEAFB0B1B2B3B4B5B6B8B9BABBBCBEBFC0C1C3C4C5C7C8CACBCCCECFD1D2D4
D6D7D9DADCDEDFE1E3E4E6E8EAECEDEFF1F3F5F7F9FBFDFF
>
<
77777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777878787878787878
787878787878787878787878787878787878787979797979797979797979797979797A7A7A7A7A7A
7A7A7A7A7A7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C7D7D7D7D7D7D7E7E7E7E7E7F7F7F7F7F808080
8081818181818282828383838384848485858586868687878788888889898A8A8A8B8B8C8C8D8D8E
8E8E8F8F90909192929393949495959697979899999A9B9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A7A8
A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BBBCBDBEBFC0C2C3C4C5C7C8C9CBCCCDCFD0D1D3D4D6
D7D9DADCDDDFE1E2E4E6E7E9EBECEEF0F2F4F5F7F9FBFDFF
>
4 %_Br
0.000031
0.000031
0.000031
0.000031
1
1
1
4 %_Br
[
0.592279 0.486274 0.435248 0.12549 0.427451 0.443137 0.466667 2 87 0 %_BS
%_0.592279 0.486274 0.435248 0.12549 0.427451 0.443137 0.466667 2 87 0 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 83.7231 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 83.7231 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Leaves Graphic)
(Leaves Graphic) 0 0 80.334 77.334 [
%AI3_Tile
(0 O 0 R 0.485756 0.378943 0.330419 0.016327 0.545098 0.564706 0.596078 Xa
 0.485756 0.378943 0.330419 0.016327 0.545098 0.564706 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.6885 30.9795 m
25.876 31.9717 23.5693 31.7236 23.0762 29.8594 c
22.7598 28.6709 23.3369 28.6211 23.3467 27.3223 c
23.3506 26.7256 22.7607 25.6357 21.999 26.1035 c
19.8057 27.4512 21.251 29.6807 18.9316 30.9258 c
18.0752 31.3857 16.791 31.6025 16.208 30.0918 c
15.8076 29.0527 16.0557 27.4346 16.7393 26.3926 c
17.8174 24.7559 18.2344 24.6045 18.3008 22.6875 c
18.3486 21.3154 17.6816 20.3096 16.5234 21.0859 c
14.6279 22.3594 14.8779 23.4648 14.3652 25.2881 c
13.9053 26.9297 12.5605 28.4404 10.5918 28.4678 c
8.4941 28.4951 7.3613 26.5625 8.6387 23.9346 c
9.8604 21.415 13.627 19.7725 12.9961 16.8389 c
12.5908 14.959 9.9072 15.5898 8.3271 18.4854 c
6.3193 22.1602 5.2715 24.9355 2.8477 24.2568 c
-3.915 22.3613 4.0186 6.5742 9.3604 3.249 C
27.6885 30.9795 L
f
74.7803 46.3291 m
72.9443 45.3818 70.6445 45.6836 70.1943 47.5586 c
69.9072 48.7539 70.4854 48.79 70.5264 50.0889 c
70.5439 50.6855 69.9814 51.7881 69.2061 51.3389 c
66.9814 50.043 68.374 47.7813 66.0264 46.5918 c
65.1602 46.1523 63.8701 45.9658 63.3232 47.4893 c
62.9482 48.5371 63.2344 50.1494 63.9434 51.1758 c
65.0596 52.7861 65.4805 52.9268 65.5928 54.8418 c
65.6729 56.2109 65.0273 57.2334 63.8525 56.4844 c
61.9277 55.2568 62.1523 54.1455 61.5967 52.334 c
61.0977 50.7051 59.7188 49.2266 57.748 49.2461 c
55.6494 49.2676 54.5645 51.2275 55.9023 53.8252 c
57.1846 56.3135 60.9893 57.8672 60.4268 60.8154 c
60.0674 62.7031 57.3691 62.1377 55.7217 59.2793 c
53.627 55.6533 52.5117 52.9033 50.1064 53.6406 c
43.3896 55.6953 51.6953 71.2891 57.1143 74.4863 C
74.7803 46.3291 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.216098 0.149569 0.137026 0.000031 0.780392 0.796078 0.811765 Xa
 0.216098 0.149569 0.137026 0.000031 0.780392 0.796078 0.811765 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
17.0654 58.8906 m
12.7451 57.7656 12.3018 52.79 13.1133 49.0762 c
13.9238 45.3613 19.541 39.8438 20.0234 40.5977 c
22.0967 43.8262 24.291 46.1221 21.0342 53.79 C
26.5947 40.4502 37.8477 42.623 Y
17.0654 58.8906 L
f
63.4111 20.7119 m
67.5889 22.29 67.501 27.2842 66.3008 30.8916 c
65.0977 34.498 58.9277 39.3896 58.5273 38.5869 c
56.8105 35.1572 54.8701 32.6416 58.9238 25.3623 C
51.9775 38.0361 41.0215 34.6807 Y
63.4111 20.7119 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.716609 0.702357 0.623194 0.772702 0.113725 0.094118 0.109804 Xa
 0.716609 0.702357 0.623194 0.772702 0.113725 0.094118 0.109804 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
41.0215 34.6807 m
41.251 23.8848 51.8945 21.0586 55.8936 20.9873 C
48.5049 20.5566 45.8486 13.6074 46.0898 13.2861 c
47.5352 11.3574 53.1738 9.6904 56.9893 11.4404 c
60.6055 13.0996 63.3867 17.3389 62.6104 19.1094 C
66.8965 16.1416 72.9023 15.1934 76.8857 16.2373 C
76.6279 17.6484 L
71.5947 16.7344 68.127 17.8652 63.4111 20.7119 C
41.0215 34.6807 L
f
37.8477 42.623 m
38.7646 53.3838 28.4814 57.3242 24.5137 57.8193 C
31.9063 57.4639 35.2852 64.0908 35.0781 64.4346 c
33.8477 66.5068 28.416 68.7637 24.4365 67.4287 c
20.666 66.1631 17.4482 62.2432 18.0322 60.3994 C
14.0869 63.8076 8.2158 65.3877 4.1445 64.7725 C
4.25 63.3428 L
9.3525 63.7168 12.6807 62.2236 17.0654 58.8906 C
37.8477 42.623 L
f
74.7803 46.3291 m
76.4316 47.5684 77.1602 49.7715 75.668 50.9922 c
74.7178 51.7705 74.4326 51.2666 73.2471 51.7949 c
72.7012 52.0391 71.9521 53.0254 72.6943 53.5264 c
74.8281 54.9668 76.2607 52.7285 78.3525 54.3242 c
79.124 54.9131 79.8535 55.9922 78.7197 57.1484 c
77.9404 57.9424 76.3643 58.3877 75.1328 58.1943 c
73.1973 57.8916 72.8857 57.5732 71.1143 58.3057 c
69.8447 58.8291 69.2061 59.8545 70.3926 60.5859 c
72.334 61.7852 73.2383 61.1006 75.1104 60.8125 c
76.7939 60.5537 78.7266 61.1514 79.5645 62.9336 c
80.459 64.8311 79.166 66.6611 76.2451 66.5869 c
73.4482 66.5166 70.3936 63.7666 67.9824 65.5557 c
66.4395 66.7012 68.123 68.8828 71.4141 69.125 c
75.5898 69.4326 78.5508 69.2393 78.9346 71.7256 c
80.0068 78.667 62.3047 77.9434 57.1143 74.4863 C
74.7803 46.3291 L
f
27.6885 30.9795 m
29.3105 29.7012 29.9863 27.4824 28.4658 26.2959 c
27.4951 25.54 27.2236 26.0527 26.0264 25.5518 c
25.4756 25.3203 24.7031 24.3525 25.4326 23.833 c
27.5313 22.3438 29.0156 24.5479 31.0703 22.9014 c
31.8281 22.2939 32.5313 21.1973 31.3701 20.0693 c
30.5723 19.2939 28.9863 18.8877 27.7578 19.1094 c
25.8311 19.458 25.5283 19.7832 23.7393 19.0938 c
22.458 18.5996 21.7939 17.5908 22.9629 16.8301 c
24.877 15.585 25.7949 16.248 27.6738 16.4922 c
29.3643 16.7109 31.2813 16.0674 32.0781 14.2666 c
32.9258 12.3477 31.5908 10.5488 28.6729 10.6924 c
25.877 10.8291 22.8896 13.6514 20.4365 11.9199 c
18.8672 10.8115 20.498 8.5898 23.7813 8.2695 c
27.9492 7.8643 30.915 7.9863 31.2393 5.4912 c
32.1465 -1.4736 14.4648 -0.3311 9.3604 3.249 C
27.6885 30.9795 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
(Black)
Pc
0.000458 0.941253 0.926146 0.000336 0.933333 0.196078 0.168627 Xa
(RGB Red)
Pc
0.096651 0.000031 0.935332 0.000031 0.937255 0.913725 0.164706 Xa
(RGB Yellow)
Pc
0.656306 0.000031 0.998047 0.000031 0.372549 0.733333 0.27451 Xa
(RGB Green)
Pc
0.570764 0.000549 0.135775 0.000031 0.364706 0.784314 0.858824 Xa
(RGB Cyan)
Pc
0.880034 0.763699 0.003235 0.000031 0.223529 0.32549 0.643137 Xa
(RGB Blue)
Pc
0.333043 0.778897 0.000885 0.000031 0.678431 0.34902 0.635294 Xa
(RGB Magenta)
Pc
0.17261 0.941283 0.854459 0.064698 0.756863 0.196078 0.207843 Xa
(R=193 G=39 B=45)
Pc
0.000031 0.935912 0.875914 0.000031 0.933333 0.203922 0.192157 Xa
(R=237 G=28 B=36)
Pc
0.000031 0.759457 0.891752 0.000031 0.94902 0.388235 0.2 Xa
(R=241 G=90 B=36)
Pc
0.000031 0.514458 0.912474 0.000031 0.968627 0.568627 0.192157 Xa
(R=247 G=147 B=30)
Pc
0.000031 0.377234 0.816526 0.000031 0.984314 0.670588 0.278431 Xa
(R=251 G=176 B=59)
Pc
0.076875 0.000031 0.849302 0.000031 0.952941 0.921569 0.262745 Xa
(R=252 G=238 B=33)
Pc
0.230594 0.000031 0.888884 0.000031 0.807843 0.866667 0.27451 Xa
(R=217 G=224 B=33)
Pc
0.524804 0.000031 0.87216 0.000031 0.517647 0.772549 0.341176 Xa
(R=140 G=198 B=63)
Pc
0.727962 0.000061 0.85742 0.000031 0.25098 0.713726 0.372549 Xa
(R=57 G=181 B=74)
Pc
0.836698 0.122683 0.891814 0.013367 0.043137 0.615686 0.341176 Xa
(R=0 G=146 B=69)
Pc
0.869718 0.33048 0.890227 0.237491 0.094118 0.423529 0.254902 Xa
(R=0 G=104 B=55)
Pc
0.748867 0.000031 0.67657 0.000031 0.152941 0.713726 0.501961 Xa
(R=34 G=181 B=115)
Pc
0.764828 0.042329 0.429053 0.000031 0 0.694118 0.647059 Xa
(R=0 G=169 B=157)
Pc
0.709621 0.142306 0.000031 0.000031 0.109804 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.848478 0.514855 0.000031 0.000031 0.121569 0.45098 0.733333 Xa
(R=0 G=113 B=188)
Pc
0.914702 0.896513 0.00647 0.000549 0.235294 0.243137 0.6 Xa
(R=46 G=49 B=146)
Pc
0.957305 0.990326 0.306218 0.21796 0.192157 0.14902 0.380392 Xa
(R=27 G=20 B=100)
Pc
0.733181 0.91812 0.002716 0.001007 0.4 0.231373 0.588235 Xa
(R=102 G=45 B=145)
Pc
0.527184 0.916075 0.000031 0.000031 0.54902 0.227451 0.588235 Xa
(R=147 G=39 B=143)
Pc
0.387274 1 0.312779 0.076509 0.607843 0.12549 0.407843 Xa
(R=158 G=0 B=93)
Pc
0.105043 0.96939 0.413489 0.000671 0.847059 0.160784 0.396078 Xa
(R=212 G=20 B=90)
Pc
0.000031 0.916045 0.129305 0.000031 0.933333 0.211765 0.521569 Xa
(R=237 G=30 B=121)
Pc
0.258457 0.302251 0.395331 0.000488 0.752941 0.670588 0.592157 Xa
(R=199 G=178 B=153)
Pc
0.433387 0.440558 0.491646 0.074434 0.568627 0.509804 0.470588 Xa
(R=153 G=134 B=117)
Pc
0.533562 0.535058 0.5729 0.235019 0.431373 0.384314 0.356863 Xa
(R=115 G=99 B=87)
Pc
0.604822 0.609735 0.614435 0.429908 0.305882 0.270588 0.258824 Xa
(R=83 G=71 B=65)
Pc
0.255558 0.405676 0.596124 0.017884 0.745098 0.588235 0.443137 Xa
(R=198 G=156 B=109)
Pc
0.342046 0.498817 0.681941 0.113039 0.623529 0.47451 0.34902 Xa
(R=166 G=124 B=82)
Pc
0.389349 0.563836 0.795285 0.243351 0.521569 0.380392 0.243137 Xa
(R=140 G=98 B=57)
Pc
0.419776 0.622339 0.90631 0.384344 0.427451 0.294118 0.14902 Xa
(R=117 G=76 B=36)
Pc
0.438087 0.682551 0.95642 0.521263 0.34902 0.215686 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.508507 0.722103 0.831266 0.714809 0.235294 0.113725 0.003922 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (Fade To Center Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade To Center Black)
Pc
Bb
0 0 0 0 Bh
2 (White Border Grey Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White Border Grey Vignette)
Pc
Bb
2 (Blue Strike) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Blue Strike)
Pc
Bb
0 0 0 0 Bh
2 (Broccoli) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Broccoli)
Pc
(Leaves Graphic) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves Graphic)
Pc
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.742885 0.681331 0.64654 0.823056 0.062745 0.062745 0.070588 Xa
(R=26 G=26 B=26)
Pc
0.717555 0.639216 0.607416 0.582147 0.188235 0.196078 0.203922 Xa
(R=51 G=51 B=51)
Pc
0.674861 0.589593 0.547601 0.362463 0.290196 0.298039 0.309804 Xa
(R=77 G=77 B=77)
Pc
0.617243 0.522393 0.481575 0.193484 0.388235 0.396078 0.411765 Xa
(R=102 G=102 B=102)
Pc
0.538811 0.446479 0.40885 0.075502 0.486275 0.490196 0.509804 Xa
(R=128 G=128 B=128)
Pc
0.459754 0.363256 0.344793 0.013733 0.568627 0.580392 0.596078 Xa
(R=153 G=153 B=153)
Pc
0.34583 0.270787 0.251835 0.000031 0.666667 0.67451 0.690196 Xa
(R=179 G=179 B=179)
Pc
0.237186 0.177768 0.173953 0.000031 0.760784 0.768627 0.776471 Xa
(R=204 G=204 B=204)
Pc
0.119692 0.08658 0.080201 0.000031 0.866667 0.870588 0.878431 Xa
(R=230 G=230 B=230)
Pc
0.057099 0.046998 0.039551 0.000031 0.929412 0.92549 0.929412 Xa
(R=242 G=242 B=242)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 31 26 23 0 100 Lb
(set) Ln
0 A
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
0 J 0 j 1 w 4 M []0 d1 XR
309.1338 107.0645 m
313.2383 105.502 317.4951 106.4346 320.1748 109.3262 c
322.7822 112.3184 322.5029 116.6748 320.2402 119.2129 c
317.918 121.7217 314.2451 122.5811 311.2871 120.71 c
309.8867 119.6162 309.4531 117.5918 310.2041 116.1143 c
310.8652 114.5693 312.4688 113.7451 313.9932 113.5117 c
310.7129 114.3076 309.876 118.4316 312.1377 119.4795 c
314.1416 120.4033 317.084 119.334 318.1729 117.5938 c
319.4297 115.8115 319.2412 113.1172 317.6816 111.6025 c
316.2148 110.1035 313.0449 109.4092 310.5684 110.5186 C
310.5781 110.543 l
309.1572 111.1875 307.6748 112.1504 306.915 114.8076 C
306.8525 114.7939 l
303.6572 125.9443 319.7354 130.2129 325.9297 120.1152 c
323.7871 125.6191 317.9736 128.6162 312.4404 127.8799 c
309.6738 127.541 306.7734 126.1523 304.9033 123.5 c
303.0142 120.8291 302.5342 117.335 303.3047 113.877 C
303.2427 113.8643 l
304.4414 109.6855 306.8926 108.042 309.124 107.042 C
309.1338 107.0645 L
f
357.3125 107.0645 m
361.417 105.502 365.6738 106.4346 368.3535 109.3262 c
370.9619 112.3184 370.6836 116.6748 368.4189 119.2129 c
366.0967 121.7217 362.4258 122.5811 359.4668 120.71 c
358.0664 119.6162 357.6318 117.5918 358.3848 116.1143 c
359.0459 114.5693 360.6475 113.7451 362.1738 113.5117 c
358.8926 114.3076 358.0547 118.4316 360.3174 119.4795 c
362.3223 120.4033 365.2627 119.334 366.3516 117.5938 c
367.6094 115.8115 367.4199 113.1172 365.8613 111.6025 c
364.3936 110.1035 361.2236 109.4092 358.749 110.5186 C
358.7568 110.543 l
357.3369 111.1875 355.8555 112.1504 355.0938 114.8076 C
355.0313 114.7939 l
351.8359 125.9443 367.916 130.2129 374.1104 120.1152 c
371.9658 125.6191 366.1533 128.6162 360.6211 127.8799 c
357.8555 127.541 354.9521 126.1523 353.083 123.5 c
351.1953 120.8291 350.7129 117.335 351.4844 113.877 C
351.4219 113.8643 l
352.6211 109.6855 355.0713 108.042 357.3037 107.042 C
357.3125 107.0645 L
f
337.9502 106.6152 m
344.2988 106.833 347.8965 109.2637 351.6787 112.7891 c
346.6836 111.1445 343.2637 110.3438 337.9707 110.3535 C
337.9707 110.377 l
337.1904 110.3486 336.4482 110.4375 335.1543 110.5967 C
335.1426 110.5322 l
330.6182 111.1777 327.3359 111.9766 323.2051 114.4268 c
325.9502 110.4414 329.2832 108.0254 334.5938 106.9102 C
334.584 106.8467 l
336.1367 106.6523 337.0264 106.5635 337.9502 106.5908 C
337.9502 106.6152 L
f
335.2637 123.2754 m
338.1602 125.4043 343.0967 123.209 343.043 120.1855 c
343.1914 118.6924 342.168 117.2695 340.3428 116.8633 c
338.6865 116.3438 336.0742 117.3545 336.5488 119.9961 c
335.2822 117.5654 338.1211 115.0605 340.4912 115.3721 c
342.8809 115.2451 345.5264 117.3232 345.6689 120.0889 c
346.1484 125.6299 339.0557 130.1611 332.9873 126.2432 C
332.9727 126.2627 l
331.4502 125.0713 329.9082 123.1592 329.9629 119.791 C
330.0283 119.791 l
330.2725 113.918 335.5898 110.7793 339.3281 110.5527 c
343.1172 110.0947 347.4043 109.6191 351.1318 112.0977 c
347.0869 110.6221 343.3174 111.9873 339.9258 112.9434 c
336.3936 113.9102 333.8574 116.2188 333.6885 119.9102 C
333.7539 119.9131 l
333.752 121.8242 334.4678 122.5791 335.2783 123.2539 C
335.2637 123.2754 L
f
404.5518 107.0645 m
408.6553 105.502 412.9141 106.4346 415.5928 109.3262 c
418.2012 112.3184 417.9219 116.6748 415.6582 119.2129 c
413.3359 121.7217 409.6641 122.5811 406.7051 120.71 c
405.3057 119.6162 404.8721 117.5918 405.623 116.1143 c
406.2842 114.5693 407.8857 113.7451 409.4121 113.5117 c
406.1318 114.3076 405.2939 118.4316 407.5557 119.4795 c
409.5605 120.4033 412.501 119.334 413.5898 117.5938 c
414.8486 115.8115 414.6592 113.1172 413.0996 111.6025 c
411.6328 110.1035 408.4609 109.4092 405.9873 110.5186 C
405.9961 110.543 l
404.5771 111.1875 403.0938 112.1504 402.333 114.8076 C
402.2695 114.7939 l
399.0752 125.9443 415.1543 130.2129 421.3486 120.1152 c
419.2041 125.6191 413.3926 128.6162 407.8594 127.8799 c
405.0938 127.541 402.1914 126.1523 400.3213 123.5 c
398.4336 120.8291 397.9521 117.335 398.7246 113.877 C
398.6611 113.8643 l
399.8604 109.6855 402.3105 108.042 404.543 107.042 C
404.5518 107.0645 L
f
385.1904 106.6152 m
391.5371 106.833 395.1348 109.2637 398.918 112.7891 c
393.9219 111.1445 390.502 110.3438 385.209 110.3535 C
385.209 110.377 l
384.4287 110.3486 383.6865 110.4375 382.3926 110.5967 C
382.3818 110.5322 l
377.8564 111.1777 374.5762 111.9766 370.4453 114.4268 c
373.1904 110.4414 376.5215 108.0254 381.833 106.9102 C
381.8232 106.8467 l
383.376 106.6523 384.2646 106.5635 385.1904 106.5908 C
385.1904 106.6152 L
f
382.5029 123.2754 m
385.3984 125.4043 390.335 123.209 390.2813 120.1855 c
390.4297 118.6924 389.4053 117.2695 387.5801 116.8633 c
385.9248 116.3438 383.3125 117.3545 383.7871 119.9961 c
382.5205 117.5654 385.3613 115.0605 387.7295 115.3721 c
390.1191 115.2451 392.7646 117.3232 392.9063 120.0889 c
393.3867 125.6299 386.2939 130.1611 380.2256 126.2432 C
380.2129 126.2627 l
378.6885 125.0713 377.1484 123.1592 377.2012 119.791 C
377.2666 119.791 l
377.5127 113.918 382.8281 110.7793 386.5664 110.5527 c
390.3555 110.0947 394.6426 109.6191 398.3701 112.0977 c
394.3252 110.6221 390.5566 111.9873 387.165 112.9434 c
383.6318 113.9102 381.0967 116.2188 380.9277 119.9102 C
380.9932 119.9131 l
380.9902 121.8242 381.7061 122.5791 382.5166 123.2539 C
382.5029 123.2754 L
f
451.791 107.0645 m
455.8945 105.502 460.1523 106.4346 462.832 109.3262 c
465.4395 112.3184 465.1602 116.6748 462.8975 119.2129 c
460.5752 121.7217 456.9023 122.5811 453.9434 120.71 c
452.5439 119.6162 452.1104 117.5918 452.8604 116.1143 c
453.5225 114.5693 455.125 113.7451 456.6504 113.5117 c
453.3701 114.3076 452.5332 118.4316 454.7949 119.4795 c
456.7988 120.4033 459.7393 119.334 460.8301 117.5938 c
462.0869 115.8115 461.8984 113.1172 460.3389 111.6025 c
458.8721 110.1035 455.7012 109.4092 453.2256 110.5186 C
453.2354 110.543 l
451.8154 111.1875 450.332 112.1504 449.5723 114.8076 C
449.5098 114.7939 l
446.3135 125.9443 462.3926 130.2129 468.5869 120.1152 c
466.4424 125.6191 460.6309 128.6162 455.0977 127.8799 c
452.3311 127.541 449.4307 126.1523 447.5605 123.5 c
445.6719 120.8291 445.1914 117.335 445.9629 113.877 C
445.8994 113.8643 l
447.0986 109.6855 449.5479 108.042 451.7813 107.042 C
451.791 107.0645 L
f
432.4287 106.6152 m
438.7754 106.833 442.374 109.2637 446.1563 112.7891 c
441.1611 111.1445 437.7393 110.3438 432.4492 110.3535 C
432.4492 110.377 l
431.668 110.3486 430.9248 110.4375 429.6299 110.5967 C
429.6201 110.5322 l
425.0947 111.1777 421.8145 111.9766 417.6836 114.4268 c
420.4287 110.4414 423.7607 108.0254 429.0713 106.9102 C
429.0625 106.8467 l
430.6152 106.6523 431.5029 106.5635 432.4287 106.5908 C
432.4287 106.6152 L
f
429.7422 123.2754 m
432.6377 125.4043 437.5742 123.209 437.5205 120.1855 c
437.6689 118.6924 436.6455 117.2695 434.8203 116.8633 c
433.1641 116.3438 430.5518 117.3545 431.0264 119.9961 c
429.7598 117.5654 432.5996 115.0605 434.9688 115.3721 c
437.3574 115.2451 440.0049 117.3232 440.1455 120.0889 c
440.625 125.6299 433.5332 130.1611 427.4639 126.2432 C
427.4512 126.2627 l
425.9277 125.0713 424.3867 123.1592 424.4404 119.791 C
424.5049 119.791 l
424.751 113.918 430.0684 110.7793 433.8037 110.5527 c
437.5947 110.0947 441.8809 109.6191 445.6094 112.0977 c
441.5635 110.6221 437.7949 111.9873 434.4043 112.9434 c
430.8721 113.9102 428.335 116.2188 428.166 119.9102 C
428.2324 119.9131 l
428.2295 121.8242 428.9453 122.5791 429.7549 123.2539 C
429.7422 123.2754 L
f
499.0293 107.0645 m
503.1338 105.502 507.3906 106.4346 510.0703 109.3262 c
512.6787 112.3184 512.3994 116.6748 510.1357 119.2129 c
507.8135 121.7217 504.1416 122.5811 501.1826 120.71 c
499.7822 119.6162 499.3486 117.5918 500.0986 116.1143 c
500.7617 114.5693 502.3643 113.7451 503.8867 113.5117 c
500.6084 114.3076 499.7715 118.4316 502.0332 119.4795 c
504.0371 120.4033 506.9795 119.334 508.0684 117.5938 c
509.3262 115.8115 509.1367 113.1172 507.5781 111.6025 c
506.1104 110.1035 502.9404 109.4092 500.4658 110.5186 C
500.4736 110.543 l
499.0537 111.1875 497.5703 112.1504 496.8105 114.8076 C
496.748 114.7939 l
493.5527 125.9443 509.6318 130.2129 515.8262 120.1152 c
513.6826 125.6191 507.8701 128.6162 502.3369 127.8799 c
499.5723 127.541 496.6689 126.1523 494.7988 123.5 c
492.9111 120.8291 492.4297 117.335 493.2012 113.877 C
493.1387 113.8643 l
494.3379 109.6855 496.7881 108.042 499.0205 107.042 C
499.0293 107.0645 L
f
479.667 106.6152 m
486.0146 106.833 489.6123 109.2637 493.3945 112.7891 c
488.3994 111.1445 484.9785 110.3438 479.6875 110.3535 C
479.6875 110.377 l
478.9063 110.3486 478.1641 110.4375 476.8711 110.5967 C
476.8594 110.5322 l
472.334 111.1777 469.0527 111.9766 464.9219 114.4268 c
467.667 110.4414 471 108.0254 476.3096 106.9102 C
476.3008 106.8467 l
477.8535 106.6523 478.7422 106.5635 479.667 106.5908 C
479.667 106.6152 L
f
476.9805 123.2754 m
479.877 125.4043 484.8135 123.209 484.7588 120.1855 c
484.9072 118.6924 483.8838 117.2695 482.0586 116.8633 c
480.4033 116.3438 477.791 117.3545 478.2656 119.9961 c
476.999 117.5654 479.8379 115.0605 482.207 115.3721 c
484.5977 115.2451 487.2432 117.3232 487.3857 120.0889 c
487.8643 125.6299 480.7725 130.1611 474.7041 126.2432 C
474.6895 126.2627 l
473.166 125.0713 471.625 123.1592 471.6797 119.791 C
471.7451 119.791 l
471.9893 113.918 477.3066 110.7793 481.043 110.5527 c
484.834 110.0947 489.1191 109.6191 492.8486 112.0977 c
488.8018 110.6221 485.0332 111.9873 481.6426 112.9434 c
478.1094 113.9102 475.5742 116.2188 475.4053 119.9102 C
475.4697 119.9131 l
475.4688 121.8242 476.1836 122.5791 476.9932 123.2539 C
476.9805 123.2754 L
f
546.2676 107.0645 m
550.3721 105.502 554.6289 106.4346 557.3096 109.3262 c
559.918 112.3184 559.6387 116.6748 557.374 119.2129 c
555.0527 121.7217 551.3799 122.5811 548.4209 120.71 c
547.0225 119.6162 546.5869 117.5918 547.3398 116.1143 c
548.001 114.5693 549.6025 113.7451 551.1289 113.5117 c
547.8477 114.3076 547.0107 118.4316 549.2715 119.4795 c
551.2773 120.4033 554.2178 119.334 555.3066 117.5938 c
556.5645 115.8115 556.375 113.1172 554.8164 111.6025 c
553.3496 110.1035 550.1787 109.4092 547.7041 110.5186 C
547.7129 110.543 l
546.292 111.1875 544.8105 112.1504 544.0498 114.8076 C
543.9863 114.7939 l
540.792 125.9443 556.8711 130.2129 563.0654 120.1152 c
560.9209 125.6191 555.1094 128.6162 549.5762 127.8799 c
546.8105 127.541 543.9072 126.1523 542.0371 123.5 c
540.1504 120.8291 539.668 117.335 540.4404 113.877 C
540.377 113.8643 l
541.5771 109.6855 544.0273 108.042 546.2598 107.042 C
546.2676 107.0645 L
f
526.9053 106.6152 m
533.2539 106.833 536.8516 109.2637 540.6338 112.7891 c
535.6387 111.1445 532.2188 110.3438 526.9258 110.3535 C
526.9258 110.377 l
526.1445 110.3486 525.4033 110.4375 524.1094 110.5967 C
524.0977 110.5322 l
519.5732 111.1777 516.292 111.9766 512.1611 114.4268 c
514.9063 110.4414 518.2383 108.0254 523.5479 106.9102 C
523.54 106.8467 l
525.0928 106.6523 525.9814 106.5635 526.9053 106.5908 C
526.9053 106.6152 L
f
524.2197 123.2754 m
527.1152 125.4043 532.0518 123.209 531.998 120.1855 c
532.1455 118.6924 531.1221 117.2695 529.2979 116.8633 c
527.6416 116.3438 525.0293 117.3545 525.5039 119.9961 c
524.2373 117.5654 527.0762 115.0605 529.4463 115.3721 c
531.8359 115.2451 534.4814 117.3232 534.624 120.0889 c
535.1025 125.6299 528.0107 130.1611 521.9424 126.2432 C
521.9287 126.2627 l
520.4033 125.0713 518.8613 123.1592 518.918 119.791 C
518.9834 119.791 l
519.2285 113.918 524.5449 110.7793 528.2832 110.5527 c
532.0723 110.0947 536.3584 109.6191 540.0869 112.0977 c
536.042 110.6221 532.2715 111.9873 528.8818 112.9434 c
525.3486 113.9102 522.8135 116.2188 522.6445 119.9102 C
522.709 119.9131 l
522.707 121.8242 523.4219 122.5791 524.2334 123.2539 C
524.2197 123.2754 L
f
574.1445 106.6152 m
580.4922 106.833 584.0898 109.2637 587.873 112.7891 c
582.8779 111.1445 579.457 110.3438 574.1641 110.3535 C
574.1641 110.377 l
573.3848 110.3486 572.6416 110.4375 571.3477 110.5967 C
571.3359 110.5322 l
566.8115 111.1777 563.5313 111.9766 559.3994 114.4268 c
562.1445 110.4414 565.4775 108.0254 570.7881 106.9102 C
570.7783 106.8467 l
572.3311 106.6523 573.2197 106.5635 574.1445 106.5908 C
574.1445 106.6152 L
f
571.458 123.2754 m
574.3535 125.4043 579.29 123.209 579.2373 120.1855 c
579.3857 118.6924 578.3613 117.2695 576.5371 116.8633 c
574.8809 116.3438 572.2676 117.3545 572.7422 119.9961 c
571.4766 117.5654 574.3154 115.0605 576.6855 115.3721 c
579.0742 115.2451 581.7207 117.3232 581.8623 120.0889 c
582.3418 125.6299 575.249 130.1611 569.1807 126.2432 C
569.167 126.2627 l
567.6445 125.0713 566.1006 123.1592 566.1572 119.791 C
566.2217 119.791 l
566.4678 113.918 571.7852 110.7793 575.5215 110.5527 c
579.3105 110.0947 583.5977 109.6191 587.3262 112.0977 c
583.2803 110.6221 579.5117 111.9873 576.1201 112.9434 c
572.5879 113.9102 570.0518 116.2188 569.8828 119.9102 C
569.9482 119.9131 l
569.9463 121.8242 570.6621 122.5791 571.4717 123.2539 C
571.458 123.2754 L
f
*u
1 D
366.4063 160.6406 m
346.3672 158.4678 350.4727 133.9219 325.6045 135.6133 c
336.9189 132.7754 343.4297 135.9785 348.1846 140.9551 C
348.2686 140.873 l
350.3027 143.0361 353.5137 144.6133 356.4512 143.7881 c
358.707 143.1553 359.8643 141.208 359.9238 138.9727 c
360.0449 134.4199 353.0059 133.4824 352.0107 137.7988 c
351.0479 141.9805 356.7031 143.4561 357.2129 139.7275 C
357.2119 139.7344 l
357.3164 137.8857 355.1865 137.7734 354.4014 138.3506 C
354.1855 138.5098 l
354.3945 137.7666 357.4951 137.377 357.4141 139.7422 c
357.3877 140.541 356.8994 141.4424 356.1396 141.8604 c
354.1689 142.9434 350.8115 141.2178 351.5078 137.6914 c
352.5186 132.585 361.0645 133.4209 360.8271 139.3096 c
360.625 144.4053 355.791 146.3672 351.125 144.4805 c
356.0352 151.0879 359.4209 158.8652 366.4063 160.6406 C
f
0 D
324.0107 137.3086 m
317.208 133.9932 301.8696 137.5928 304.6714 150.3232 c
307.1328 161.5127 325.2646 162.0713 324.6982 148.6982 c
324.2607 138.4502 308.5918 138.6982 308.7764 148.7744 c
308.918 156.4414 320.4102 156.6016 320.4277 149.457 c
320.4443 144.1709 312.375 144.5381 312.7158 149.4316 c
312.8809 151.8154 315.6387 151.8271 316.5693 150.3799 C
316.8398 150.2568 l
317.4844 151.2432 312.6309 153.333 312.3008 149.4668 c
311.8037 143.6572 321.9795 143.4258 320.9189 150.499 c
319.7832 158.084 306.252 156.667 308.1738 146.707 c
309.9326 137.5859 325.1826 137.9277 325.7539 148.6436 c
325.873 150.9063 325.501 152.8154 324.7773 154.3877 c
326.291 152.5469 328.9971 151.8262 330.6592 154.4326 c
332.7803 157.7539 328.0225 160.1064 326.8682 157.3936 c
326.3574 156.1982 327.1504 155.0986 327.5439 155.1689 c
326.1709 156.5459 327.417 157.7539 v
329.1338 159.416 332.6299 156.6406 329.4658 153.8467 c
327.0596 151.7207 322.3506 156.5273 325.5264 159.5156 c
329.7041 163.4453 335.0986 158.3125 332.1631 152.877 c
325.8809 149.333 324.3379 141.665 324.0107 137.3086 C
f
323.9307 155.8564 m
323.4238 157.2393 323.5684 158.8467 324.8848 160.1709 c
329.6543 164.96 336.3994 159.3164 333.6689 152.8311 c
334.0479 147.9902 333.0674 143.3027 330.6846 140.9209 c
335.4209 142.0146 339.4727 140.5117 y
335.5557 138.0273 330.4316 136.3213 325.2139 136.1143 c
318.7852 132.6699 303.8091 134.8076 302.9937 146.4326 c
302.0469 159.9707 318.3438 163.7695 323.9307 155.8564 C
f
345.166 163.916 m
346.9629 161.2803 348.4297 157.2139 347.4414 154.6055 c
346.876 153.1143 345.2578 152.2314 343.0713 152.0313 c
343.2529 156.1758 340.5205 157.9502 345.166 163.916 C
f
347.123 151.2129 m
343.3447 140.2393 341.3857 143.79 333.4629 142.6963 c
337.1963 149.8018 333.5527 154.3994 340.2939 157.8145 c
342.2041 153.9004 341.2939 149.7549 340.7939 148.6621 c
342.8896 150.5752 345.7568 151.6221 347.123 151.2129 C
f
348.2988 164.9863 m
353.9326 163.2969 354.8984 158.4307 353.7725 157.041 c
352.6436 155.6504 350.874 153.5791 350.874 153.5801 c
351.2764 158.5498 350.7939 162.8945 348.2988 164.9863 C
f
*U
*u
1 D
421.7734 160.6406 m
401.7344 158.4678 405.8379 133.9219 380.9717 135.6133 c
392.2852 132.7754 398.7969 135.9785 403.5498 140.9551 C
403.6357 140.873 l
405.6699 143.0361 408.8809 144.6133 411.8184 143.7881 c
414.0742 143.1553 415.2314 141.208 415.29 138.9727 c
415.4121 134.4199 408.373 133.4824 407.377 137.7988 c
406.415 141.9805 412.0703 143.4561 412.5791 139.7275 C
412.5791 139.7344 l
412.6836 137.8857 410.5518 137.7734 409.7676 138.3506 C
409.5527 138.5098 l
409.7617 137.7666 412.8623 137.377 412.7813 139.7422 c
412.7539 140.541 412.2656 141.4424 411.5059 141.8604 c
409.5361 142.9434 406.1787 141.2178 406.874 137.6914 c
407.8857 132.585 416.4297 133.4209 416.1943 139.3096 c
415.9922 144.4053 411.1572 146.3672 406.4912 144.4805 c
411.4023 151.0879 414.7871 158.8652 421.7734 160.6406 C
f
0 D
379.377 137.3086 m
372.5742 133.9932 357.2354 137.5928 360.0371 150.3232 c
362.499 161.5127 380.6309 162.0713 380.0654 148.6982 c
379.6279 138.4502 363.959 138.6982 364.1436 148.7744 c
364.2852 156.4414 375.7773 156.6016 375.7949 149.457 c
375.8105 144.1709 367.7412 144.5381 368.0811 149.4316 c
368.248 151.8154 371.0059 151.8271 371.9355 150.3799 C
372.207 150.2568 l
372.8506 151.2432 367.9961 153.333 367.666 149.4668 c
367.1709 143.6572 377.3467 143.4258 376.2861 150.499 c
375.1494 158.084 361.6182 156.667 363.541 146.707 c
365.2998 137.5859 380.5479 137.9277 381.1201 148.6436 c
381.2402 150.9063 380.8672 152.8154 380.1436 154.3877 c
381.6572 152.5469 384.3633 151.8262 386.0264 154.4326 c
388.1475 157.7539 383.3887 160.1064 382.2354 157.3936 c
381.7256 156.1982 382.5166 155.0986 382.9111 155.1689 c
381.5381 156.5459 382.7822 157.7539 v
384.499 159.416 387.9971 156.6406 384.833 153.8467 c
382.4258 151.7207 377.7158 156.5273 380.8936 159.5156 c
385.0713 163.4453 390.4648 158.3125 387.5283 152.877 c
381.248 149.333 379.7051 141.665 379.377 137.3086 C
f
379.2959 155.8564 m
378.7891 157.2393 378.9355 158.8467 380.252 160.1709 c
385.0215 164.96 391.7666 159.3164 389.0361 152.8311 c
389.415 147.9902 388.4346 143.3027 386.0508 140.9209 c
390.7881 142.0146 394.8398 140.5117 y
390.9229 138.0273 385.7988 136.3213 380.5811 136.1143 c
374.1514 132.6699 359.1758 134.8076 358.3604 146.4326 c
357.4131 159.9707 373.7109 163.7695 379.2959 155.8564 C
f
400.5332 163.916 m
402.3271 161.2803 403.7969 157.2139 402.8076 154.6055 c
402.2432 153.1143 400.623 152.2314 398.4375 152.0313 c
398.6191 156.1758 395.8877 157.9502 400.5332 163.916 C
f
402.4883 151.2129 m
398.71 140.2393 396.751 143.79 388.8281 142.6963 c
392.5615 149.8018 388.9199 154.3994 395.6592 157.8145 c
397.5713 153.9004 396.6611 149.7549 396.1611 148.6621 c
398.2559 150.5752 401.123 151.6221 402.4883 151.2129 C
f
403.666 164.9863 m
409.2998 163.2969 410.2656 158.4307 409.1396 157.041 c
408.0107 155.6504 406.2402 153.5791 406.2402 153.5801 c
406.6426 158.5498 406.1602 162.8945 403.666 164.9863 C
f
*U
*u
1 D
477.1406 160.6406 m
457.1016 158.4678 461.2051 133.9219 436.3369 135.6133 c
447.6523 132.7754 454.1621 135.9785 458.918 140.9551 C
459.002 140.873 l
461.0361 143.0361 464.248 144.6133 467.1855 143.7881 c
469.4404 143.1553 470.5986 141.208 470.6572 138.9727 c
470.7773 134.4199 463.7393 133.4824 462.7441 137.7988 c
461.7813 141.9805 467.4355 143.4561 467.9443 139.7275 C
467.9443 139.7344 l
468.0498 137.8857 465.9189 137.7734 465.1348 138.3506 C
464.9189 138.5098 l
465.126 137.7666 468.2285 137.377 468.1484 139.7422 c
468.1201 140.541 467.6309 141.4424 466.8721 141.8604 c
464.9023 142.9434 461.5449 141.2178 462.2412 137.6914 c
463.252 132.585 471.7969 133.4209 471.5615 139.3096 c
471.3574 144.4053 466.5234 146.3672 461.8574 144.4805 c
466.7686 151.0879 470.1543 158.8652 477.1406 160.6406 C
f
0 D
434.7451 137.3086 m
427.9404 133.9932 412.6025 137.5928 415.4043 150.3232 c
417.8662 161.5127 435.9971 162.0713 435.4297 148.6982 c
434.9941 138.4502 419.3262 138.6982 419.5098 148.7744 c
419.6504 156.4414 431.1426 156.6016 431.1611 149.457 c
431.1777 144.1709 423.1084 144.5381 423.4482 149.4316 c
423.6143 151.8154 426.3721 151.8271 427.3027 150.3799 C
427.5732 150.2568 l
428.2178 151.2432 423.3633 153.333 423.0332 149.4668 c
422.5371 143.6572 432.7129 143.4258 431.6514 150.499 c
430.5156 158.084 416.9844 156.667 418.9063 146.707 c
420.667 137.5859 435.915 137.9277 436.4873 148.6436 c
436.6074 150.9063 436.2334 152.8154 435.5088 154.3877 c
437.0244 152.5469 439.7305 151.8262 441.3936 154.4326 c
443.5137 157.7539 438.7559 160.1064 437.6016 157.3936 c
437.0908 156.1982 437.8838 155.0986 438.2773 155.1689 c
436.9033 156.5459 438.1494 157.7539 v
439.8652 159.416 443.3643 156.6406 440.2002 153.8467 c
437.793 151.7207 433.082 156.5273 436.2578 159.5156 c
440.4375 163.4453 445.8311 158.3125 442.8945 152.877 c
436.6143 149.333 435.0713 141.665 434.7451 137.3086 C
f
434.6641 155.8564 m
434.1563 157.2393 434.3018 158.8467 435.6182 160.1709 c
440.3867 164.96 447.1328 159.3164 444.4014 152.8311 c
444.7813 147.9902 443.7998 143.3027 441.417 140.9209 c
446.1543 142.0146 450.2061 140.5117 y
446.29 138.0273 441.1641 136.3213 435.9473 136.1143 c
429.5176 132.6699 414.541 134.8076 413.7266 146.4326 c
412.7803 159.9707 429.0771 163.7695 434.6641 155.8564 C
f
455.8984 163.916 m
457.6953 161.2803 459.1631 157.2139 458.1738 154.6055 c
457.6074 153.1143 455.9902 152.2314 453.8047 152.0313 c
453.9863 156.1758 451.2539 157.9502 455.8984 163.916 C
f
457.8555 151.2129 m
454.0771 140.2393 452.1182 143.79 444.1953 142.6963 c
447.9287 149.8018 444.2852 154.3994 451.0264 157.8145 c
452.9385 153.9004 452.0283 149.7549 451.5264 148.6621 c
453.6211 150.5752 456.4902 151.6221 457.8555 151.2129 C
f
459.0322 164.9863 m
464.667 163.2969 465.6318 158.4307 464.5068 157.041 c
463.377 155.6504 461.6074 153.5791 461.6074 153.5801 c
462.0098 158.5498 461.5273 162.8945 459.0322 164.9863 C
f
*U
*u
1 D
532.5059 160.6406 m
512.4668 158.4678 516.5703 133.9219 491.7041 135.6133 c
503.0195 132.7754 509.5293 135.9785 514.2832 140.9551 C
514.3682 140.873 l
516.4033 143.0361 519.6143 144.6133 522.5518 143.7881 c
524.8066 143.1553 525.9639 141.208 526.0234 138.9727 c
526.1445 134.4199 519.1064 133.4824 518.1104 137.7988 c
517.1475 141.9805 522.8027 143.4561 523.3115 139.7275 C
523.3115 139.7344 l
523.417 137.8857 521.2861 137.7734 520.501 138.3506 C
520.2861 138.5098 l
520.4932 137.7666 523.5957 137.377 523.5137 139.7422 c
523.4873 140.541 522.999 141.4424 522.2393 141.8604 c
520.2686 142.9434 516.9111 141.2178 517.6084 137.6914 c
518.6182 132.585 527.1641 133.4209 526.9268 139.3096 c
526.7236 144.4053 521.8887 146.3672 517.2246 144.4805 c
522.1357 151.0879 525.5195 158.8652 532.5059 160.6406 C
f
0 D
490.1104 137.3086 m
483.3076 133.9932 467.9697 137.5928 470.7705 150.3232 c
473.2334 161.5127 491.3633 162.0713 490.7969 148.6982 c
490.3613 138.4502 474.6924 138.6982 474.877 148.7744 c
475.0176 156.4414 486.5098 156.6016 486.5283 149.457 c
486.5439 144.1709 478.4746 144.5381 478.8154 149.4316 c
478.9814 151.8154 481.7393 151.8271 482.6699 150.3799 C
482.9404 150.2568 l
483.583 151.2432 478.7285 153.333 478.3984 149.4668 c
477.9043 143.6572 488.0801 143.4258 487.0186 150.499 c
485.8828 158.084 472.3506 156.667 474.2725 146.707 c
476.0332 137.5859 491.2813 137.9277 491.8535 148.6436 c
491.9736 150.9063 491.6006 152.8154 490.876 154.3877 c
492.3906 152.5469 495.0967 151.8262 496.7598 154.4326 c
498.8809 157.7539 494.1221 160.1064 492.9688 157.3936 c
492.458 156.1982 493.251 155.0986 493.6426 155.1689 c
492.2705 156.5459 493.5166 157.7539 v
495.2314 159.416 498.7305 156.6406 495.5664 153.8467 c
493.1602 151.7207 488.4482 156.5273 491.625 159.5156 c
495.8047 163.4453 501.1973 158.3125 498.2607 152.877 c
491.9814 149.333 490.4385 141.665 490.1104 137.3086 C
f
490.0313 155.8564 m
489.5215 157.2393 489.6689 158.8467 490.9854 160.1709 c
495.7539 164.96 502.5 159.3164 499.7686 152.8311 c
500.1484 147.9902 499.167 143.3027 496.7842 140.9209 c
501.5215 142.0146 505.5732 140.5117 y
501.6563 138.0273 496.5313 136.3213 491.3145 136.1143 c
484.8848 132.6699 469.9082 134.8076 469.0938 146.4326 c
468.1465 159.9707 484.4434 163.7695 490.0313 155.8564 C
f
511.2646 163.916 m
513.0605 161.2803 514.5293 157.2139 513.541 154.6055 c
512.9756 153.1143 511.3574 152.2314 509.1709 152.0313 c
509.3525 156.1758 506.6201 157.9502 511.2646 163.916 C
f
513.2217 151.2129 m
509.4443 140.2393 507.4854 143.79 499.5625 142.6963 c
503.2959 149.8018 499.6523 154.3994 506.3936 157.8145 c
508.3047 153.9004 507.3936 149.7549 506.8936 148.6621 c
508.9883 150.5752 511.8574 151.6221 513.2217 151.2129 C
f
514.3994 164.9863 m
520.0332 163.2969 520.999 158.4307 519.8721 157.041 c
518.7441 155.6504 516.9746 153.5791 516.9746 153.5801 c
517.376 158.5498 516.8945 162.8945 514.3994 164.9863 C
f
*U
*u
1 D
587.873 160.6406 m
567.833 158.4678 571.9375 133.9219 547.0713 135.6133 c
558.3848 132.7754 564.8955 135.9785 569.6504 140.9551 C
569.7354 140.873 l
571.7686 143.0361 574.9805 144.6133 577.917 143.7881 c
580.1729 143.1553 581.3311 141.208 581.3906 138.9727 c
581.5117 134.4199 574.4727 133.4824 573.4775 137.7988 c
572.5146 141.9805 578.168 143.4561 578.6777 139.7275 C
578.6768 139.7344 l
578.7842 137.8857 576.6523 137.7734 575.8672 138.3506 C
575.6523 138.5098 l
575.8604 137.7666 578.9609 137.377 578.8809 139.7422 c
578.8535 140.541 578.3662 141.4424 577.6064 141.8604 c
575.6357 142.9434 572.2773 141.2178 572.9746 137.6914 c
573.9854 132.585 582.5293 133.4209 582.2939 139.3096 c
582.0898 144.4053 577.2559 146.3672 572.5918 144.4805 c
577.502 151.0879 580.8867 158.8652 587.873 160.6406 C
f
0 D
545.4775 137.3086 m
538.6748 133.9932 523.3359 137.5928 526.1367 150.3232 c
528.5996 161.5127 546.7305 162.0713 546.1631 148.6982 c
545.7285 138.4502 530.0586 138.6982 530.2441 148.7744 c
530.3848 156.4414 541.877 156.6016 541.8955 149.457 c
541.9102 144.1709 533.8408 144.5381 534.1816 149.4316 c
534.3467 151.8154 537.1064 151.8271 538.0352 150.3799 C
538.3066 150.2568 l
538.9502 151.2432 534.0957 153.333 533.7656 149.4668 c
533.2715 143.6572 543.4473 143.4258 542.3857 150.499 c
541.25 158.084 527.7178 156.667 529.6387 146.707 c
531.4004 137.5859 546.6484 137.9277 547.2188 148.6436 c
547.3408 150.9063 546.9678 152.8154 546.2432 154.3877 c
547.7578 152.5469 550.4629 151.8262 552.127 154.4326 c
554.248 157.7539 549.4883 160.1064 548.3359 157.3936 c
547.8252 156.1982 548.6162 155.0986 549.0098 155.1689 c
547.6377 156.5459 548.8828 157.7539 v
550.5977 159.416 554.0977 156.6406 550.9336 153.8467 c
548.5254 151.7207 543.8154 156.5273 546.9912 159.5156 c
551.1719 163.4453 556.5645 158.3125 553.6279 152.877 c
547.3477 149.333 545.8047 141.665 545.4775 137.3086 C
f
545.3955 155.8564 m
544.8896 157.2393 545.0332 158.8467 546.3525 160.1709 c
551.1211 164.96 557.8662 159.3164 555.1348 152.8311 c
555.5156 147.9902 554.5342 143.3027 552.1504 140.9209 c
556.8887 142.0146 560.9404 140.5117 y
557.0225 138.0273 551.8965 136.3213 546.6816 136.1143 c
540.251 132.6699 525.2754 134.8076 524.46 146.4326 c
523.5127 159.9707 539.8105 163.7695 545.3955 155.8564 C
f
566.6309 163.916 m
568.4277 161.2803 569.8965 157.2139 568.9072 154.6055 c
568.3408 153.1143 566.7227 152.2314 564.5371 152.0313 c
564.7197 156.1758 561.9863 157.9502 566.6309 163.916 C
f
568.5889 151.2129 m
564.8096 140.2393 562.8506 143.79 554.9277 142.6963 c
558.6621 149.8018 555.0186 154.3994 561.7588 157.8145 c
563.6719 153.9004 562.7607 149.7549 562.2607 148.6621 c
564.3545 150.5752 567.2227 151.6221 568.5889 151.2129 C
f
569.7646 164.9863 m
575.3994 163.2969 576.3652 158.4307 575.2383 157.041 c
574.1104 155.6504 572.3408 153.5791 572.3408 153.5801 c
572.7422 158.5498 572.2607 162.8945 569.7646 164.9863 C
f
*U
309.0605 175.2373 m
309.0762 175.3975 309.1953 175.3926 309.292 175.4404 c
310.4434 175.8994 312.2969 173.9199 310.751 172.3994 c
307.9932 169.6895 303.9009 174.4766 307.4072 177.1982 c
310.5684 179.6523 314.2031 177.3662 314.6406 174.0801 c
314.9922 171.4365 312.918 169.4854 310.5576 168.7861 c
304.4531 166.9824 299.6963 175.5283 305.7686 179.6777 c
310.5059 182.9131 313.9746 179.4512 316.8857 179.7295 c
317.6572 179.8027 318.0811 180.0664 318.7256 180.4834 C
325.0117 184.5117 l
330.0713 188.5293 326.8672 193.251 334.1699 199.0762 c
334.7305 197.9629 335.7451 194.2383 334.2656 189.9209 c
338.8115 189.5039 341.7949 187.0537 342.584 186.0869 c
334.3252 181.8291 331.3145 186.6123 325.6338 183.7354 C
323.0957 182.0703 l
322.3496 181.583 318.8984 179.2686 318.2373 178.9902 c
314.3945 177.3662 311.2734 182.125 306.335 178.8418 c
300.396 174.8936 306.3286 166.2861 312.2666 170.4424 c
316.5635 173.4502 312.0703 180.083 307.6904 176.8291 c
304.5547 174.501 308.1064 170.2441 310.5645 172.5918 c
311.5479 173.5283 311.0264 174.8066 310.1094 175.209 c
309.4727 175.4893 309.2607 175.1367 309.0605 175.2373 C
f
352.9941 202.0527 m
351.1182 196.5742 351.0742 195.0547 344.5322 196.5713 c
345.8242 203.1572 347.2285 202.5791 352.9941 202.0527 C
f
335.9395 191.0049 m
339.126 190.7314 339.3408 189.6963 342.209 188.5352 c
345.626 187.1533 348.5449 190.4766 349.3262 193.6738 c
347.5713 194.4072 344.5283 195.2021 342.4277 195.207 c
343.2822 197.124 343.8027 200.2266 343.8496 202.1309 c
340.6133 202.7246 336.3857 201.4189 336.251 197.7354 c
336.1367 194.6426 336.9932 194.0244 335.9395 191.0049 C
f
330.4131 175.2373 m
330.4287 175.3975 330.5479 175.3926 330.6445 175.4404 c
331.7939 175.8994 333.6494 173.9199 332.1045 172.3994 c
329.3477 169.6895 325.2529 174.4766 328.7598 177.1982 c
331.9219 179.6523 335.5557 177.3662 335.9932 174.0801 c
336.3457 171.4365 334.2705 169.4854 331.9121 168.7861 c
325.8066 166.9824 321.0488 175.5283 327.1221 179.6777 c
331.8584 182.9131 335.3262 179.4512 338.2393 179.7295 c
339.0107 179.8027 339.4326 180.0664 340.0791 180.4834 C
346.3652 184.5117 l
351.4248 188.5293 348.2188 193.251 355.5205 199.0762 c
356.084 197.9629 357.0986 194.2383 355.6191 189.9209 c
360.166 189.5039 363.1484 187.0537 363.9365 186.0869 c
355.6777 181.8291 352.666 186.6123 346.9863 183.7354 C
344.4482 182.0703 l
343.7031 181.583 340.251 179.2686 339.5898 178.9902 c
335.7461 177.3662 332.627 182.125 327.6875 178.8418 c
321.749 174.8936 327.6807 166.2861 333.6182 170.4424 c
337.916 173.4502 333.4219 180.083 329.043 176.8291 c
325.9063 174.501 329.457 170.2441 331.917 172.5918 c
332.9004 173.5283 332.3779 174.8066 331.4619 175.209 c
330.8262 175.4893 330.6133 175.1367 330.4131 175.2373 C
f
374.3467 202.0527 m
372.4697 196.5742 372.4268 195.0547 365.8857 196.5713 c
367.1777 203.1572 368.5811 202.5791 374.3467 202.0527 C
f
357.292 191.0049 m
360.4775 190.7314 360.6934 189.6963 363.5625 188.5352 c
366.9775 187.1533 369.8994 190.4766 370.6797 193.6738 c
368.9248 194.4072 365.8789 195.2021 363.7793 195.207 c
364.6357 197.124 365.1553 200.2266 365.2031 202.1309 c
361.9658 202.7246 357.7383 201.4189 357.6045 197.7354 c
357.4902 194.6426 358.3467 194.0244 357.292 191.0049 C
f
351.7666 175.2373 m
351.7813 175.3975 351.9004 175.3926 351.9961 175.4404 c
353.1484 175.8994 355.002 173.9199 353.457 172.3994 c
350.6992 169.6895 346.6055 174.4766 350.1123 177.1982 c
353.2744 179.6523 356.9082 177.3662 357.3457 174.0801 c
357.6982 171.4365 355.624 169.4854 353.2637 168.7861 c
347.1582 166.9824 342.4023 175.5283 348.4746 179.6777 c
353.21 182.9131 356.6797 179.4512 359.5908 179.7295 c
360.3633 179.8027 360.7861 180.0664 361.4316 180.4834 C
367.7168 184.5117 l
372.7754 188.5293 369.5732 193.251 376.875 199.0762 c
377.4365 197.9629 378.4502 194.2383 376.9717 189.9209 c
381.5186 189.5039 384.502 187.0537 385.2881 186.0869 c
377.0293 181.8291 374.0195 186.6123 368.3389 183.7354 C
365.7998 182.0703 l
365.0566 181.583 361.6035 179.2686 360.9424 178.9902 c
357.0986 177.3662 353.9785 182.125 349.041 178.8418 c
343.1016 174.8936 349.0342 166.2861 354.9717 170.4424 c
359.2686 173.4502 354.7754 180.083 350.3945 176.8291 c
347.2607 174.501 350.8115 170.2441 353.2695 172.5918 c
354.252 173.5283 353.7314 174.8066 352.8135 175.209 c
352.1777 175.4893 351.9668 175.1367 351.7666 175.2373 C
f
395.6992 202.0527 m
393.8242 196.5742 393.7793 195.0547 387.2383 196.5713 c
388.5303 203.1572 389.9346 202.5791 395.6992 202.0527 C
f
378.6436 191.0049 m
381.8301 190.7314 382.0459 189.6963 384.9141 188.5352 c
388.3301 187.1533 391.252 190.4766 392.0332 193.6738 c
390.2773 194.4072 387.2334 195.2021 385.1318 195.207 c
385.9883 197.124 386.5088 200.2266 386.5547 202.1309 c
383.3184 202.7246 379.0908 201.4189 378.9561 197.7354 c
378.8418 194.6426 379.6982 194.0244 378.6436 191.0049 C
f
373.1182 175.2373 m
373.1338 175.3975 373.2529 175.3926 373.3496 175.4404 c
374.501 175.8994 376.3545 173.9199 374.8086 172.3994 c
372.0518 169.6895 367.959 174.4766 371.4658 177.1982 c
374.627 179.6523 378.2607 177.3662 378.6982 174.0801 c
379.0498 171.4365 376.9756 169.4854 374.6162 168.7861 c
368.5107 166.9824 363.7539 175.5283 369.8271 179.6777 c
374.5635 182.9131 378.0313 179.4512 380.9434 179.7295 c
381.7158 179.8027 382.1396 180.0664 382.7852 180.4834 C
389.0703 184.5117 l
394.1299 188.5293 390.9258 193.251 398.2275 199.0762 c
398.7881 197.9629 399.8037 194.2383 398.3232 189.9209 c
402.8701 189.5039 405.8535 187.0537 406.6416 186.0869 c
398.3828 181.8291 395.3721 186.6123 389.6914 183.7354 C
387.1533 182.0703 l
386.4082 181.583 382.957 179.2686 382.2949 178.9902 c
378.4521 177.3662 375.333 182.125 370.3936 178.8418 c
364.4551 174.8936 370.3867 166.2861 376.3242 170.4424 c
380.6211 173.4502 376.1289 180.083 371.748 176.8291 c
368.6123 174.501 372.1641 170.2441 374.623 172.5918 c
375.6055 173.5283 375.084 174.8066 374.167 175.209 c
373.5313 175.4893 373.3184 175.1367 373.1182 175.2373 C
f
417.0518 202.0527 m
415.1768 196.5742 415.1318 195.0547 408.5898 196.5713 c
409.8828 203.1572 411.2861 202.5791 417.0518 202.0527 C
f
399.998 191.0049 m
403.1836 190.7314 403.3984 189.6963 406.2676 188.5352 c
409.6846 187.1533 412.6045 190.4766 413.3848 193.6738 c
411.6289 194.4072 408.5859 195.2021 406.4854 195.207 c
407.3408 197.124 407.8613 200.2266 407.9072 202.1309 c
404.6709 202.7246 400.4434 201.4189 400.3086 197.7354 c
400.1953 194.6426 401.0518 194.0244 399.998 191.0049 C
f
394.4717 175.2373 m
394.4873 175.3975 394.6064 175.3926 394.7021 175.4404 c
395.8535 175.8994 397.707 173.9199 396.1621 172.3994 c
393.4053 169.6895 389.3115 174.4766 392.8174 177.1982 c
395.9805 179.6523 399.6143 177.3662 400.0518 174.0801 c
400.4033 171.4365 398.3291 169.4854 395.9697 168.7861 c
389.8643 166.9824 385.1064 175.5283 391.1807 179.6777 c
395.916 182.9131 399.3848 179.4512 402.2969 179.7295 c
403.0684 179.8027 403.4912 180.0664 404.1367 180.4834 C
410.4229 184.5117 l
415.4824 188.5293 412.2773 193.251 419.5801 199.0762 c
420.1416 197.9629 421.1563 194.2383 419.6768 189.9209 c
424.2227 189.5039 427.207 187.0537 427.9941 186.0869 c
419.7363 181.8291 416.7246 186.6123 411.0449 183.7354 C
408.5059 182.0703 l
407.7607 181.583 404.3086 179.2686 403.6484 178.9902 c
399.8037 177.3662 396.6855 182.125 391.7451 178.8418 c
385.8076 174.8936 391.7393 166.2861 397.6758 170.4424 c
401.9736 173.4502 397.4805 180.083 393.1006 176.8291 c
389.9648 174.501 393.5166 170.2441 395.9746 172.5918 c
396.958 173.5283 396.4365 174.8066 395.5205 175.209 c
394.8838 175.4893 394.6719 175.1367 394.4717 175.2373 C
f
438.4053 202.0527 m
436.5293 196.5742 436.4844 195.0547 429.9434 196.5713 c
431.2354 203.1572 432.6387 202.5791 438.4053 202.0527 C
f
421.3496 191.0049 m
424.5361 190.7314 424.752 189.6963 427.6201 188.5352 c
431.0361 187.1533 433.957 190.4766 434.7373 193.6738 c
432.9834 194.4072 429.9375 195.2021 427.8379 195.207 c
428.6943 197.124 429.2129 200.2266 429.2607 202.1309 c
426.0234 202.7246 421.7969 201.4189 421.6621 197.7354 c
421.5488 194.6426 422.4043 194.0244 421.3496 191.0049 C
f
415.8242 175.2373 m
415.8398 175.3975 415.959 175.3926 416.0547 175.4404 c
417.2061 175.8994 419.0596 173.9199 417.5146 172.3994 c
414.7578 169.6895 410.6631 174.4766 414.1699 177.1982 c
417.333 179.6523 420.9668 177.3662 421.4033 174.0801 c
421.7559 171.4365 419.6816 169.4854 417.3213 168.7861 c
411.2168 166.9824 406.46 175.5283 412.5332 179.6777 c
417.2686 182.9131 420.7373 179.4512 423.6494 179.7295 c
424.4209 179.8027 424.8438 180.0664 425.4893 180.4834 C
431.7744 184.5117 l
436.834 188.5293 433.6309 193.251 440.9316 199.0762 c
441.4941 197.9629 442.5098 194.2383 441.0293 189.9209 c
445.5762 189.5039 448.5596 187.0537 449.3457 186.0869 c
441.0879 181.8291 438.0771 186.6123 432.3975 183.7354 C
429.8574 182.0703 l
429.1143 181.583 425.6611 179.2686 425.001 178.9902 c
421.1563 177.3662 418.0371 182.125 413.0986 178.8418 c
407.1602 174.8936 413.0918 166.2861 419.0303 170.4424 c
423.3262 173.4502 418.833 180.083 414.4531 176.8291 c
411.3184 174.501 414.8691 170.2441 417.3281 172.5918 c
418.3115 173.5283 417.7891 174.8066 416.873 175.209 c
416.2363 175.4893 416.0254 175.1367 415.8242 175.2373 C
f
459.7568 202.0527 m
457.8818 196.5742 457.8379 195.0547 451.2969 196.5713 c
452.5889 203.1572 453.9922 202.5791 459.7568 202.0527 C
f
442.7031 191.0049 m
445.8887 190.7314 446.1045 189.6963 448.9727 188.5352 c
452.3887 187.1533 455.3096 190.4766 456.0908 193.6738 c
454.3359 194.4072 451.291 195.2021 449.1914 195.207 c
450.0459 197.124 450.5664 200.2266 450.6123 202.1309 c
447.375 202.7246 443.1484 201.4189 443.0146 197.7354 c
442.9004 194.6426 443.7559 194.0244 442.7031 191.0049 C
f
437.1768 175.2373 m
437.1924 175.3975 437.3105 175.3926 437.4082 175.4404 c
438.5586 175.8994 440.4131 173.9199 438.8672 172.3994 c
436.1094 169.6895 432.0156 174.4766 435.5234 177.1982 c
438.6846 179.6523 442.3193 177.3662 442.7559 174.0801 c
443.1084 171.4365 441.0352 169.4854 438.6738 168.7861 c
432.5693 166.9824 427.8125 175.5283 433.8857 179.6777 c
438.6221 182.9131 442.0908 179.4512 445.002 179.7295 c
445.7734 179.8027 446.1973 180.0664 446.8418 180.4834 C
453.1279 184.5117 l
458.1875 188.5293 454.9834 193.251 462.2852 199.0762 c
462.8467 197.9629 463.8623 194.2383 462.3828 189.9209 c
466.9277 189.5039 469.9121 187.0537 470.7002 186.0869 c
462.4414 181.8291 459.4297 186.6123 453.75 183.7354 C
451.2109 182.0703 l
450.4668 181.583 447.0146 179.2686 446.3535 178.9902 c
442.5107 177.3662 439.3906 182.125 434.4512 178.8418 c
428.5127 174.8936 434.4434 166.2861 440.3828 170.4424 c
444.6807 173.4502 440.1865 180.083 435.8066 176.8291 c
432.6709 174.501 436.2217 170.2441 438.6807 172.5918 c
439.6641 173.5283 439.1426 174.8066 438.2256 175.209 c
437.5898 175.4893 437.377 175.1367 437.1768 175.2373 C
f
481.1094 202.0527 m
479.2344 196.5742 479.1895 195.0547 472.6484 196.5713 c
473.9414 203.1572 475.3447 202.5791 481.1094 202.0527 C
f
464.0557 191.0049 m
467.2422 190.7314 467.457 189.6963 470.3252 188.5352 c
473.7422 187.1533 476.6621 190.4766 477.4434 193.6738 c
475.6875 194.4072 472.6436 195.2021 470.5439 195.207 c
471.3984 197.124 471.9189 200.2266 471.9648 202.1309 c
468.7285 202.7246 464.501 201.4189 464.3662 197.7354 c
464.2529 194.6426 465.1094 194.0244 464.0557 191.0049 C
f
458.5293 175.2373 m
458.5449 175.3975 458.6641 175.3926 458.7607 175.4404 c
459.9121 175.8994 461.7656 173.9199 460.2207 172.3994 c
457.4629 169.6895 453.3691 174.4766 456.876 177.1982 c
460.0381 179.6523 463.6719 177.3662 464.1094 174.0801 c
464.4619 171.4365 462.3867 169.4854 460.0273 168.7861 c
453.9229 166.9824 449.165 175.5283 455.2383 179.6777 c
459.9746 182.9131 463.4424 179.4512 466.3555 179.7295 c
467.127 179.8027 467.5488 180.0664 468.1953 180.4834 C
474.4805 184.5117 l
479.54 188.5293 476.335 193.251 483.6377 199.0762 c
484.2002 197.9629 485.2139 194.2383 483.7354 189.9209 c
488.2822 189.5039 491.2656 187.0537 492.0527 186.0869 c
483.7939 181.8291 480.7822 186.6123 475.1035 183.7354 C
472.5645 182.0703 l
471.8184 181.583 468.3672 179.2686 467.707 178.9902 c
463.8633 177.3662 460.7432 182.125 455.8047 178.8418 c
449.8652 174.8936 455.7969 166.2861 461.7354 170.4424 c
466.0322 173.4502 461.5381 180.083 457.1592 176.8291 c
454.0225 174.501 457.5742 170.2441 460.0322 172.5918 c
461.0166 173.5283 460.4941 174.8066 459.5781 175.209 c
458.9424 175.4893 458.7295 175.1367 458.5293 175.2373 C
f
502.4639 202.0527 m
500.5869 196.5742 500.542 195.0547 494.002 196.5713 c
495.2939 203.1572 496.6973 202.5791 502.4639 202.0527 C
f
485.4082 191.0049 m
488.5938 190.7314 488.8096 189.6963 491.6787 188.5352 c
495.0938 187.1533 498.0156 190.4766 498.7949 193.6738 c
497.041 194.4072 493.9961 195.2021 491.8955 195.207 c
492.752 197.124 493.2705 200.2266 493.3193 202.1309 c
490.0811 202.7246 485.8545 201.4189 485.7207 197.7354 c
485.6064 194.6426 486.4619 194.0244 485.4082 191.0049 C
f
479.8828 175.2373 m
479.8975 175.3975 480.0166 175.3926 480.1123 175.4404 c
481.2646 175.8994 483.1182 173.9199 481.5732 172.3994 c
478.8154 169.6895 474.7217 174.4766 478.2285 177.1982 c
481.3906 179.6523 485.0244 177.3662 485.4619 174.0801 c
485.8145 171.4365 483.7402 169.4854 481.3799 168.7861 c
475.2754 166.9824 470.5186 175.5283 476.5908 179.6777 c
481.3281 182.9131 484.7949 179.4512 487.708 179.7295 c
488.4795 179.8027 488.9014 180.0664 489.5469 180.4834 C
495.833 184.5117 l
500.8926 188.5293 497.6885 193.251 504.9893 199.0762 c
505.5527 197.9629 506.5664 194.2383 505.0879 189.9209 c
509.6348 189.5039 512.6182 187.0537 513.4043 186.0869 c
505.1465 181.8291 502.1357 186.6123 496.4551 183.7354 C
493.917 182.0703 l
493.1729 181.583 489.7197 179.2686 489.0586 178.9902 c
485.2148 177.3662 482.0947 182.125 477.1572 178.8418 c
471.2178 174.8936 477.1494 166.2861 483.0879 170.4424 c
487.3857 173.4502 482.8916 180.083 478.5117 176.8291 c
475.376 174.501 478.9268 170.2441 481.3857 172.5918 c
482.3691 173.5283 481.8467 174.8066 480.9316 175.209 c
480.2959 175.4893 480.083 175.1367 479.8828 175.2373 C
f
523.8154 202.0527 m
521.9395 196.5742 521.8965 195.0547 515.3545 196.5713 c
516.6465 203.1572 518.0508 202.5791 523.8154 202.0527 C
f
506.7607 191.0049 m
509.9463 190.7314 510.1621 189.6963 513.0313 188.5352 c
516.4463 187.1533 519.3682 190.4766 520.1484 193.6738 c
518.3936 194.4072 515.3486 195.2021 513.248 195.207 c
514.1045 197.124 514.625 200.2266 514.6709 202.1309 c
511.4355 202.7246 507.207 201.4189 507.0732 197.7354 c
506.958 194.6426 507.8145 194.0244 506.7607 191.0049 C
f
501.2363 175.2373 m
501.25 175.3975 501.3691 175.3926 501.4658 175.4404 c
502.6172 175.8994 504.4717 173.9199 502.9268 172.3994 c
500.167 169.6895 496.0732 174.4766 499.582 177.1982 c
502.7422 179.6523 506.377 177.3662 506.8145 174.0801 c
507.167 171.4365 505.0938 169.4854 502.7324 168.7861 c
496.627 166.9824 491.8701 175.5283 497.9434 179.6777 c
502.6797 182.9131 506.1484 179.4512 509.0596 179.7295 c
509.832 179.8027 510.2559 180.0664 510.9014 180.4834 C
517.1865 184.5117 l
522.2451 188.5293 519.042 193.251 526.3438 199.0762 c
526.9053 197.9629 527.9199 194.2383 526.4404 189.9209 c
530.9873 189.5039 533.9707 187.0537 534.7578 186.0869 c
526.499 181.8291 523.4883 186.6123 517.8076 183.7354 C
515.2695 182.0703 l
514.5254 181.583 511.0732 179.2686 510.4111 178.9902 c
506.5684 177.3662 503.4492 182.125 498.5098 178.8418 c
492.5703 174.8936 498.501 166.2861 504.4404 170.4424 c
508.7383 173.4502 504.2451 180.083 499.8643 176.8291 c
496.7285 174.501 500.2803 170.2441 502.7383 172.5918 c
503.7217 173.5283 503.2002 174.8066 502.2832 175.209 c
501.6475 175.4893 501.4346 175.1367 501.2363 175.2373 C
f
545.168 202.0527 m
543.292 196.5742 543.248 195.0547 536.7061 196.5713 c
537.999 203.1572 539.4023 202.5791 545.168 202.0527 C
f
528.1133 191.0049 m
531.2998 190.7314 531.5156 189.6963 534.3838 188.5352 c
537.7998 187.1533 540.7207 190.4766 541.502 193.6738 c
539.7451 194.4072 536.7012 195.2021 534.6016 195.207 c
535.4561 197.124 535.9775 200.2266 536.0234 202.1309 c
532.7871 202.7246 528.5596 201.4189 528.4248 197.7354 c
528.3105 194.6426 529.167 194.0244 528.1133 191.0049 C
f
522.5879 175.2373 m
522.6025 175.3975 522.7227 175.3926 522.8184 175.4404 c
523.9707 175.8994 525.8232 173.9199 524.2783 172.3994 c
521.5215 169.6895 517.4277 174.4766 520.9336 177.1982 c
524.0957 179.6523 527.7295 177.3662 528.168 174.0801 c
528.5195 171.4365 526.4453 169.4854 524.0859 168.7861 c
517.9805 166.9824 513.2227 175.5283 519.2959 179.6777 c
524.0322 182.9131 527.501 179.4512 530.4131 179.7295 c
531.1855 179.8027 531.6074 180.0664 532.2539 180.4834 C
538.5391 184.5117 l
543.5977 188.5293 540.3945 193.251 547.6963 199.0762 c
548.2578 197.9629 549.2715 194.2383 547.793 189.9209 c
552.3398 189.5039 555.3223 187.0537 556.1104 186.0869 c
547.8516 181.8291 544.8418 186.6123 539.1611 183.7354 C
536.6221 182.0703 l
535.877 181.583 532.4258 179.2686 531.7646 178.9902 c
527.9209 177.3662 524.8018 182.125 519.8633 178.8418 c
513.9229 174.8936 519.8555 166.2861 525.793 170.4424 c
530.0898 173.4502 525.5977 180.083 521.2168 176.8291 c
518.082 174.501 521.6338 170.2441 524.0908 172.5918 c
525.0742 173.5283 524.5527 174.8066 523.6357 175.209 c
523 175.4893 522.7871 175.1367 522.5879 175.2373 C
f
566.5215 202.0527 m
564.6455 196.5742 564.6006 195.0547 558.0596 196.5713 c
559.3516 203.1572 560.7549 202.5791 566.5215 202.0527 C
f
549.4658 191.0049 m
552.6523 190.7314 552.8672 189.6963 555.7363 188.5352 c
559.1523 187.1533 562.0732 190.4766 562.8535 193.6738 c
561.0986 194.4072 558.0547 195.2021 555.9541 195.207 c
556.8105 197.124 557.3291 200.2266 557.377 202.1309 c
554.1396 202.7246 549.9131 201.4189 549.7783 197.7354 c
549.6641 194.6426 550.5205 194.0244 549.4658 191.0049 C
f
543.9404 175.2373 m
543.9551 175.3975 544.0752 175.3926 544.1719 175.4404 c
545.3223 175.8994 547.1758 173.9199 545.6309 172.3994 c
542.874 169.6895 538.7803 174.4766 542.2861 177.1982 c
545.4492 179.6523 549.082 177.3662 549.5205 174.0801 c
549.8721 171.4365 547.7979 169.4854 545.4385 168.7861 c
539.333 166.9824 534.5762 175.5283 540.6484 179.6777 c
545.3848 182.9131 548.8535 179.4512 551.7656 179.7295 c
552.5371 179.8027 552.96 180.0664 553.6055 180.4834 C
559.8916 184.5117 l
564.9512 188.5293 561.7471 193.251 569.0488 199.0762 c
569.6104 197.9629 570.626 194.2383 569.1455 189.9209 c
573.6924 189.5039 576.6758 187.0537 577.4629 186.0869 c
569.2051 181.8291 566.1943 186.6123 560.5137 183.7354 C
557.9746 182.0703 l
557.2305 181.583 553.7773 179.2686 553.1162 178.9902 c
549.2725 177.3662 546.1533 182.125 541.2148 178.8418 c
535.2764 174.8936 541.208 166.2861 547.1455 170.4424 c
551.4434 173.4502 546.9492 180.083 542.5693 176.8291 c
539.4346 174.501 542.9854 170.2441 545.4443 172.5918 c
546.4268 173.5283 545.9053 174.8066 544.9893 175.209 c
544.3535 175.4893 544.1406 175.1367 543.9404 175.2373 C
f
587.873 202.0527 m
585.998 196.5742 585.9541 195.0547 579.4121 196.5713 c
580.7041 203.1572 582.1084 202.5791 587.873 202.0527 C
f
570.8184 191.0049 m
574.0039 190.7314 574.2197 189.6963 577.0889 188.5352 c
580.5059 187.1533 583.4258 190.4766 584.207 193.6738 c
582.4512 194.4072 579.4072 195.2021 577.3057 195.207 c
578.1621 197.124 578.6826 200.2266 578.7295 202.1309 c
575.4932 202.7246 571.2656 201.4189 571.1309 197.7354 c
571.0166 194.6426 571.874 194.0244 570.8184 191.0049 C
f
314.3291 218.3096 m
317.8242 220.0654 323.0889 217.4775 323.7246 224.7783 c
315.9287 225.9141 317.3057 220.793 314.3291 218.3096 C
f
302.9541 210.957 m
306.749 213.5254 317.3467 206.916 321.0313 217.5313 c
316.9902 217.9365 313.0928 216.6982 309.2988 214.8545 c
310.751 215.7783 315.4316 221.9414 315.6445 224.001 c
307.2803 225.4893 308.4854 216.3398 302.9541 210.957 C
f
329.1641 217.5869 m
325.6699 215.832 320.4063 218.4199 319.7686 211.1182 c
327.5654 209.9824 326.1875 215.1035 329.1641 217.5869 C
f
340.5391 224.9395 m
336.7461 222.3711 326.1475 228.9814 322.4619 218.3652 c
326.502 217.96 330.4023 219.1982 334.1934 221.042 c
332.7422 220.1182 328.0615 213.9551 327.8496 211.8965 c
336.2139 210.4072 335.0098 219.5566 340.5391 224.9395 C
f
345.2461 218.3096 m
348.7402 220.0654 354.0049 217.4775 354.6406 224.7783 c
346.8447 225.9141 348.2227 220.793 345.2461 218.3096 C
f
333.8711 210.957 m
337.665 213.5254 348.2627 206.916 351.9482 217.5313 c
347.9072 217.9365 344.0088 216.6982 340.2168 214.8545 c
341.6689 215.7783 346.3477 221.9414 346.5605 224.001 c
338.1973 225.4893 339.4014 216.3398 333.8711 210.957 C
f
360.0811 217.5869 m
356.5869 215.832 351.3223 218.4199 350.6855 211.1182 c
358.4814 209.9824 357.1045 215.1035 360.0811 217.5869 C
f
371.4561 224.9395 m
367.6621 222.3711 357.0635 228.9814 353.3789 218.3652 c
357.4189 217.96 361.3184 219.1982 365.1104 221.042 c
363.6582 220.1182 358.9785 213.9551 358.7656 211.8965 c
367.1309 210.4072 365.9258 219.5566 371.4561 224.9395 C
f
376.1631 218.3096 m
379.6582 220.0654 384.9219 217.4775 385.5576 224.7783 c
377.7617 225.9141 379.1387 220.793 376.1631 218.3096 C
f
364.7881 210.957 m
368.5811 213.5254 379.1797 206.916 382.8652 217.5313 c
378.8242 217.9365 374.9258 216.6982 371.1328 214.8545 c
372.585 215.7783 377.2656 221.9414 377.4785 224.001 c
369.1133 225.4893 370.3184 216.3398 364.7881 210.957 C
f
390.998 217.5869 m
387.5029 215.832 382.2383 218.4199 381.6016 211.1182 c
389.3975 209.9824 388.0215 215.1035 390.998 217.5869 C
f
402.3721 224.9395 m
398.5791 222.3711 387.9795 228.9814 384.2959 218.3652 c
388.3359 217.96 392.2354 219.1982 396.0273 221.042 c
394.5752 220.1182 389.8945 213.9551 389.6826 211.8965 c
398.0469 210.4072 396.8438 219.5566 402.3721 224.9395 C
f
407.0791 218.3096 m
410.5742 220.0654 415.8379 217.4775 416.4746 224.7783 c
408.6787 225.9141 410.0557 220.793 407.0791 218.3096 C
f
395.7041 210.957 m
399.498 213.5254 410.0967 206.916 413.7813 217.5313 c
409.7412 217.9365 405.8418 216.6982 402.0498 214.8545 c
403.502 215.7783 408.1816 221.9414 408.3945 224.001 c
400.0303 225.4893 401.2354 216.3398 395.7041 210.957 C
f
421.9141 217.5869 m
418.4199 215.832 413.1553 218.4199 412.5195 211.1182 c
420.3154 209.9824 418.9385 215.1035 421.9141 217.5869 C
f
433.2891 224.9395 m
429.4961 222.3711 418.8975 228.9814 415.2119 218.3652 c
419.252 217.96 423.1514 219.1982 426.9434 221.042 c
425.4912 220.1182 420.8125 213.9551 420.5996 211.8965 c
428.9629 210.4072 427.7588 219.5566 433.2891 224.9395 C
f
437.9971 218.3096 m
441.4912 220.0654 446.7549 217.4775 447.3916 224.7783 c
439.5957 225.9141 440.9727 220.793 437.9971 218.3096 C
f
426.6211 210.957 m
430.4141 213.5254 441.0137 206.916 444.6992 217.5313 c
440.6572 217.9365 436.7598 216.6982 432.9668 214.8545 c
434.4189 215.7783 439.0986 221.9414 439.3115 224.001 c
430.9463 225.4893 432.1514 216.3398 426.6211 210.957 C
f
452.8301 217.5869 m
449.3359 215.832 444.0723 218.4199 443.4355 211.1182 c
451.2314 209.9824 449.8545 215.1035 452.8301 217.5869 C
f
464.2061 224.9395 m
460.4131 222.3711 449.8135 228.9814 446.1289 218.3652 c
450.1699 217.96 454.0674 219.1982 457.8604 221.042 c
456.4082 220.1182 451.7285 213.9551 451.5156 211.8965 c
459.8809 210.4072 458.6768 219.5566 464.2061 224.9395 C
f
468.9131 218.3096 m
472.4072 220.0654 477.6719 217.4775 478.3076 224.7783 c
470.5117 225.9141 471.8887 220.793 468.9131 218.3096 C
f
457.5381 210.957 m
461.3311 213.5254 471.9297 206.916 475.6152 217.5313 c
471.5752 217.9365 467.6758 216.6982 463.8838 214.8545 c
465.3359 215.7783 470.0156 221.9414 470.2285 224.001 c
461.8643 225.4893 463.0684 216.3398 457.5381 210.957 C
f
483.748 217.5869 m
480.2529 215.832 474.9893 218.4199 474.3525 211.1182 c
482.1484 209.9824 480.7725 215.1035 483.748 217.5869 C
f
495.123 224.9395 m
491.3291 222.3711 480.7305 228.9814 477.0459 218.3652 c
481.0859 217.96 484.9854 219.1982 488.7773 221.042 c
487.3252 220.1182 482.6455 213.9551 482.4326 211.8965 c
490.7969 210.4072 489.5918 219.5566 495.123 224.9395 C
f
499.8301 218.3096 m
503.3242 220.0654 508.5889 217.4775 509.2256 224.7783 c
501.4297 225.9141 502.8057 220.793 499.8301 218.3096 C
f
488.4551 210.957 m
492.248 213.5254 502.8477 206.916 506.5313 217.5313 c
502.4912 217.9365 498.5918 216.6982 494.7998 214.8545 c
496.252 215.7783 500.9326 221.9414 501.1445 224.001 c
492.7803 225.4893 493.9834 216.3398 488.4551 210.957 C
f
514.6641 217.5869 m
511.1689 215.832 505.9053 218.4199 505.2695 211.1182 c
513.0654 209.9824 511.6885 215.1035 514.6641 217.5869 C
f
526.0391 224.9395 m
522.2461 222.3711 511.6475 228.9814 507.9629 218.3652 c
512.0029 217.96 515.9014 219.1982 519.6943 221.042 c
518.2422 220.1182 513.5615 213.9551 513.3486 211.8965 c
521.7139 210.4072 520.5098 219.5566 526.0391 224.9395 C
f
530.7471 218.3096 m
534.2402 220.0654 539.5049 217.4775 540.1416 224.7783 c
532.3457 225.9141 533.7227 220.793 530.7471 218.3096 C
f
519.3711 210.957 m
523.165 213.5254 533.7637 206.916 537.4482 217.5313 c
533.4082 217.9365 529.5088 216.6982 525.7168 214.8545 c
527.1689 215.7783 531.8486 221.9414 532.0615 224.001 c
523.6973 225.4893 524.9014 216.3398 519.3711 210.957 C
f
545.5811 217.5869 m
542.0869 215.832 536.8223 218.4199 536.1865 211.1182 c
543.9824 209.9824 542.6045 215.1035 545.5811 217.5869 C
f
556.957 224.9395 m
553.1621 222.3711 542.5645 228.9814 538.8789 218.3652 c
542.9199 217.96 546.8184 219.1982 550.6104 221.042 c
549.1582 220.1182 544.4795 213.9551 544.2666 211.8965 c
552.6299 210.4072 551.4258 219.5566 556.957 224.9395 C
f
561.6641 218.3096 m
565.1582 220.0654 570.4219 217.4775 571.0586 224.7783 c
563.2617 225.9141 564.6396 220.793 561.6641 218.3096 C
f
550.2881 210.957 m
554.0811 213.5254 564.6797 206.916 568.3652 217.5313 c
564.3252 217.9365 560.4258 216.6982 556.6338 214.8545 c
558.085 215.7783 562.7656 221.9414 562.9775 224.001 c
554.6133 225.4893 555.8174 216.3398 550.2881 210.957 C
f
576.498 217.5869 m
573.0029 215.832 567.7383 218.4199 567.1025 211.1182 c
574.8984 209.9824 573.5215 215.1035 576.498 217.5869 C
f
587.873 224.9395 m
584.0781 222.3711 573.4805 228.9814 569.7959 218.3652 c
573.8369 217.96 577.7344 219.1982 581.5283 221.042 c
580.0762 220.1182 575.3955 213.9551 575.1826 211.8965 c
583.5469 210.4072 582.3418 219.5566 587.873 224.9395 C
f
337.2695 251.9805 m
339.9756 253.9092 344.7324 252.4199 344.3164 258.6338 c
337.623 258.5723 339.4453 254.4512 337.2695 251.9805 C
f
328.6777 244.3262 m
331.5264 246.9785 341.2861 242.8076 342.9971 252.1982 c
339.5527 252.0137 336.4404 250.4658 333.4971 248.4248 c
334.5947 249.3896 337.7227 255.1729 337.6338 256.9287 c
330.418 257.0908 332.6191 249.5654 328.6777 244.3262 C
f
317.4766 239.9092 m
321.2939 242.0264 325.3691 250.3359 329.3408 253.0244 c
329.8086 248.8271 327.8398 243.8311 324.9482 241.25 c
330.2656 243.9043 333.8164 244.209 337.7793 243.7871 c
324.6084 230.4688 306.6504 237.0146 303.186 239.708 C
302.9531 241.2109 l
308.249 238.1113 313.6602 237.7949 317.4766 239.9092 C
f
364.3301 251.9805 m
367.0342 253.9092 371.791 252.4199 371.376 258.6338 c
364.6836 258.5723 366.5039 254.4512 364.3301 251.9805 C
f
355.7354 244.3262 m
358.5859 246.9785 368.3438 242.8076 370.0566 252.1982 c
366.6123 252.0137 363.499 250.4658 360.5557 248.4248 c
361.6553 249.3896 364.7832 255.1729 364.6934 256.9287 c
357.4766 257.0908 359.6787 249.5654 355.7354 244.3262 C
f
344.5371 239.9092 m
348.3535 242.0264 352.4277 250.3359 356.4004 253.0244 c
356.8672 248.8271 354.8984 243.8311 352.0068 241.25 c
357.3252 243.9043 360.874 244.209 364.8398 243.7871 c
351.666 230.4688 333.709 237.0146 330.2451 239.708 C
330.0117 241.2109 l
335.3066 238.1113 340.7197 237.7949 344.5371 239.9092 C
f
391.3877 251.9805 m
394.0928 253.9092 398.8506 252.4199 398.4336 258.6338 c
391.7412 258.5723 393.5635 254.4512 391.3877 251.9805 C
f
382.7949 244.3262 m
385.6445 246.9785 395.4033 242.8076 397.1152 252.1982 c
393.6709 252.0137 390.5586 250.4658 387.6143 248.4248 c
388.7129 249.3896 391.8408 255.1729 391.752 256.9287 c
384.5361 257.0908 386.7373 249.5654 382.7949 244.3262 C
f
371.5947 239.9092 m
375.4121 242.0264 379.4873 250.3359 383.459 253.0244 c
383.9258 248.8271 381.958 243.8311 379.0654 241.25 c
384.3828 243.9043 387.9336 244.209 391.8975 243.7871 c
378.7266 230.4688 360.7686 237.0146 357.3037 239.708 C
357.0713 241.2109 l
362.3672 238.1113 367.7783 237.7949 371.5947 239.9092 C
f
418.4463 251.9805 m
421.1523 253.9092 425.9092 252.4199 425.4941 258.6338 c
418.8018 258.5723 420.6221 254.4512 418.4463 251.9805 C
f
409.8535 244.3262 m
412.7041 246.9785 422.4619 242.8076 424.1748 252.1982 c
420.7305 252.0137 417.6172 250.4658 414.6738 248.4248 c
415.7734 249.3896 418.9004 255.1729 418.8105 256.9287 c
411.5947 257.0908 413.7959 249.5654 409.8535 244.3262 C
f
398.6553 239.9092 m
402.4717 242.0264 406.5459 250.3359 410.5176 253.0244 c
410.9844 248.8271 409.0156 243.8311 406.125 241.25 c
411.4424 243.9043 414.9922 244.209 418.957 243.7871 c
405.7842 230.4688 387.8271 237.0146 384.3633 239.708 C
384.1299 241.2109 l
389.4248 238.1113 394.8379 237.7949 398.6553 239.9092 C
f
445.5059 251.9805 m
448.2109 253.9092 452.9688 252.4199 452.5518 258.6338 c
445.8594 258.5723 447.6807 254.4512 445.5059 251.9805 C
f
436.9121 244.3262 m
439.7617 246.9785 449.5215 242.8076 451.2334 252.1982 c
447.7891 252.0137 444.6768 250.4658 441.7314 248.4248 c
442.8311 249.3896 445.959 255.1729 445.8701 256.9287 c
438.6543 257.0908 440.8545 249.5654 436.9121 244.3262 C
f
425.7129 239.9092 m
429.5293 242.0264 433.6055 250.3359 437.5771 253.0244 c
438.0439 248.8271 436.0752 243.8311 433.1826 241.25 c
438.501 243.9043 442.0518 244.209 446.0156 243.7871 c
432.8438 230.4688 414.8857 237.0146 411.4219 239.708 C
411.1885 241.2109 l
416.4844 238.1113 421.8955 237.7949 425.7129 239.9092 C
f
472.5645 251.9805 m
475.2695 253.9092 480.0273 252.4199 479.6113 258.6338 c
472.9189 258.5723 474.7402 254.4512 472.5645 251.9805 C
f
463.9707 244.3262 m
466.8223 246.9785 476.5801 242.8076 478.293 252.1982 c
474.8477 252.0137 471.7354 250.4658 468.791 248.4248 c
469.8906 249.3896 473.0186 255.1729 472.9287 256.9287 c
465.7129 257.0908 467.9141 249.5654 463.9707 244.3262 C
f
452.7725 239.9092 m
456.5898 242.0264 460.6641 250.3359 464.6348 253.0244 c
465.1025 248.8271 463.1338 243.8311 460.2432 241.25 c
465.5605 243.9043 469.1094 244.209 473.0752 243.7871 c
459.9023 230.4688 441.9453 237.0146 438.4805 239.708 C
438.248 241.2109 l
443.543 238.1113 448.9561 237.7949 452.7725 239.9092 C
f
499.623 251.9805 m
502.3291 253.9092 507.085 252.4199 506.6699 258.6338 c
499.9775 258.5723 501.7988 254.4512 499.623 251.9805 C
f
491.0303 244.3262 m
493.8799 246.9785 503.6387 242.8076 505.3506 252.1982 c
501.9072 252.0137 498.7939 250.4658 495.8496 248.4248 c
496.9492 249.3896 500.0762 255.1729 499.9883 256.9287 c
492.7715 257.0908 494.9717 249.5654 491.0303 244.3262 C
f
479.8311 239.9092 m
483.6475 242.0264 487.7227 250.3359 491.6943 253.0244 c
492.1621 248.8271 490.1934 243.8311 487.3008 241.25 c
492.6191 243.9043 496.1699 244.209 500.1328 243.7871 c
486.9619 230.4688 469.0029 237.0146 465.54 239.708 C
465.3066 241.2109 l
470.6025 238.1113 476.0137 237.7949 479.8311 239.9092 C
f
526.6826 251.9805 m
529.3877 253.9092 534.1455 252.4199 533.7295 258.6338 c
527.0371 258.5723 528.8574 254.4512 526.6826 251.9805 C
f
518.0889 244.3262 m
520.9395 246.9785 530.6982 242.8076 532.4111 252.1982 c
528.9648 252.0137 525.8535 250.4658 522.9092 248.4248 c
524.0088 249.3896 527.1367 255.1729 527.0459 256.9287 c
519.8311 257.0908 522.0322 249.5654 518.0889 244.3262 C
f
506.8906 239.9092 m
510.707 242.0264 514.7822 250.3359 518.7529 253.0244 c
519.2207 248.8271 517.251 243.8311 514.3613 241.25 c
519.6777 243.9043 523.2275 244.209 527.1934 243.7871 c
514.0195 230.4688 496.0625 237.0146 492.5977 239.708 C
492.3662 241.2109 l
497.6602 238.1113 503.0742 237.7949 506.8906 239.9092 C
f
553.7412 251.9805 m
556.4473 253.9092 561.2031 252.4199 560.7871 258.6338 c
554.0947 258.5723 555.917 254.4512 553.7412 251.9805 C
f
545.1484 244.3262 m
547.998 246.9785 557.7568 242.8076 559.4688 252.1982 c
556.0244 252.0137 552.9121 250.4658 549.9668 248.4248 c
551.0664 249.3896 554.1943 255.1729 554.1055 256.9287 c
546.8896 257.0908 549.0898 249.5654 545.1484 244.3262 C
f
533.9482 239.9092 m
537.7656 242.0264 541.8408 250.3359 545.8125 253.0244 c
546.2793 248.8271 544.3115 243.8311 541.4189 241.25 c
546.7373 243.9043 550.2881 244.209 554.251 243.7871 c
541.0801 230.4688 523.1211 237.0146 519.6582 239.708 C
519.4248 241.2109 l
524.7197 238.1113 530.1318 237.7949 533.9482 239.9092 C
f
580.8008 251.9805 m
583.5059 253.9092 588.2617 252.4199 587.8477 258.6338 c
581.1553 258.5723 582.9756 254.4512 580.8008 251.9805 C
f
572.207 244.3262 m
575.0576 246.9785 584.8164 242.8076 586.5293 252.1982 c
583.083 252.0137 579.9707 250.4658 577.0273 248.4248 c
578.127 249.3896 581.2539 255.1729 581.1641 256.9287 c
573.9492 257.0908 576.1504 249.5654 572.207 244.3262 C
f
561.0088 239.9092 m
564.8252 242.0264 568.8994 250.3359 572.8701 253.0244 c
573.3389 248.8271 571.3691 243.8311 568.4785 241.25 c
573.7959 243.9043 577.3457 244.209 581.3105 243.7871 c
568.1377 230.4688 550.1807 237.0146 546.7158 239.708 C
546.4834 241.2109 l
551.7783 238.1113 557.1904 237.7949 561.0088 239.9092 C
f
304.8037 271.4346 m
306.4849 271.0742 313.0332 271.6689 316.1484 273.5811 C
316.2188 273.4893 L
316.1553 273.5811 l
317.9658 274.8916 319.6318 276.4307 320.8096 278.2852 c
323.1348 281.875 323.4424 287.1094 320.8496 290.6357 c
316.3525 296.7656 306.9795 295.3809 304.5347 289.6211 c
303.3325 286.7852 303.6133 282.7471 305.6201 280.2852 c
311.6729 272.8652 323.5869 282.0684 318.0244 288.8975 c
314.9873 292.6602 308.4287 291.2979 307.9688 286.543 c
307.4902 281.5986 312.29 280.8105 314.3379 282.2773 c
316.0244 283.4834 316.0908 287.1318 313.7256 287.3223 c
312.6934 287.4053 311.7422 286.7441 311.6445 285.7021 c
311.6396 285.6396 311.6504 285.5664 311.459 285.502 c
311.2461 285.5869 311.2676 285.6709 311.3262 285.96 c
311.8018 288.375 315.8262 288.4443 315.9512 285.1465 c
316.1367 280.332 310.0342 280.1436 308.1709 283.1289 c
306.9482 285.0918 307.2139 288.0645 308.918 289.8164 c
312.3623 293.3662 319.1934 291.6006 319.9004 286.0098 c
320.7881 279.0127 313.4893 275.0234 307.8389 277.5898 c
304.2739 279.207 302.8354 282.7422 302.9614 286.4746 c
303.1455 291.833 307.1035 295.2363 312.291 295.5918 c
320.6201 296.1611 325.2568 288.2432 323.1943 280.96 c
322.1895 277.4072 319.7158 274.7949 316.8145 272.6719 C
316.7852 272.7139 l
314.2227 270.6299 308.3496 266.3438 304.0518 263.7305 c
304.9907 266.0801 304.8037 271.4346 Y
f
325.127 271.4346 m
326.8076 271.0742 333.3555 271.6689 336.4717 273.5811 C
336.541 273.4893 L
336.4775 273.5811 l
338.2891 274.8916 339.9551 276.4307 341.1328 278.2852 c
343.457 281.875 343.7656 287.1094 341.1709 290.6357 c
336.6758 296.7656 327.3018 295.3809 324.8564 289.6211 c
323.6543 286.7852 323.9355 282.7471 325.9434 280.2852 c
331.9941 272.8652 343.9082 282.0684 338.3467 288.8975 c
335.3086 292.6602 328.75 291.2979 328.291 286.543 c
327.8115 281.5986 332.6133 280.8105 334.6602 282.2773 c
336.3467 283.4834 336.4131 287.1318 334.0469 287.3223 c
333.0146 287.4053 332.0635 286.7441 331.9668 285.7021 c
331.9609 285.6396 331.9717 285.5664 331.7803 285.502 c
331.5693 285.5869 331.5889 285.6709 331.6494 285.96 c
332.125 288.375 336.1475 288.4443 336.2734 285.1465 c
336.46 280.332 330.3564 280.1436 328.4922 283.1289 c
327.2715 285.0918 327.5352 288.0645 329.2393 289.8164 c
332.6855 293.3662 339.5156 291.6006 340.2217 286.0098 c
341.1113 279.0127 333.8115 275.0234 328.1611 277.5898 c
324.5957 279.207 323.1572 282.7422 323.2842 286.4746 c
323.4668 291.833 327.4248 295.2363 332.6143 295.5918 c
340.9434 296.1611 345.5801 288.2432 343.5166 280.96 c
342.5117 277.4072 340.0371 274.7949 337.1367 272.6719 C
337.1074 272.7139 l
334.5449 270.6299 328.6709 266.3438 324.374 263.7305 c
325.3135 266.0801 325.127 271.4346 Y
f
345.4492 271.4346 m
347.1289 271.0742 353.6777 271.6689 356.793 273.5811 C
356.8633 273.4893 L
356.7998 273.5811 l
358.6104 274.8916 360.2764 276.4307 361.4551 278.2852 c
363.7793 281.875 364.0869 287.1094 361.4941 290.6357 c
356.9971 296.7656 347.624 295.3809 345.1787 289.6211 c
343.9766 286.7852 344.2578 282.7471 346.2646 280.2852 c
352.3174 272.8652 364.2314 282.0684 358.6689 288.8975 c
355.6318 292.6602 349.0732 291.2979 348.6133 286.543 c
348.1348 281.5986 352.9355 280.8105 354.9824 282.2773 c
356.6689 283.4834 356.7354 287.1318 354.3701 287.3223 c
353.3379 287.4053 352.3867 286.7441 352.2891 285.7021 c
352.2842 285.6396 352.2949 285.5664 352.1035 285.502 c
351.8916 285.5869 351.9121 285.6709 351.9707 285.96 c
352.4463 288.375 356.4707 288.4443 356.5957 285.1465 c
356.7813 280.332 350.6787 280.1436 348.8154 283.1289 c
347.5928 285.0918 347.8584 288.0645 349.5625 289.8164 c
353.0068 293.3662 359.8379 291.6006 360.5449 286.0098 c
361.4326 279.0127 354.1338 275.0234 348.4844 277.5898 c
344.918 279.207 343.4805 282.7422 343.6064 286.4746 c
343.79 291.833 347.748 295.2363 352.9365 295.5918 c
361.2666 296.1611 365.9023 288.2432 363.8389 280.96 c
362.834 277.4072 360.3604 274.7949 357.459 272.6719 C
357.4297 272.7139 l
354.8672 270.6299 348.9941 266.3438 344.6973 263.7305 c
345.6367 266.0801 345.4492 271.4346 Y
f
365.7715 271.4346 m
367.4521 271.0742 374 271.6689 377.1162 273.5811 C
377.1865 273.4893 L
377.1221 273.5811 l
378.9336 274.8916 380.5996 276.4307 381.7773 278.2852 c
384.1025 281.875 384.4102 287.1094 381.8164 290.6357 c
377.3203 296.7656 367.9463 295.3809 365.501 289.6211 c
364.2998 286.7852 364.5811 282.7471 366.5879 280.2852 c
372.6396 272.8652 384.5527 282.0684 378.9912 288.8975 c
375.9541 292.6602 369.3945 291.2979 368.9365 286.543 c
368.4561 281.5986 373.2578 280.8105 375.3047 282.2773 c
376.9922 283.4834 377.0576 287.1318 374.6914 287.3223 c
373.6592 287.4053 372.708 286.7441 372.6113 285.7021 c
372.6055 285.6396 372.6162 285.5664 372.4248 285.502 c
372.2139 285.5869 372.2334 285.6709 372.2939 285.96 c
372.7695 288.375 376.792 288.4443 376.918 285.1465 c
377.1045 280.332 371.001 280.1436 369.1387 283.1289 c
367.916 285.0918 368.1807 288.0645 369.8848 289.8164 c
373.3301 293.3662 380.1602 291.6006 380.8662 286.0098 c
381.7559 279.0127 374.4561 275.0234 368.8057 277.5898 c
365.2402 279.207 363.8018 282.7422 363.9287 286.4746 c
364.1123 291.833 368.0693 295.2363 373.2588 295.5918 c
381.5879 296.1611 386.2246 288.2432 384.1611 280.96 c
383.1563 277.4072 380.6826 274.7949 377.7813 272.6719 C
377.7529 272.7139 l
375.1904 270.6299 369.3164 266.3438 365.0186 263.7305 c
365.958 266.0801 365.7715 271.4346 Y
f
386.0938 271.4346 m
387.7734 271.0742 394.3232 271.6689 397.4375 273.5811 C
397.5078 273.4893 L
397.4453 273.5811 l
399.2568 274.8916 400.9209 276.4307 402.0996 278.2852 c
404.4238 281.875 404.7314 287.1094 402.1387 290.6357 c
397.6426 296.7656 388.2695 295.3809 385.8232 289.6211 c
384.6211 286.7852 384.9023 282.7471 386.9092 280.2852 c
392.9619 272.8652 404.876 282.0684 399.3135 288.8975 c
396.2764 292.6602 389.7178 291.2979 389.2578 286.543 c
388.7793 281.5986 393.5801 280.8105 395.627 282.2773 c
397.3135 283.4834 397.3799 287.1318 395.0146 287.3223 c
393.9824 287.4053 393.0313 286.7441 392.9336 285.7021 c
392.9287 285.6396 392.9395 285.5664 392.748 285.502 c
392.5361 285.5869 392.5566 285.6709 392.6162 285.96 c
393.0918 288.375 397.1152 288.4443 397.2402 285.1465 c
397.4258 280.332 391.3232 280.1436 389.46 283.1289 c
388.2373 285.0918 388.5029 288.0645 390.207 289.8164 c
393.6533 293.3662 400.4834 291.6006 401.1895 286.0098 c
402.0771 279.0127 394.7783 275.0234 389.1289 277.5898 c
385.5625 279.207 384.125 282.7422 384.251 286.4746 c
384.4346 291.833 388.3926 295.2363 393.5811 295.5918 c
401.9111 296.1611 406.5469 288.2432 404.4834 280.96 c
403.4785 277.4072 401.0049 274.7949 398.1045 272.6719 C
398.0742 272.7139 l
395.5117 270.6299 389.6387 266.3438 385.3418 263.7305 c
386.2813 266.0801 386.0938 271.4346 Y
f
406.416 271.4346 m
408.0967 271.0742 414.6445 271.6689 417.7607 273.5811 C
417.8311 273.4893 L
417.7666 273.5811 l
419.5781 274.8916 421.2441 276.4307 422.4219 278.2852 c
424.7471 281.875 425.0547 287.1094 422.4609 290.6357 c
417.9648 296.7656 408.5908 295.3809 406.1455 289.6211 c
404.9443 286.7852 405.2256 282.7471 407.2324 280.2852 c
413.2842 272.8652 425.1992 282.0684 419.6357 288.8975 c
416.5986 292.6602 410.04 291.2979 409.5811 286.543 c
409.1016 281.5986 413.9023 280.8105 415.9492 282.2773 c
417.6367 283.4834 417.7021 287.1318 415.3359 287.3223 c
414.3047 287.4053 413.3525 286.7441 413.2559 285.7021 c
413.25 285.6396 413.2617 285.5664 413.0703 285.502 c
412.8584 285.5869 412.8779 285.6709 412.9385 285.96 c
413.4141 288.375 417.4375 288.4443 417.5625 285.1465 c
417.749 280.332 411.6455 280.1436 409.7832 283.1289 c
408.5605 285.0918 408.8252 288.0645 410.5293 289.8164 c
413.9746 293.3662 420.8047 291.6006 421.5117 286.0098 c
422.4004 279.0127 415.1006 275.0234 409.4502 277.5898 c
405.8857 279.207 404.4463 282.7422 404.5732 286.4746 c
404.7568 291.833 408.7148 295.2363 413.9033 295.5918 c
422.2324 296.1611 426.8691 288.2432 424.8057 280.96 c
423.8008 277.4072 421.3271 274.7949 418.4258 272.6719 C
418.3975 272.7139 l
415.835 270.6299 409.9609 266.3438 405.6631 263.7305 c
406.6025 266.0801 406.416 271.4346 Y
f
426.7383 271.4346 m
428.4189 271.0742 434.9678 271.6689 438.083 273.5811 C
438.1523 273.4893 L
438.0898 273.5811 l
439.9014 274.8916 441.5654 276.4307 442.7441 278.2852 c
445.0684 281.875 445.377 287.1094 442.7832 290.6357 c
438.2871 296.7656 428.9141 295.3809 426.4678 289.6211 c
425.2656 286.7852 425.5469 282.7471 427.5537 280.2852 c
433.6064 272.8652 445.5205 282.0684 439.958 288.8975 c
436.9209 292.6602 430.3623 291.2979 429.9023 286.543 c
429.4238 281.5986 434.2246 280.8105 436.2715 282.2773 c
437.958 283.4834 438.0244 287.1318 435.6592 287.3223 c
434.627 287.4053 433.6758 286.7441 433.5781 285.7021 c
433.5732 285.6396 433.584 285.5664 433.3926 285.502 c
433.1807 285.5869 433.2012 285.6709 433.2607 285.96 c
433.7363 288.375 437.7598 288.4443 437.8857 285.1465 c
438.0703 280.332 431.9678 280.1436 430.1045 283.1289 c
428.8818 285.0918 429.1475 288.0645 430.8516 289.8164 c
434.2979 293.3662 441.1279 291.6006 441.834 286.0098 c
442.7227 279.0127 435.4238 275.0234 429.7734 277.5898 c
426.207 279.207 424.7695 282.7422 424.8955 286.4746 c
425.0791 291.833 429.0371 295.2363 434.2256 295.5918 c
442.5557 296.1611 447.1914 288.2432 445.1279 280.96 c
444.123 277.4072 441.6494 274.7949 438.749 272.6719 C
438.7188 272.7139 l
436.1563 270.6299 430.2832 266.3438 425.9863 263.7305 c
426.9258 266.0801 426.7383 271.4346 Y
f
447.0605 271.4346 m
448.7412 271.0742 455.2891 271.6689 458.4053 273.5811 C
458.4756 273.4893 L
458.4111 273.5811 l
460.2227 274.8916 461.8887 276.4307 463.0664 278.2852 c
465.3916 281.875 465.6992 287.1094 463.1055 290.6357 c
458.6094 296.7656 449.2354 295.3809 446.791 289.6211 c
445.5889 286.7852 445.8701 282.7471 447.877 280.2852 c
453.9287 272.8652 465.8438 282.0684 460.2803 288.8975 c
457.2432 292.6602 450.6846 291.2979 450.2256 286.543 c
449.7461 281.5986 454.5469 280.8105 456.5938 282.2773 c
458.2813 283.4834 458.3477 287.1318 455.9814 287.3223 c
454.9492 287.4053 453.998 286.7441 453.9014 285.7021 c
453.8955 285.6396 453.9063 285.5664 453.7148 285.502 c
453.5029 285.5869 453.5234 285.6709 453.583 285.96 c
454.0586 288.375 458.082 288.4443 458.207 285.1465 c
458.3936 280.332 452.291 280.1436 450.4277 283.1289 c
449.2051 285.0918 449.4697 288.0645 451.1738 289.8164 c
454.6191 293.3662 461.4492 291.6006 462.1563 286.0098 c
463.0449 279.0127 455.7451 275.0234 450.0947 277.5898 c
446.5303 279.207 445.0918 282.7422 445.2178 286.4746 c
445.4023 291.833 449.3594 295.2363 454.5479 295.5918 c
462.877 296.1611 467.5137 288.2432 465.4512 280.96 c
464.4453 277.4072 461.9717 274.7949 459.0703 272.6719 C
459.042 272.7139 l
456.4795 270.6299 450.6055 266.3438 446.3076 263.7305 c
447.2471 266.0801 447.0605 271.4346 Y
f
467.3828 271.4346 m
469.0635 271.0742 475.6123 271.6689 478.7275 273.5811 C
478.7969 273.4893 L
478.7344 273.5811 l
480.5459 274.8916 482.2109 276.4307 483.3887 278.2852 c
485.7139 281.875 486.0215 287.1094 483.4277 290.6357 c
478.9316 296.7656 469.5586 295.3809 467.1123 289.6211 c
465.9102 286.7852 466.1914 282.7471 468.1992 280.2852 c
474.252 272.8652 486.165 282.0684 480.6035 288.8975 c
477.5664 292.6602 471.0068 291.2979 470.5469 286.543 c
470.0684 281.5986 474.8691 280.8105 476.917 282.2773 c
478.6025 283.4834 478.6689 287.1318 476.3037 287.3223 c
475.2715 287.4053 474.3203 286.7441 474.2227 285.7021 c
474.2178 285.6396 474.2285 285.5664 474.0371 285.502 c
473.8252 285.5869 473.8457 285.6709 473.9053 285.96 c
474.3809 288.375 478.4043 288.4443 478.5303 285.1465 c
478.7158 280.332 472.6123 280.1436 470.75 283.1289 c
469.5273 285.0918 469.792 288.0645 471.4961 289.8164 c
474.9424 293.3662 481.7725 291.6006 482.4785 286.0098 c
483.3672 279.0127 476.0684 275.0234 470.418 277.5898 c
466.8516 279.207 465.4141 282.7422 465.541 286.4746 c
465.7236 291.833 469.6816 295.2363 474.8701 295.5918 c
483.2002 296.1611 487.8359 288.2432 485.7725 280.96 c
484.7686 277.4072 482.2939 274.7949 479.3936 272.6719 C
479.3633 272.7139 l
476.8008 270.6299 470.9277 266.3438 466.6309 263.7305 c
467.5703 266.0801 467.3828 271.4346 Y
f
487.7061 271.4346 m
489.3857 271.0742 495.9336 271.6689 499.0498 273.5811 C
499.1201 273.4893 L
499.0557 273.5811 l
500.8682 274.8916 502.5332 276.4307 503.7119 278.2852 c
506.0361 281.875 506.3438 287.1094 503.75 290.6357 c
499.2539 296.7656 489.8818 295.3809 487.4355 289.6211 c
486.2334 286.7852 486.5146 282.7471 488.5215 280.2852 c
494.5732 272.8652 506.4883 282.0684 500.9248 288.8975 c
497.8877 292.6602 491.3291 291.2979 490.8701 286.543 c
490.3906 281.5986 495.1924 280.8105 497.2383 282.2773 c
498.9258 283.4834 498.9922 287.1318 496.626 287.3223 c
495.5938 287.4053 494.6426 286.7441 494.5459 285.7021 c
494.54 285.6396 494.5508 285.5664 494.3594 285.502 c
494.1484 285.5869 494.168 285.6709 494.2275 285.96 c
494.7031 288.375 498.7266 288.4443 498.8516 285.1465 c
499.0381 280.332 492.9355 280.1436 491.0723 283.1289 c
489.8496 285.0918 490.1143 288.0645 491.8184 289.8164 c
495.2637 293.3662 502.0938 291.6006 502.8008 286.0098 c
503.6895 279.0127 496.3896 275.0234 490.7402 277.5898 c
487.1748 279.207 485.7363 282.7422 485.8623 286.4746 c
486.0469 291.833 490.0039 295.2363 495.1934 295.5918 c
503.5225 296.1611 508.1592 288.2432 506.0957 280.96 c
505.0898 277.4072 502.6162 274.7949 499.7148 272.6719 C
499.6865 272.7139 l
497.124 270.6299 491.25 266.3438 486.9531 263.7305 c
487.8926 266.0801 487.7061 271.4346 Y
f
508.0273 271.4346 m
509.708 271.0742 516.2568 271.6689 519.3721 273.5811 C
519.4434 273.4893 L
519.3789 273.5811 l
521.1904 274.8916 522.8555 276.4307 524.0332 278.2852 c
526.3584 281.875 526.666 287.1094 524.0732 290.6357 c
519.5762 296.7656 510.2031 295.3809 507.7568 289.6211 c
506.5566 286.7852 506.8369 282.7471 508.8438 280.2852 c
514.8965 272.8652 526.8096 282.0684 521.248 288.8975 c
518.2109 292.6602 511.6514 291.2979 511.1924 286.543 c
510.7129 281.5986 515.5137 280.8105 517.5615 282.2773 c
519.248 283.4834 519.3135 287.1318 516.9482 287.3223 c
515.916 287.4053 514.9648 286.7441 514.8672 285.7021 c
514.8623 285.6396 514.873 285.5664 514.6816 285.502 c
514.4697 285.5869 514.4902 285.6709 514.5498 285.96 c
515.0254 288.375 519.0498 288.4443 519.1748 285.1465 c
519.3604 280.332 513.2568 280.1436 511.3945 283.1289 c
510.1719 285.0918 510.4375 288.0645 512.1416 289.8164 c
515.5869 293.3662 522.417 291.6006 523.123 286.0098 c
524.0117 279.0127 516.7129 275.0234 511.0625 277.5898 c
507.498 279.207 506.0586 282.7422 506.1855 286.4746 c
506.3691 291.833 510.3262 295.2363 515.5146 295.5918 c
523.8447 296.1611 528.4805 288.2432 526.417 280.96 c
525.4131 277.4072 522.9395 274.7949 520.0381 272.6719 C
520.0098 272.7139 l
517.4473 270.6299 511.5732 266.3438 507.2754 263.7305 c
508.2148 266.0801 508.0273 271.4346 Y
f
528.3506 271.4346 m
530.0303 271.0742 536.5791 271.6689 539.6943 273.5811 C
539.7646 273.4893 L
539.7012 273.5811 l
541.5127 274.8916 543.1777 276.4307 544.3564 278.2852 c
546.6807 281.875 546.9883 287.1094 544.3945 290.6357 c
539.8994 296.7656 530.5264 295.3809 528.0801 289.6211 c
526.8779 286.7852 527.1592 282.7471 529.166 280.2852 c
535.2178 272.8652 547.1328 282.0684 541.5693 288.8975 c
538.5322 292.6602 531.9736 291.2979 531.5146 286.543 c
531.0352 281.5986 535.8369 280.8105 537.8828 282.2773 c
539.5703 283.4834 539.6367 287.1318 537.2705 287.3223 c
536.2383 287.4053 535.2871 286.7441 535.1904 285.7021 c
535.1846 285.6396 535.1953 285.5664 535.0039 285.502 c
534.793 285.5869 534.8125 285.6709 534.873 285.96 c
535.3486 288.375 539.3711 288.4443 539.4961 285.1465 c
539.6826 280.332 533.5801 280.1436 531.7168 283.1289 c
530.4941 285.0918 530.7588 288.0645 532.4629 289.8164 c
535.9092 293.3662 542.7393 291.6006 543.4453 286.0098 c
544.334 279.0127 537.0342 275.0234 531.3848 277.5898 c
527.8193 279.207 526.3809 282.7422 526.5068 286.4746 c
526.6914 291.833 530.6484 295.2363 535.8379 295.5918 c
544.167 296.1611 548.8037 288.2432 546.7402 280.96 c
545.7344 277.4072 543.2607 274.7949 540.3613 272.6719 C
540.3311 272.7139 l
537.7686 270.6299 531.8945 266.3438 527.5977 263.7305 c
528.5371 266.0801 528.3506 271.4346 Y
f
548.6719 271.4346 m
550.3525 271.0742 556.9014 271.6689 560.0166 273.5811 C
560.0879 273.4893 L
560.0234 273.5811 l
561.835 274.8916 563.5 276.4307 564.6777 278.2852 c
567.0029 281.875 567.3105 287.1094 564.7178 290.6357 c
560.2207 296.7656 550.8477 295.3809 548.4014 289.6211 c
547.2012 286.7852 547.4814 282.7471 549.4883 280.2852 c
555.541 272.8652 567.4551 282.0684 561.8926 288.8975 c
558.8555 292.6602 552.2969 291.2979 551.8369 286.543 c
551.3584 281.5986 556.1582 280.8105 558.2061 282.2773 c
559.8926 283.4834 559.958 287.1318 557.5928 287.3223 c
556.5615 287.4053 555.6094 286.7441 555.5127 285.7021 c
555.5068 285.6396 555.5186 285.5664 555.3271 285.502 c
555.1143 285.5869 555.1348 285.6709 555.1943 285.96 c
555.6699 288.375 559.6943 288.4443 559.8193 285.1465 c
560.0049 280.332 553.9014 280.1436 552.0391 283.1289 c
550.8164 285.0918 551.082 288.0645 552.7861 289.8164 c
556.2314 293.3662 563.0615 291.6006 563.7686 286.0098 c
564.6563 279.0127 557.3574 275.0234 551.707 277.5898 c
548.1426 279.207 546.7041 282.7422 546.8301 286.4746 c
547.0137 291.833 550.9717 295.2363 556.1592 295.5918 c
564.4893 296.1611 569.125 288.2432 567.0615 280.96 c
566.0576 277.4072 563.584 274.7949 560.6826 272.6719 C
560.6543 272.7139 l
558.0918 270.6299 552.2178 266.3438 547.9199 263.7305 c
548.8594 266.0801 548.6719 271.4346 Y
f
568.9951 271.4346 m
570.6758 271.0742 577.2236 271.6689 580.3398 273.5811 C
580.4092 273.4893 L
580.3457 273.5811 l
582.1572 274.8916 583.8223 276.4307 585.001 278.2852 c
587.3252 281.875 587.6338 287.1094 585.0391 290.6357 c
580.5439 296.7656 571.1709 295.3809 568.7246 289.6211 c
567.5225 286.7852 567.8037 282.7471 569.8105 280.2852 c
575.8623 272.8652 587.7773 282.0684 582.2139 288.8975 c
579.1768 292.6602 572.6182 291.2979 572.1592 286.543 c
571.6797 281.5986 576.4814 280.8105 578.5273 282.2773 c
580.2148 283.4834 580.2813 287.1318 577.915 287.3223 c
576.8828 287.4053 575.9316 286.7441 575.835 285.7021 c
575.8291 285.6396 575.8398 285.5664 575.6484 285.502 c
575.4375 285.5869 575.457 285.6709 575.5176 285.96 c
575.9932 288.375 580.0156 288.4443 580.1416 285.1465 c
580.3271 280.332 574.2246 280.1436 572.3613 283.1289 c
571.1396 285.0918 571.4033 288.0645 573.1074 289.8164 c
576.5537 293.3662 583.3838 291.6006 584.0898 286.0098 c
584.9795 279.0127 577.6797 275.0234 572.0293 277.5898 c
568.4639 279.207 567.0254 282.7422 567.1514 286.4746 c
567.3359 291.833 571.293 295.2363 576.4824 295.5918 c
584.8115 296.1611 589.4482 288.2432 587.3848 280.96 c
586.3789 277.4072 583.9053 274.7949 581.0059 272.6719 C
580.9756 272.7139 l
578.4131 270.6299 572.5391 266.3438 568.2422 263.7305 c
569.1816 266.0801 568.9951 271.4346 Y
f
587.873 263.7305 m
304.0518 263.7305 L
304.0518 271.4346 L
587.873 271.4346 L
587.873 263.7305 L
f
*u
1 D
148.6582 133.0996 m
148.6582 135.7471 L
111.7988 135.7471 l
111.2261 137.6982 109.4248 139.1211 107.291 139.1211 c
104.6963 139.1211 102.5928 137.0166 102.5928 134.4219 c
102.5928 131.8291 104.6963 129.7246 107.291 129.7246 c
109.4248 129.7246 111.228 131.1494 111.7988 133.0996 C
148.6582 133.0996 L
f
0 D
64.7534 114.1563 m
64.7534 114.1543 62.1416 115.6582 60.748 118.8438 c
58.3604 116.918 42.2334 111.0781 28.5889 124.6416 c
49.9951 111.6094 60.4814 127.3193 65.1431 129.3975 c
61.1714 125.4365 62.6396 117.5645 64.7534 114.1563 C
f
1 D
89.813 127.9404 m
76.8794 137.3809 58.4282 130.7012 65.915 115.0684 c
65.0923 120.7803 69.4141 127.8789 78.103 129.2432 c
69.4072 125.2988 71.3647 111.2979 80.627 111.6816 c
88.1914 111.9971 88.583 122.8008 81.7354 123.29 c
75.0879 123.7666 75.6094 115.2451 80.4985 115.748 c
83.5498 116.0605 83.1782 119.8691 81.1548 120.084 c
81.1035 120.0938 81.0654 120.0752 81.0195 119.9844 c
81.1157 119.7461 81.957 119.9619 82.334 118.7344 c
83.0205 116.4883 80.3496 115.4785 78.6743 116.5762 c
76.4048 118.0664 76.9009 122.9834 81.6675 122.4883 c
88.0879 121.8203 86.3892 111.1563 78.7534 113.0723 c
71.3208 114.9365 71.7412 130.5234 86.166 128.9395 c
87.3359 128.6963 88.5503 128.3662 89.813 127.9404 C
f
64.7534 154.6836 m
62.1416 153.1816 60.748 149.9961 v
58.3604 151.9209 42.2334 157.7607 28.5889 144.1982 c
49.9951 157.2314 60.4814 141.5225 65.1431 139.4434 c
61.1714 143.4043 62.6396 151.2754 64.7534 154.6836 C
f
0 D
89.813 140.8975 m
76.8794 131.458 58.4282 138.1396 65.915 153.7705 c
65.083 147.9912 69.5146 140.7949 78.4058 139.5488 c
73.9063 141.4355 71.5981 145.8877 72.7876 150.8711 c
75.1343 160.6953 88.4424 158.0596 86.4312 149.5176 c
85.1943 144.2588 77.5273 144.3096 76.8301 148.873 c
76.2056 152.96 80.8931 154.2695 82.354 152.0898 c
83.6924 150.0928 81.3359 148.2402 81.0195 148.8545 c
81.0576 148.9482 81.103 148.9658 81.1377 148.9688 c
82.7334 149.1221 83.2041 152.4971 80.4609 152.6846 c
76.2827 152.9697 75.9897 145.7598 81.6675 146.3525 c
88.0889 147.0225 86.3872 157.6816 78.7534 155.7676 c
71.3228 153.9033 71.7129 138.3096 86.1431 139.8955 c
87.3193 140.1396 88.5425 140.4707 89.813 140.8975 C
f
1 D
84.2573 133.7842 m
84.9902 132.9609 85.873 132.2588 87.2031 131.9238 c
88.6479 131.5605 89.2749 133.4541 90.8984 134.4199 c
89.2749 135.3857 88.6479 137.2822 87.2031 136.918 c
85.8765 136.585 84.9927 135.8818 84.2622 135.0625 C
71.3193 135.0625 l
59.9507 135.0625 61.0005 144.4512 46.4214 145.8936 c
46.6206 144.0576 48.3594 138.6055 53.6812 134.4219 c
48.3594 130.2402 46.6206 124.7881 46.4214 122.9512 c
61.0005 124.3945 59.9507 133.7803 71.3193 133.7803 C
71.3193 133.7842 L
84.2573 133.7842 L
f
20.6011 134.4219 m
27.3486 129.1211 28.6299 127.2676 35.5449 134.4219 c
28.6294 141.5801 27.3501 139.7256 20.6011 134.4219 C
f
44.9116 126.2988 m
47.5459 130.0547 46.9829 131.5146 50.7261 134.4219 c
46.9829 137.332 47.5459 138.791 44.9116 142.5459 c
41.7749 147.0195 35.4648 145.2383 31.9175 141.8896 c
33.5098 139.5625 36.6558 136.1211 39.2651 134.4219 c
36.6558 132.7246 33.5098 129.2832 31.9175 126.9561 c
35.4648 123.6064 41.7759 121.8242 44.9116 126.2988 C
f
0 D
101.4263 134.4219 m
101.4263 134.4199 l
99.5601 130.5313 95.0425 127.4697 89.4805 130.9063 c
90.0034 132.4287 92.0557 133.7412 93.9604 134.4199 C
93.9604 134.4219 l
92.0557 135.1016 90.0034 136.4131 89.4805 137.9375 c
95.043 141.373 99.5601 138.3096 101.4263 134.4219 C
f
*U
*u
1 D
148.6582 133.0996 m
185.5166 133.0996 l
186.0884 131.1494 187.8906 129.7246 190.0249 129.7246 c
192.6206 129.7246 194.7227 131.8291 194.7227 134.4219 c
194.7227 137.0166 192.6206 139.1211 190.0249 139.1211 c
187.8906 139.1211 186.0898 137.6982 185.5176 135.7471 C
148.6582 135.7471 L
148.6582 133.0996 L
f
0 D
232.563 114.1563 m
234.6772 117.5645 236.1436 125.4365 232.1738 129.3975 c
236.835 127.3193 247.3218 111.6094 268.7275 124.6416 c
255.082 111.0781 238.9565 116.918 236.5674 118.8438 c
235.1743 115.6582 232.563 114.1543 232.563 114.1563 C
f
1 D
207.5029 127.9404 m
208.7646 128.3662 209.981 128.6963 211.1494 128.9395 c
225.5752 130.5234 225.9951 114.9365 218.562 113.0723 c
210.9263 111.1563 209.2285 121.8203 215.6479 122.4883 c
220.4146 122.9834 220.9106 118.0664 218.6421 116.5762 c
216.9663 115.4785 214.2954 116.4883 214.9829 118.7344 c
215.3594 119.9619 216.1992 119.7461 216.2959 119.9844 c
216.2505 120.0752 216.2119 120.0938 216.1621 120.084 c
214.1392 119.8691 213.7671 116.0605 216.8169 115.748 c
221.7056 115.2451 222.228 123.7666 215.5801 123.29 c
208.7324 122.8008 209.125 111.9971 216.6895 111.6816 c
225.9512 111.2979 227.9097 125.2988 219.2139 129.2432 c
227.9019 127.8789 232.2222 120.7803 231.4014 115.0684 c
238.8887 130.7012 220.437 137.3809 207.5029 127.9404 C
f
232.563 154.6836 m
234.6772 151.2754 236.1436 143.4043 232.1738 139.4434 c
236.835 141.5225 247.3218 157.2314 268.7275 144.1982 c
255.082 157.7607 238.9565 151.9209 236.5674 149.9961 c
235.1743 153.1816 232.563 154.6836 Y
f
0 D
207.5029 140.8975 m
208.7725 140.4707 209.9956 140.1396 211.1719 139.8955 c
225.6025 138.3096 225.9937 153.9033 218.562 155.7676 c
210.9287 157.6816 209.2271 147.0225 215.6479 146.3525 c
221.3247 145.7598 221.0327 152.9697 216.854 152.6846 c
214.1123 152.4971 214.583 149.1221 216.1777 148.9688 c
216.2119 148.9658 216.2588 148.9482 216.2959 148.8545 c
215.98 148.2402 213.624 150.0928 214.9624 152.0898 c
216.4233 154.2695 221.1104 152.96 220.4858 148.873 c
219.7891 144.3096 212.1211 144.2588 210.8838 149.5176 c
208.874 158.0596 222.1821 160.6953 224.5283 150.8711 c
225.7183 145.8877 223.4102 141.4355 218.9092 139.5488 c
227.8022 140.7949 232.2319 147.9912 231.4014 153.7705 c
238.8887 138.1396 220.437 131.458 207.5029 140.8975 C
f
1 D
213.0566 133.7842 m
225.9971 133.7842 L
225.9971 133.7803 l
237.3647 133.7803 236.3149 124.3945 250.8936 122.9512 c
250.6948 124.7881 248.9561 130.2402 243.6343 134.4219 c
248.9561 138.6055 250.6948 144.0576 250.8936 145.8936 c
236.3149 144.4512 237.3647 135.0625 225.9971 135.0625 C
213.0522 135.0625 l
212.3232 135.8818 211.439 136.585 210.1108 136.918 c
208.6675 137.2822 208.0396 135.3857 206.4175 134.4199 c
208.0396 133.4541 208.6675 131.5605 210.1108 131.9238 c
211.4434 132.2588 212.3257 132.9609 213.0566 133.7842 C
f
276.7144 134.4219 m
269.9653 139.7256 268.6865 141.5801 261.7705 134.4219 c
268.6855 127.2676 269.9658 129.1211 276.7144 134.4219 C
f
252.4033 126.2988 m
255.5405 121.8242 261.8506 123.6064 265.3989 126.9561 c
263.8066 129.2832 260.6606 132.7246 258.0513 134.4219 c
260.6606 136.1211 263.8066 139.5625 265.3989 141.8896 c
261.8506 145.2383 255.541 147.0195 252.4033 142.5459 c
249.769 138.791 250.3335 137.332 246.5894 134.4219 c
250.3335 131.5146 249.769 130.0547 252.4033 126.2988 C
f
0 D
207.8369 137.9375 m
207.3125 136.4131 205.2603 135.1016 203.3545 134.4219 C
203.3545 134.4199 l
205.2603 133.7412 207.3125 132.4287 207.8369 130.9063 c
202.2744 127.4697 197.7559 130.5313 195.8906 134.4199 C
195.8906 134.4219 l
197.7559 138.3096 202.2734 141.373 207.8369 137.9375 C
f
*U
*u
83.8027 185.501 m
83.665 185.2676 83.2173 185.4854 82.752 184.7803 c
82.0825 183.7646 82.395 182.1172 84.0161 181.8105 c
88.0728 181.041 88.8828 187.7275 84.146 188.0303 c
77.5342 188.4541 77.3335 178.7256 83.7012 178.4961 c
92.499 178.1797 92.8633 190.8721 84.1992 190.9756 c
76.9976 191.0625 76.9609 184.1504 71.9678 183.2676 c
71.1113 183.1152 66.0635 183.1963 64.981 183.2012 C
61.2944 183.2217 l
53.606 182.4033 53.6914 175.5391 42.4639 174.4277 c
42.624 175.9326 44.0508 180.4004 48.4097 183.8281 c
44.0508 187.2529 42.624 191.7207 42.4639 193.2256 c
53.7529 192.1084 53.606 185.1797 61.416 184.4229 C
70.4839 184.4688 l
71.4189 184.4688 72.0229 184.4785 72.8589 184.9131 c
76.0122 186.5537 77.2617 192.373 84.2266 192.2021 c
93.1572 191.9814 93.9492 180.1289 86.5337 177.9365 c
83.6675 177.0898 80.2651 177.71 78.8784 180.6377 c
77.1558 184.2754 79.3491 189.0088 84.1934 188.5928 c
89.5645 188.1338 88.5542 180.5498 83.9541 181.4922 c
81.3726 182.0215 81.957 185.2646 83.4331 185.5557 c
83.5659 185.5713 83.6812 185.6543 83.8027 185.501 C
f
128.6348 183.1826 m
128.3525 182.1553 127.4102 181.3945 126.29 181.3945 c
124.9458 181.3955 123.8569 182.4844 123.8569 183.8281 c
123.8569 185.1709 124.9458 186.2598 126.29 186.2598 c
127.4102 186.2598 128.353 185.5029 128.6357 184.4727 C
148.6582 184.4727 L
148.6582 183.1826 L
128.6348 183.1826 L
f
1 D
121.8784 183.8291 m
121.8784 185.8203 120.2651 187.4355 118.272 187.4355 c
116.623 187.4355 115.2305 186.3291 114.8018 184.8184 C
113.7021 184.8184 l
109.5327 184.8184 107.5273 186.2188 106.3267 189.749 c
103.6797 189.5068 99.5112 189.5879 93.7378 183.8281 c
99.5112 178.0684 103.6797 178.1484 106.3267 177.9072 c
107.5273 181.4365 109.5327 182.8359 113.7021 182.8359 C
114.8018 182.8359 l
115.2314 181.3262 116.623 180.2207 118.272 180.2207 c
120.2651 180.2207 121.8784 181.8359 121.8784 183.8291 C
f
0 D
21.3062 183.8291 m
26.8354 188.1738 27.8843 189.6904 33.5493 183.8281 c
27.8843 177.9629 26.8354 179.4824 21.3062 183.8291 C
f
1 D
41.2251 190.4834 m
38.6533 194.1504 33.4849 192.6904 30.5776 189.9473 c
31.8828 188.0371 34.46 185.2178 36.5981 183.8281 c
34.46 182.4365 31.8828 179.6143 30.5776 177.71 c
33.4849 174.9648 38.6533 173.5059 41.2251 177.1699 c
43.3833 180.2471 42.9209 181.4443 45.9883 183.8281 c
42.9209 186.21 43.3833 187.4063 41.2251 190.4834 C
f
*U
*u
0 D
213.5142 185.501 m
213.6343 185.6543 213.7515 185.5713 213.8823 185.5557 c
215.3594 185.2646 215.9438 182.0215 213.3628 181.4922 c
208.7622 180.5498 207.75 188.1338 213.123 188.5928 c
217.9663 189.0088 220.1597 184.2754 218.438 180.6377 c
217.0508 177.71 213.6475 177.0898 210.7817 177.9365 c
203.3657 180.1289 204.1587 191.9814 213.0894 192.2021 c
220.0542 192.373 221.3042 186.5537 224.457 184.9131 c
225.293 184.4785 225.8979 184.4688 226.832 184.4688 C
235.8989 184.4229 l
243.7104 185.1797 243.5625 192.1084 254.853 193.2256 c
254.6904 191.7207 253.2656 187.2529 248.9063 183.8281 c
253.2656 180.4004 254.6904 175.9326 254.853 174.4277 c
243.6226 175.5391 243.7104 182.4033 236.022 183.2217 C
232.3345 183.2012 l
231.2534 183.1963 226.2051 183.1152 225.3481 183.2676 c
220.355 184.1504 220.3179 191.0625 213.1157 190.9756 c
204.4521 190.8721 204.8169 178.1797 213.6147 178.4961 c
219.9824 178.7256 219.7808 188.4541 213.1685 188.0303 c
208.4336 187.7275 209.2427 181.041 213.2988 181.8105 c
214.9204 182.1172 215.2329 183.7646 214.5635 184.7803 c
214.0996 185.4854 213.6514 185.2676 213.5142 185.501 C
f
168.6816 183.1826 m
148.6582 183.1826 L
148.6582 184.4727 L
168.6797 184.4727 l
168.9624 185.5029 169.9063 186.2598 171.0269 186.2598 c
172.3701 186.2598 173.4585 185.1709 173.4585 183.8281 c
173.4585 182.4844 172.3701 181.3955 171.0269 181.3945 c
169.9063 181.3945 168.9629 182.1553 168.6816 183.1826 C
f
1 D
175.4351 183.8291 m
175.4351 181.8359 177.0513 180.2207 179.0444 180.2207 c
180.6934 180.2207 182.0835 181.3262 182.5132 182.8359 C
183.6143 182.8359 l
187.7822 182.8359 189.7886 181.4365 190.9893 177.9072 c
193.6362 178.1484 197.8047 178.0684 203.5776 183.8281 c
197.8047 189.5879 193.6362 189.5068 190.9893 189.749 c
189.7886 186.2188 187.7822 184.8184 183.6143 184.8184 C
182.5156 184.8184 l
182.0845 186.3291 180.6934 187.4355 179.0444 187.4355 c
177.0513 187.4355 175.4351 185.8203 175.4351 183.8291 C
f
0 D
276.0093 183.8291 m
270.481 179.4824 269.4316 177.9629 263.7646 183.8281 c
269.4316 189.6904 270.481 188.1738 276.0093 183.8291 C
f
1 D
251.3281 183.8281 m
254.3955 181.4443 253.9316 180.2471 256.0898 177.1699 c
258.6606 173.5059 263.8315 174.9648 266.7393 177.71 c
265.4341 179.6143 262.856 182.4365 260.7178 183.8281 c
262.856 185.2178 265.4341 188.0371 266.7393 189.9473 c
263.8315 192.6904 258.6606 194.1504 256.0898 190.4834 c
253.9316 187.4063 254.3955 186.21 251.3281 183.8281 C
f
*U
*u
0 D
36.3076 255.0703 m
43.1724 258.4463 48.6748 257.7656 49.8594 256.8604 c
51.0439 255.959 51.8115 253.709 52.0488 250.3369 c
49.0898 249.2129 43.3496 247.9102 42.4629 249.8613 c
41.5737 251.8164 39.5029 254.6563 36.3076 255.0703 C
f
94.4048 220.252 m
103.5044 221.458 109.8628 223.9795 114.3584 226.9395 C
148.6577 226.9395 L
148.6577 225.5137 l
124.4463 225.5137 109.2056 218.6064 94.4048 220.252 C
f
1 D
75.0283 226.9395 m
82.5127 220.3604 97.9116 220.5811 110.6309 226.9395 C
75.0283 226.9395 L
f
66.6387 229.1914 m
66.6387 229.1914 L
148.6577 229.1914 L
148.6577 230.627 L
85.1753 230.627 L
85.1753 230.6572 l
74.0894 230.582 74.0654 244.8193 83.0088 246.7607 c
94.1665 249.1807 95.0786 233.6328 86.0947 234.5273 c
81.1406 235.0215 81.397 240.4814 84.3589 241.7637 c
86.6084 242.7363 89.1899 241.1777 88.0898 239.0195 c
87.4839 237.8301 86.6025 238.1504 86.4644 237.8389 c
86.5591 237.6465 86.6597 237.7256 86.7568 237.7236 c
88.7979 237.8145 89.8184 241.8154 86.4614 242.3682 c
80.8618 243.2881 79.4019 234.1758 86.5977 233.8486 c
96.1035 233.417 95.1465 250.2441 82.7871 247.8076 c
74.2583 246.1279 72.7876 234.6973 79.5752 230.6318 c
70.8535 232.1973 71.3926 243.8916 64.7129 248.8574 c
64.417 247.3789 63.3525 243.5293 64.7734 240.335 c
62.4048 241.6963 56.4277 237.0215 51.6938 237.3164 c
55.915 234.2305 64.6685 231.2979 75.1733 230.627 C
66.6362 230.627 L
31.9521 230.627 l
18.3901 230.627 19.2578 250.792 31.8003 250.792 c
32.6719 250.792 33.4644 250.7158 34.1846 250.5664 c
42.6255 248.8398 40.8687 237.8135 36.9531 236.9619 c
36.8135 241.459 33.1177 240.8887 30.437 241.4395 C
30.4336 241.4189 l
32.1274 240.376 32.4707 237.6885 32.5229 235.9365 c
32.562 234.668 33.5894 233.2451 36.1514 234.0264 C
36.1514 234.0254 l
44.1621 236.791 43.6177 249.4014 34.3389 251.3115 c
33.5703 251.4756 32.7383 251.5596 31.8501 251.5596 c
17.5679 251.5596 17.4956 229.1914 31.9229 229.1914 C
60.4634 229.1914 l
55.9561 226.5264 54.3784 220.8066 56.1748 215.9053 c
59.7388 206.1914 74.6348 206.5273 75.4663 216.9971 c
76.3169 227.71 62.2773 227.5654 62.7373 219.9688 c
63.0425 214.9023 68.8911 214.2666 70.2764 216.9219 c
71.6323 219.5244 68.4541 221.4756 68.0996 220.7363 c
68.1992 220.5049 68.293 220.5947 68.3906 220.5566 c
70.9253 219.9121 70.835 216.3467 68.0288 215.9141 c
62.5659 215.0674 61.0957 223.9053 67.6792 224.5908 c
77.8335 225.6465 76.8193 207.5166 64.1704 210.3633 c
53.7583 212.7051 54.541 229.2813 66.6387 229.1914 C
f
0 D
28.3926 235.6572 m
25.9624 238.2129 24.7827 242.626 27.9087 246.5967 c
27.4219 244.2568 27.7661 242.9941 28.5503 242.2725 c
32.8125 237.8369 30.603 233.4512 28.3926 235.6572 C
f
1 D
44.1792 246.9629 m
48.1431 234.1201 58.0859 243.3525 62.4067 242.1104 c
60.9268 245.4834 65.7793 253.5313 53.5288 256.3721 c
54.8311 254.7754 53.9424 249.8613 55.0669 248.2061 c
53.2925 248.9756 46.5449 246.3711 44.1792 246.9629 C
f
*U
*u
0 D
261.0088 255.0703 m
257.8125 254.6563 255.7407 251.8164 254.8535 249.8613 c
253.9653 247.9102 248.2251 249.2129 245.2666 250.3369 c
245.5044 253.709 246.272 255.959 247.4565 256.8604 c
248.6392 257.7656 254.1436 258.4463 261.0088 255.0703 C
f
202.9111 220.252 m
188.1104 218.6064 172.8696 225.5137 148.6577 225.5137 C
148.6577 226.9395 L
182.9575 226.9395 l
187.4521 223.9795 193.811 221.458 202.9111 220.252 C
f
1 D
222.2886 226.9395 m
186.6841 226.9395 l
199.4033 220.5811 214.8027 220.3604 222.2886 226.9395 C
f
230.6768 229.1914 m
242.7754 229.2813 243.5571 212.7051 233.1455 210.3633 c
220.4961 207.5166 219.4819 225.6465 229.6367 224.5908 c
236.2202 223.9053 234.7495 215.0674 229.2861 215.9141 c
226.481 216.3467 226.3906 219.9121 228.9253 220.5566 c
229.0229 220.5947 229.1162 220.5049 229.2163 220.7363 c
228.8613 221.4756 225.6836 219.5244 227.0391 216.9219 c
228.4253 214.2666 234.2729 214.9023 234.5781 219.9688 c
235.0376 227.5654 220.9985 227.71 221.8501 216.9971 c
222.6812 206.5273 237.5771 206.1914 241.1406 215.9053 c
242.937 220.8066 241.3599 226.5264 236.8521 229.1914 C
265.3916 229.1914 l
279.8203 229.1914 279.7485 251.5596 265.4658 251.5596 c
264.5771 251.5596 263.7456 251.4756 262.9766 251.3115 c
253.6982 249.4014 253.1543 236.791 261.1646 234.0254 C
261.1646 234.0264 l
263.7261 233.2451 264.7544 234.668 264.793 235.9365 c
264.8457 237.6885 265.1885 240.376 266.8828 241.4189 C
266.8789 241.4395 l
264.1982 240.8887 260.5029 241.459 260.3628 236.9619 c
256.4473 237.8135 254.6904 248.8398 263.1313 250.5664 c
263.8511 250.7158 264.6445 250.792 265.5146 250.792 c
278.0581 250.792 278.9253 230.627 265.3638 230.627 C
230.6802 230.627 L
222.1426 230.627 l
232.6479 231.2979 241.3994 234.2305 245.6226 237.3164 c
240.8887 237.0215 234.9111 241.6963 232.5425 240.335 c
233.9629 243.5293 232.8984 247.3789 232.6025 248.8574 c
225.9238 243.8916 226.4624 232.1973 217.7402 230.6318 c
224.5288 234.6973 223.0571 246.1279 214.5288 247.8076 c
202.1699 250.2441 201.2129 233.417 210.7178 233.8486 c
217.9146 234.1758 216.4546 243.2881 210.854 242.3682 c
207.4971 241.8154 208.519 237.8145 210.5591 237.7236 c
210.6553 237.7256 210.7568 237.6465 210.8521 237.8389 c
210.7134 238.1504 209.8315 237.8301 209.2261 239.0195 c
208.126 241.1777 210.707 242.7363 212.9565 241.7637 c
215.9194 240.4814 216.1753 235.0215 211.2217 234.5273 c
202.2373 233.6328 203.1499 249.1807 214.3071 246.7607 c
223.2505 244.8193 223.2266 230.582 212.1401 230.6572 C
212.1401 230.627 L
148.6577 230.627 L
148.6577 229.1914 L
230.6768 229.1914 L
f
0 D
268.9219 235.6572 m
266.7129 233.4512 264.5029 237.8369 268.7646 242.2725 c
269.5483 242.9941 269.8936 244.2568 269.4067 246.5967 c
272.5332 242.626 271.353 238.2129 268.9219 235.6572 C
f
1 D
242.2495 248.2061 m
243.3726 249.8613 242.4849 254.7754 243.7866 256.3721 c
231.5371 253.5313 236.3892 245.4834 234.9087 242.1104 c
239.2305 243.3525 249.1729 234.1201 253.1372 246.9629 c
250.7705 246.3711 244.0229 248.9756 242.2495 248.2061 C
f
*U
*u
0 D
88.5972 278.0508 m
88.8428 277.9268 88.9736 277.8525 88.7207 277.4727 c
87.1621 275.1133 82.6187 275.2314 82.4502 279.4512 c
82.2017 285.6113 92.4424 286.6436 93.4907 279.5879 c
94.6274 271.9404 86.7188 269.332 81.1782 272.4238 c
72.8164 277.0889 76.2651 292.4434 89.3169 291.6699 c
106.3887 290.6563 104.4385 263.0674 85.0698 264.832 c
64.4556 266.7139 62.7461 299.4199 90.812 299.3311 C
92.6724 299.3242 L
92.6724 299.3262 L
148.6582 299.3262 L
148.6582 297.1074 L
92.6724 297.1074 L
90.812 297.1006 l
81.4067 297.0703 71.9731 292.4199 71.8369 281.8672 c
71.605 263.8066 96.8784 261.1299 99.2153 276.7324 c
101.7578 293.7188 79.0176 294.4688 77.7817 281.4941 c
76.7827 270.9951 90.4131 269.375 92.4663 276.2686 c
94.0015 281.4102 89.7856 285.2539 85.4731 283.2334 c
82.3994 281.793 82.5884 277.8984 84.46 276.8633 c
86.7891 275.5703 88.2607 277.9912 88.5972 278.0508 C
f
1 D
55.4512 299.332 m
53.8999 302.0449 21.3047 299.332 21.3062 299.332 c
23.9419 295.9385 34.4927 288.9609 39.6963 287.6553 c
44.2261 286.5156 47.2607 296.4111 55.4512 299.332 C
f
46.707 282.876 m
61.9048 277.3936 63.3628 297.1738 78.7017 299.3975 c
56.4229 302.9346 47.6787 290.0967 46.707 282.876 C
f
*U
*u
0 D
208.7168 278.0508 m
209.0537 277.9912 210.5273 275.5703 212.8569 276.8633 c
214.728 277.8984 214.9146 281.793 211.8428 283.2334 c
207.5298 285.2539 203.3149 281.4102 204.8501 276.2686 c
206.9038 269.375 220.5347 270.9951 219.5332 281.4941 c
218.2993 294.4688 195.5586 293.7188 198.1016 276.7324 c
200.437 261.1299 225.7095 263.8066 225.4785 281.8672 c
225.3423 292.4199 215.9092 297.0703 206.5044 297.1006 C
204.644 297.1074 L
148.6582 297.1074 L
148.6582 299.3262 L
204.644 299.3262 L
204.644 299.3242 L
206.5044 299.3311 l
234.5693 299.4199 232.8608 266.7139 212.2446 264.832 c
192.877 263.0674 190.9268 290.6563 207.9995 291.6699 c
221.0513 292.4434 224.498 277.0889 216.1382 272.4238 c
210.5952 269.332 202.6885 271.9404 203.8262 279.5879 c
204.8735 286.6436 215.1152 285.6113 214.8662 279.4512 c
214.6963 275.2314 210.1548 275.1133 208.5952 277.4727 c
208.3423 277.8525 208.4731 277.9268 208.7168 278.0508 C
f
1 D
241.8647 299.332 m
250.0537 296.4111 253.0903 286.5156 257.6182 287.6553 c
262.8228 288.9609 273.3721 295.9385 276.0093 299.332 c
276.0098 299.332 243.417 302.0449 241.8647 299.332 C
f
218.6143 299.3975 m
233.9521 297.1738 235.4121 277.3936 250.6094 282.876 c
249.6372 290.0967 240.8931 302.9346 218.6143 299.3975 C
f
*U
*u
527.957 361.8818 m
526.9219 367.1025 522.459 370.043 517.4971 370.9336 c
516.707 371.0732 515.9111 371.168 515.1113 371.209 C
514.9756 371.2168 l
494.0811 371.2168 477.084 353.3154 466.5068 337.5771 c
475.3223 343.749 484.0107 348.6113 497.7363 349.9561 c
490.9355 351.1777 479.6016 349.1621 477.8408 348.1543 c
476.0771 347.1465 493.2295 369.7021 514.9756 369.7021 c
515.2012 369.623 518.1689 369.6904 521.3555 368.0313 c
525.6406 365.7939 527.3301 361.8125 526.5781 357.2627 c
524.8096 346.5596 507.6797 345.791 508.1299 358.1641 c
508.2119 360.415 509.0527 362.4092 510.9219 363.7627 c
515.4131 367.0146 523.0732 364.7314 522.751 358.082 c
522.4238 351.2891 511.7275 350.9893 512.6719 357.8125 c
513.2412 361.9307 519.2129 361.3779 519.1201 357.8164 c
519.0547 355.4033 516.5254 355.4072 515.6494 356.6797 c
515.4199 357.0137 515.1113 356.7998 515.332 356.4629 c
516.3496 354.8945 519.4502 354.9248 519.5664 357.7998 c
519.7363 361.9697 512.8164 362.6553 512.1094 357.8936 c
510.9199 349.8994 524.2266 350.3018 523.4482 359.25 c
522.5889 369.1055 505.4883 368.5615 507.2207 355.8184 c
508.8428 343.8926 528.166 345.6484 528.1865 359.4434 c
528.1865 360.2549 528.1152 361.0742 527.957 361.8818 C
f
0 D
508.7979 314.0557 m
511.5488 319.9238 512.9453 328.4453 505.959 332.6377 c
520.6279 327.7451 553.3154 315.5928 573.4336 320.7598 c
551.082 312.1016 518.9463 323.6758 514.9014 324.5957 c
514.0625 319.7842 511.499 316.4336 508.7979 314.0557 C
f
454.1172 318.3867 m
475.0879 341.4336 517.5029 338.7051 507.2168 314.8975 c
502.6084 333.1934 474.3896 335.8467 454.1172 316.2959 C
454.1172 318.3867 L
f
509.4521 335.5713 m
513.9219 335.5713 520.3486 336.8271 525.5176 339.0615 c
531.9434 336.5469 583.4912 312.9385 600.1123 349.9561 c
582.9307 301.9043 522.4434 333.7539 509.4521 335.5713 C
f
454.1172 323.5605 m
468.0908 337.5352 490.3145 354.8887 526.3564 342.3643 c
504.5635 329.2822 480.8145 349.4023 454.1172 321.4619 C
454.1172 323.5605 l
454.1172 327.3604 454.1172 340.1475 y
458.0459 345.1465 463.168 346.7832 464.8945 346.9707 c
464.8945 336.126 460.8379 331.1006 454.1172 323.5605 C
f
454.1172 371.2334 m
459.0996 364.8896 460.8398 363.6865 454.1172 357.1934 C
454.1172 371.2334 L
f
1 D
461.6504 348.6943 m
465.8574 351.6455 464.2793 357.2627 461.1318 360.6006 c
458.9443 359.1035 455.7119 356.1465 454.1172 353.6914 C
454.1172 342.9248 l
456.7598 345.7832 458.123 346.2217 461.6504 348.6943 C
f
*U
*u
380.2734 361.8818 m
380.1133 361.0742 380.0439 360.2549 380.0439 359.4434 c
380.0654 345.6484 399.3857 343.8926 401.0078 355.8184 c
402.7422 368.5615 385.6406 369.1055 384.7803 359.25 c
384.0029 350.3018 397.3105 349.8994 396.1221 357.8936 c
395.415 362.6553 388.4932 361.9697 388.665 357.7998 c
388.7793 354.9248 391.8809 354.8945 392.8975 356.4629 c
393.1182 356.7998 392.8105 357.0137 392.5801 356.6797 c
391.7061 355.4072 389.1729 355.4033 389.1104 357.8164 c
389.0166 361.3779 394.9883 361.9307 395.5576 357.8125 c
396.502 350.9893 385.8066 351.2891 385.4795 358.082 c
385.1563 364.7314 392.8174 367.0146 397.3057 363.7627 c
399.1768 362.4092 400.0176 360.415 400.1016 358.1641 c
400.5518 345.791 383.4199 346.5596 381.6504 357.2627 c
380.8994 361.8125 382.5879 365.7939 386.873 368.0313 c
390.0605 369.6904 393.0293 369.623 393.2539 369.7021 c
415 369.7021 432.1533 347.1465 430.3896 348.1543 c
428.626 349.1621 417.2959 351.1777 410.4941 349.9561 c
424.2197 348.6113 432.9082 343.749 441.7236 337.5771 c
431.1445 353.3154 414.1484 371.2168 393.2539 371.2168 C
393.1182 371.209 l
392.3184 371.168 391.5215 371.0732 390.7324 370.9336 c
385.7695 370.043 381.3086 367.1025 380.2734 361.8818 C
f
0 D
399.4307 314.0557 m
396.7314 316.4336 394.167 319.7842 393.3301 324.5957 c
389.2822 323.6758 357.1484 312.1016 334.7969 320.7598 c
354.915 315.5928 387.6006 327.7451 402.2715 332.6377 c
395.2852 328.4453 396.6816 319.9238 399.4307 314.0557 C
f
454.1123 318.3867 m
454.1123 316.2959 l
433.8418 335.8467 405.6221 333.1934 401.0117 314.8975 c
390.7275 338.7051 433.1426 341.4336 454.1123 318.3867 C
f
398.7773 335.5713 m
385.7871 333.7539 325.2988 301.9043 308.1162 349.9561 c
324.7393 312.9385 376.2861 336.5469 382.7129 339.0615 c
387.8818 336.8271 394.3066 335.5713 398.7773 335.5713 C
f
454.1123 323.5605 m
447.3926 331.1006 443.3359 336.126 443.3359 346.9707 c
445.0615 346.7832 450.1846 345.1465 454.1123 340.1475 c
454.1123 327.3604 454.1123 323.5605 V
454.1123 321.4619 l
427.415 349.4023 403.666 329.2822 381.875 342.3643 c
417.916 354.8887 440.1387 337.5352 454.1123 323.5605 C
f
454.1123 371.2334 m
454.1123 357.1934 l
447.3896 363.6865 449.1318 364.8896 454.1123 371.2334 C
f
1 D
454.1123 342.9248 m
454.1123 353.6914 l
452.5186 356.1465 449.2852 359.1035 447.0977 360.6006 c
443.9502 357.2627 442.3721 351.6455 446.5791 348.6943 c
450.1074 346.2217 451.4707 345.7832 454.1123 342.9248 C
f
*U
*u
0 D
600.1807 390.8418 m
598.0049 439.2324 545.9658 439.8203 514.4004 417.25 c
522.7451 424.3857 523.8838 426.0146 530.7285 431.1045 c
565.457 456.9268 604.1162 442.6201 600.1807 390.8418 C
f
1 D
516.7617 447.4214 m
521.7988 443.6543 524.1631 435.6133 517.4355 424.8711 c
544.4043 449.8706 563.3398 450.5928 581.3037 442.8516 c
562.2549 457.6494 536.1279 448.2056 526.9971 438.6016 c
525.8906 443.4839 520.541 447.4214 516.7617 447.4214 C
f
484.1768 405.8604 m
465.9951 398.1299 456.5635 414.3545 461.9795 423.1729 c
467.7744 432.6162 479.4326 432.7588 483.0527 426.2725 c
475.8975 426.3447 476.5537 421.3242 476.0791 416.9316 C
476.082 416.9316 l
478.2334 419.1934 480.8828 419.8975 484.6885 420.2217 c
487.2178 420.4287 487.3213 422.793 486.5908 424.8867 c
485.5039 427.6689 483.0146 430.2539 478.7217 432.0117 c
470.0469 435.2871 458.084 427.9629 458.084 416.7969 c
458.084 403.1953 479.8896 387.9688 509.6494 417.25 C
509.7861 417.3857 l
510.1934 417.7842 510.5986 418.1934 511.0088 418.6104 C
511.0479 418.6475 l
521.6611 429.9033 518.7695 443.0044 514.085 446.6323 c
517.0771 433.0957 502.3555 413.582 484.1768 405.8604 C
f
0 D
475.4746 414.0977 m
475.5293 414.2314 475.5742 414.3662 475.6182 414.5078 C
475.6182 414.5127 l
477.5029 418.9043 489.3643 419.9951 484.3535 414.0479 c
481.4355 410.79 476.6191 408.9893 471.2656 410.7402 c
473.6855 411.2246 474.8662 412.4922 475.4746 414.0977 C
f
454.4609 383.1611 m
454.4609 404.3096 l
463.2021 392.0898 461.1074 390.2109 454.4609 383.1611 C
f
1 D
547.2178 405.1113 m
547.3916 405.5146 546.0537 406.7236 544.2871 406.2998 c
537.4365 404.6582 541.9102 394.1953 549.3555 397.6143 c
559.0322 402.0605 550.2275 418.2412 539.3027 410.0234 c
528.416 401.834 539.1592 384.4365 552.1406 390.5293 c
571.7383 399.7256 554.417 437.0967 527.1006 409.7744 c
509.7266 392.3984 486.665 378.8701 462.9863 393.7314 c
486.0469 377.2607 510.7051 390.834 528.6914 408.1563 c
550.5723 429.2256 560.7246 410.4941 559.0742 401.2656 c
557.4941 392.4258 546.9004 386.8174 539.8135 392.874 c
527.8906 403.0654 544.2549 417.9375 551.1055 408.8594 c
558.1602 399.5137 543.8252 392.9375 541.3408 401.1553 c
540.2676 404.7119 545.166 407.709 547.001 405.2148 c
547.0381 405.1602 547.0889 405.1113 547.2178 405.1113 C
f
0 D
454.4609 441.4194 m
454.4609 464.5278 l
456.0957 463.6572 460.2949 460.5889 462.959 456.7061 c
466.7813 451.6724 456.9355 448.5981 454.4609 441.4194 C
f
454.4609 419.9033 m
454.4609 433.6035 l
455.6895 440.0908 461.3955 447.0967 466.7227 448.7686 c
471.6455 435.6855 457.8633 433.8926 454.4609 419.9033 C
f
1 D
507.7891 410.2686 m
501.0889 405.5771 490.082 398.293 482.6006 397.5166 c
474.4014 396.6611 464.0273 397.4629 457.5693 407.207 c
464.498 388.8574 486.7881 387.3184 502.9092 396.2559 c
519.5205 405.4678 522.9395 416.5234 543.8789 427.1729 c
524.7559 421.0107 520.4746 419.1436 507.7891 410.2686 C
f
*U
*u
0 D
308.7383 390.8418 m
304.8027 442.6201 343.4609 456.9268 378.1885 431.1045 c
385.0342 426.0146 386.1738 424.3857 394.5176 417.25 c
362.9531 439.8203 310.9141 439.2324 308.7383 390.8418 C
f
1 D
392.1572 447.4214 m
388.377 447.4214 383.0273 443.4839 381.9209 438.6016 c
372.79 448.2056 346.6621 457.6494 327.6133 442.8516 c
345.5781 450.5928 364.5137 449.8706 391.4824 424.8711 c
384.7549 435.6133 387.1191 443.6543 392.1572 447.4214 C
f
424.7412 405.8604 m
406.5625 413.582 391.8418 433.0957 394.8311 446.6323 c
390.1484 443.0044 387.2568 429.9033 397.8691 418.6475 C
397.9102 418.6104 l
398.3193 418.1934 398.7256 417.7842 399.1318 417.3857 C
399.2695 417.25 l
429.0283 387.9688 450.834 403.1953 450.834 416.7969 c
450.834 427.9629 438.8721 435.2871 430.1963 432.0117 c
425.9043 430.2539 423.415 427.6689 422.3271 424.8867 c
421.5986 422.793 421.7002 420.4287 424.2305 420.2217 c
428.0361 419.8975 430.6846 419.1934 432.8359 416.9316 C
432.8398 416.9316 l
432.3643 421.3242 433.0205 426.3447 425.8652 426.2725 c
429.4863 432.7588 441.1426 432.6162 446.9395 423.1729 c
452.3545 414.3545 442.9229 398.1299 424.7412 405.8604 C
f
0 D
433.4443 414.0977 m
434.0537 412.4922 435.2314 411.2246 437.6523 410.7402 c
432.2988 408.9893 427.4814 410.79 424.5645 414.0479 c
419.5547 419.9951 431.415 418.9043 433.3008 414.5127 C
433.3008 414.5078 l
433.3418 414.3662 433.3896 414.2314 433.4443 414.0977 C
f
454.458 383.1611 m
447.8105 390.2109 445.7158 392.0898 454.458 404.3096 C
454.458 383.1611 L
f
1 D
361.7012 405.1113 m
361.8291 405.1113 361.8799 405.1602 361.916 405.2148 c
363.7529 407.709 368.6504 404.7119 367.5771 401.1553 c
365.0947 392.9375 350.7588 399.5137 357.8125 408.8594 c
364.6641 417.9375 381.0273 403.0654 369.1055 392.874 c
362.0176 386.8174 351.4238 392.4258 349.8438 401.2656 c
348.1934 410.4941 358.3447 429.2256 380.2266 408.1563 c
398.2148 390.834 422.8711 377.2607 445.9316 393.7314 c
422.2529 378.8701 399.1914 392.3984 381.8193 409.7744 c
354.501 437.0967 337.1807 399.7256 356.7773 390.5293 c
369.7588 384.4365 380.5039 401.834 369.6152 410.0234 c
358.6904 418.2412 349.8867 402.0605 359.5615 397.6143 c
367.0078 394.1953 371.4814 404.6582 364.6318 406.2998 c
362.8662 406.7236 361.5273 405.5146 361.7012 405.1113 C
f
0 D
454.458 441.4194 m
451.9824 448.5981 442.1357 451.6724 445.959 456.7061 c
448.6221 460.5889 452.8223 463.6572 454.458 464.5278 C
454.458 441.4194 L
f
454.458 419.9033 m
451.0547 433.8926 437.2715 435.6855 442.1953 448.7686 c
447.5225 447.0967 453.2266 440.0908 454.458 433.6035 C
454.458 419.9033 L
f
1 D
365.04 427.1729 m
385.9785 416.5234 389.3975 405.4678 406.0088 396.2559 c
422.1299 387.3184 444.4209 388.8574 451.3477 407.207 c
444.8906 397.4629 434.5166 396.6611 426.3174 397.5166 c
418.8359 398.293 407.8281 405.5771 401.1289 410.2686 c
388.4424 419.1436 384.1621 421.0107 365.04 427.1729 C
f
*U
*u
472.4023 499.7964 m
472.4736 499.6689 472.5391 499.6797 472.6152 499.6641 c
474.7031 499.2261 474.082 495.1997 470.5869 495.6875 c
466.4434 496.2676 466.7178 504.2412 472.6094 503.5469 c
478.9775 502.7925 479.0293 493.7686 473.459 491.9077 c
465.9375 489.394 459.625 499.1045 465.8955 505.3442 c
471.4941 510.9067 481.1416 506.4995 481.3105 498.6904 c
481.5352 488.353 469.875 485.4531 462.0254 490.373 c
454.5098 496.3906 457.8809 507.8237 462.542 510.1543 c
461.917 511.6592 459.2207 518.9893 453.7695 522.6904 C
453.7695 494.0493 l
456.1973 493.2969 457.2617 492.0391 460.4521 490.0249 c
468.9873 483.8892 482.5859 487.0713 482.2344 498.7227 c
481.9775 507.2627 471.4229 511.9756 465.3789 505.8574 c
458.665 499.0566 465.542 488.6196 473.6338 491.3984 c
477.6387 492.7715 478.9883 497.6816 477.25 500.9009 c
474.2627 506.4404 465.5234 503.9629 467.7666 497.769 c
468.9014 494.6343 472.7881 494.7778 473.8076 496.9253 c
474.7783 498.9722 472.7422 500.2939 472.4023 499.7964 C
f
0 D
530.0186 500.5176 m
531.5732 496.9443 532.5127 492.2173 531.7598 487.4238 c
536.4688 490.5225 568.5244 515.355 600.1094 517.0479 c
568.9004 512.1626 541.6377 484.1475 517.7109 472.3315 c
526.9854 477.9521 531.5352 488.9204 530.0186 500.5176 C
f
454.1133 484.5098 m
472.8086 469.0732 518.5088 468.4722 527.5391 499.8687 c
528.8506 464.7783 478.8369 459.3271 454.1133 477.751 C
454.1133 484.5098 L
f
1 D
509.6221 497.9404 m
514.2559 500.269 521.2373 496.8354 522.0811 506.5186 c
511.7422 508.0249 513.5684 501.2334 509.6221 497.9404 C
f
494.5361 488.188 m
499.5674 491.5972 513.623 482.8301 518.5088 496.9092 c
513.1514 497.4468 507.9805 495.8027 502.9512 493.3584 c
504.877 494.5835 511.083 502.7568 511.3652 505.4873 c
500.2734 507.46 501.8701 495.3281 494.5361 488.188 C
f
0 D
476.2051 484.0503 m
482.5986 486.4028 490.8721 498.2485 497.6406 501.4463 c
497.3584 494.8613 493.127 487.6245 488.0498 484.333 c
496.8867 487.1572 502.4355 486.7788 508.4502 485.1787 c
484.9492 467.7856 458.8125 482.1733 454.1133 487.1572 C
454.1133 489.5293 l
461.5391 483.4829 469.8125 481.6997 476.2051 484.0503 C
f
*U
*u
1 D
435.8213 499.7964 m
435.4805 500.2939 433.4443 498.9722 434.418 496.9253 c
435.4346 494.7778 439.3223 494.6343 440.458 497.769 c
442.7012 503.9629 433.9619 506.4404 430.9727 500.9009 c
429.2373 497.6816 430.585 492.7715 434.5889 491.3984 c
442.6836 488.6196 449.5596 499.0566 442.8447 505.8574 c
436.7998 511.9756 426.2461 507.2627 425.9893 498.7227 c
425.6387 487.0713 439.2383 483.8892 447.7705 490.0249 c
450.9609 492.0391 452.0254 493.2969 454.4561 494.0493 C
454.4561 522.6904 l
449.0049 518.9893 446.3076 511.6592 445.6826 510.1543 c
450.3418 507.8237 453.7139 496.3906 446.1982 490.373 c
438.3506 485.4531 426.6895 488.353 426.9121 498.6904 c
427.084 506.4995 436.7285 510.9067 442.3252 505.3442 c
448.6006 499.1045 442.2871 489.394 434.7666 491.9077 c
429.1953 493.7686 429.2451 502.7925 435.6143 503.5469 c
441.5049 504.2412 441.7822 496.2676 437.6377 495.6875 c
434.1416 495.1997 433.5225 499.2261 435.6104 499.6641 c
435.6836 499.6797 435.749 499.6689 435.8213 499.7964 C
f
0 D
378.207 500.5176 m
376.6885 488.9204 381.2383 477.9521 390.5146 472.3315 c
366.5879 484.1475 339.3252 512.1626 308.1133 517.0479 c
339.7012 515.355 371.7559 490.5225 376.4629 487.4238 c
375.7109 492.2173 376.6523 496.9443 378.207 500.5176 C
f
454.1094 484.5098 m
454.1094 477.751 l
429.3867 459.3271 379.375 464.7783 380.6865 499.8687 c
389.7148 468.4722 435.415 469.0732 454.1094 484.5098 C
f
1 D
398.6025 497.9404 m
394.6543 501.2334 396.4814 508.0249 386.1416 506.5186 c
386.9854 496.8354 393.9697 500.269 398.6025 497.9404 C
f
413.6875 488.188 m
406.3555 495.3281 407.9512 507.46 396.8594 505.4873 c
397.1426 502.7568 403.3457 494.5835 405.2725 493.3584 c
400.2432 495.8027 395.0742 497.4468 389.7148 496.9092 c
394.6025 482.8301 408.6563 491.5972 413.6875 488.188 C
f
0 D
454.1094 489.5293 m
454.1094 487.1572 l
449.4102 482.1733 423.2764 467.7856 399.7734 485.1787 c
405.7881 486.7788 411.3369 487.1572 420.1738 484.333 c
415.0986 487.6245 410.8652 494.8613 410.584 501.4463 c
417.3516 498.2485 425.625 486.4028 432.0176 484.0503 c
438.4121 481.6997 446.6855 483.4829 454.1094 489.5293 C
f
*U
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
0 XR
454.1143 567.2544 m
451.0508 567.2544 448.5684 564.772 448.5684 561.708 c
448.5684 558.6509 451.0508 556.1611 454.1143 556.1611 C
454.1143 567.2544 L
f
445.2832 563.8218 m
444.1182 563.8218 443.168 562.8716 443.168 561.708 c
443.168 560.543 444.1182 559.6006 445.2832 559.6006 c
446.4473 559.6006 447.3887 560.543 447.3887 561.708 c
447.3887 562.8716 446.4473 563.8218 445.2832 563.8218 C
f
434.0947 557.9956 m
436.1426 557.9956 437.8057 559.6606 437.8057 561.708 c
437.8057 563.7637 436.1426 565.4219 434.0947 565.4219 c
432.0381 565.4219 430.3809 563.7637 430.3809 561.708 c
430.3809 559.6606 432.0381 557.9956 434.0947 557.9956 C
f
433.2314 569.3179 m
429.0039 569.3179 415.7363 569.3179 407.6348 569.3179 c
403.5381 569.2886 400.4521 570.584 398.3018 572.6177 C
398.2852 572.624 L
398.2783 572.6318 l
397.9766 572.978 397.6758 573.3022 397.3584 573.6191 c
396.1582 575.0703 395.3633 576.7861 394.9414 578.606 c
393.4619 585.0298 396.7676 592.7046 404.3271 594.4063 c
408.4971 595.3486 413.0488 594.687 415.8545 591.2173 c
418.499 587.9683 419.0225 582.9746 417.0127 579.2402 c
415.3545 576.146 412.2959 574.9976 409.0264 575.3496 c
401.4805 576.167 401.9551 584.6162 406.374 586.6138 c
408.1143 587.4009 411.0244 587.2178 412.0322 585.3682 c
412.916 583.7622 412.1719 581.4204 410.3525 580.8379 c
409.8291 580.6689 409.7266 580.8306 409.5859 580.5151 c
409.7334 580.2109 409.8887 580.3442 410.0352 580.3379 c
410.3818 580.3442 410.9922 580.6089 411.3027 580.8091 c
413.7412 582.4355 413.5859 586.8779 409.5947 587.5562 c
401.1143 588.9995 398.8467 574.8564 409.7979 574.3037 c
423 573.6343 423.1836 596.3662 407.4795 596.3662 c
401.167 596.3662 395.833 593.0361 393.6162 586.9819 c
393.167 585.751 392.8643 584.4619 392.7334 583.1582 c
392.3486 584.3589 391.8633 585.5078 391.2373 586.5981 c
390.6172 587.6885 389.8584 588.7046 388.9238 589.6406 c
387.9805 590.8779 386.043 591.5488 384.6211 590.9893 c
380.1787 589.228 377.3955 590.2739 377.2041 590.3477 c
378.6338 586.7607 385.8594 581.7744 388.9688 586.5181 c
389.1162 586.7305 389.2188 586.9453 389.2998 587.1592 c
389.5654 586.8184 389.7998 586.4658 390.0127 586.083 c
391.5244 583.417 391.9512 579.8218 392.0176 577.4189 c
382.0068 582.5762 369.2051 581.2729 370.2793 589.7651 c
365.4102 581.4116 374.8477 577.5308 377.1963 577.6772 c
379.5254 577.8247 390.1689 576.1318 397.3662 570.6216 C
397.3799 570.6133 L
397.3799 570.606 L
398.3691 569.8252 L
398.4043 569.7969 l
401.0342 567.9399 404.2754 567.0933 407.6123 567.0781 C
407.6348 567.0781 l
408.4453 567.0781 428.8857 567.0781 433.0313 567.0781 c
437.2617 567.0781 439.4277 564.8979 439.4277 561.708 c
439.4277 558.5259 436.082 555.7559 431.3613 557.23 c
420.7607 561.8037 414.1553 562.4951 407.6123 562.4951 c
402.6846 562.4736 397.9473 560.6318 395.1035 556.3975 c
392.3711 552.3301 391.9727 547.0635 393.6162 542.5923 c
394.4346 540.3462 395.8047 538.291 397.6074 536.7061 c
400.4014 534.2539 403.8477 533.2148 407.4795 533.2085 c
423.4268 533.1709 423.0811 556.8975 408.916 555.1958 c
399.0244 554.002 401.3057 540.6104 409.5947 542.0171 c
413.624 542.7031 413.7021 547.1821 411.3027 548.7651 c
410.9863 548.9717 410.4033 549.2222 410.0352 549.2373 c
409.8887 549.2285 409.7334 549.3633 409.5859 549.0674 c
409.7266 548.7437 409.8291 548.9058 410.3525 548.7363 c
412.9893 547.896 413.4697 543.2192 409.4912 542.5996 c
401.9551 541.436 400.0986 554.0171 409.8213 554.2754 c
412.8633 554.3643 415.501 553.1475 417.0127 550.334 c
419.0225 546.5996 418.499 541.6138 415.8545 538.3643 c
413.0488 534.8872 408.4971 534.2319 404.3271 535.167 c
390.8184 538.2104 390.8691 560.375 407.6348 560.2563 c
414.874 560.2563 419.1846 559.1816 422.7266 557.8911 c
426.2637 556.603 429.0469 555.1001 433.2314 554.2461 c
438.5283 553.1704 442.0781 558.2969 442.0781 561.627 c
442.0781 564.9565 440.502 569.3179 433.2314 569.3179 C
f
383.5313 595.9312 m
379.3779 598.6636 373.7568 599.0918 367.834 595.8945 c
371.0391 596.0415 372.8066 594.9448 374.0068 594.0313 c
381.2256 589.2358 387.1494 593.4126 383.5313 595.9312 C
f
360.8574 564.5947 m
357.5947 566.54 354.1328 568.2495 349.1387 566.3853 c
346.8047 565.5093 343.1865 563.999 339.5254 564.4043 c
348.1738 552.3003 358.458 560.272 360.8574 564.5947 C
f
381.0352 565.8467 m
376.085 567.5039 370.7295 578.9888 358.458 569.3179 c
361.1162 568.3232 364.8965 565.2217 367.1055 564.7876 c
362.1113 563.041 358.0742 554.5107 353.1738 554.7021 c
368.4521 547.0205 373.6396 561.6123 381.0352 565.8467 C
f
397.8291 565.8467 m
389.4766 574.105 381.8887 574.5474 376.2314 573.6343 c
380.0771 568.9199 382.6777 566.6436 385.8359 566.3853 c
380.6514 563.3584 372.792 553.9077 372.0986 552.3003 c
383.1045 552.3003 393.1445 558.3569 397.8291 565.8467 C
f
368.3213 589.4712 m
366.583 587.8799 365.3447 584.9995 365.6396 581.7217 c
348.7256 579.4375 319.873 560.8164 308.1162 579.5928 c
317.4209 555.1807 350.8779 575.5049 372.7764 577.4565 c
365.7129 580.2632 367.0967 586.7607 368.3213 589.4712 C
f
454.1143 567.2544 m
457.1777 567.2544 459.6611 564.772 459.6611 561.708 c
459.6611 558.6509 457.1777 556.1611 454.1143 556.1611 C
454.1143 567.2544 L
f
462.9453 563.8218 m
464.1094 563.8218 465.0605 562.8716 465.0605 561.708 c
465.0605 560.543 464.1094 559.6006 462.9453 559.6006 c
461.7832 559.6006 460.8398 560.543 460.8398 561.708 c
460.8398 562.8716 461.7832 563.8218 462.9453 563.8218 C
f
474.1348 557.9956 m
472.0879 557.9956 470.4229 559.6606 470.4229 561.708 c
470.4229 563.7637 472.0879 565.4219 474.1348 565.4219 c
476.1895 565.4219 477.8477 563.7637 477.8477 561.708 c
477.8477 559.6606 476.1895 557.9956 474.1348 557.9956 C
f
474.998 569.3179 m
479.2256 569.3179 492.4932 569.3179 500.5967 569.3179 c
504.6914 569.2886 507.7783 570.584 509.9287 572.6177 C
509.9424 572.624 L
509.9502 572.6318 l
510.2529 572.978 510.5547 573.3022 510.8721 573.6191 c
512.0703 575.0703 512.8682 576.7861 513.2871 578.606 c
514.7676 585.0298 511.4609 592.7046 503.9023 594.4063 c
499.7334 595.3486 495.1807 594.687 492.375 591.2173 c
489.7305 587.9683 489.207 582.9746 491.2178 579.2402 c
492.876 576.146 495.9336 574.9976 499.2031 575.3496 c
506.7471 576.167 506.2744 584.6162 501.8564 586.6138 c
500.1162 587.4009 497.208 587.2178 496.1973 585.3682 c
495.3135 583.7622 496.0596 581.4204 497.8779 580.8379 c
498.4014 580.6689 498.5039 580.8306 498.6426 580.5151 c
498.4951 580.2109 498.3398 580.3442 498.1943 580.3379 c
497.8477 580.3442 497.2363 580.6089 496.9277 580.8091 c
494.4893 582.4355 494.6436 586.8779 498.6348 587.5562 c
507.1152 588.9995 509.3848 574.8564 498.4297 574.3037 c
485.2295 573.6343 485.0459 596.3662 500.751 596.3662 c
507.0625 596.3662 512.3955 593.0361 514.6133 586.9819 c
515.0625 585.751 515.3652 584.4619 515.498 583.1582 c
515.8809 584.3589 516.3672 585.5078 516.9932 586.5981 c
517.6123 587.6885 518.3701 588.7046 519.3057 589.6406 c
520.249 590.8779 522.1855 591.5488 523.6074 590.9893 c
528.0488 589.228 530.834 590.2739 531.0254 590.3477 c
529.5957 586.7607 522.3701 581.7744 519.2617 586.5181 c
519.1152 586.7305 519.0098 586.9453 518.9316 587.1592 c
518.6641 586.8184 518.4287 586.4658 518.2148 586.083 c
516.707 583.417 516.2764 579.8218 516.2109 577.4189 c
526.2207 582.5762 539.0244 581.2729 537.9502 589.7651 c
542.8184 581.4116 533.3818 577.5308 531.0332 577.6772 c
528.7051 577.8247 518.0615 576.1318 510.8643 570.6216 C
510.8506 570.6133 L
510.8506 570.606 L
509.8623 569.8252 L
509.8262 569.7969 l
507.1953 567.9399 503.9551 567.0933 500.6172 567.0781 C
500.5967 567.0781 l
499.7852 567.0781 479.3438 567.0781 475.1963 567.0781 c
470.9678 567.0781 468.8037 564.8979 468.8037 561.708 c
468.8037 558.5259 472.1475 555.7559 476.8672 557.23 c
487.4688 561.8037 494.0762 562.4951 500.6172 562.4951 c
505.5469 562.4736 510.2822 560.6318 513.125 556.3975 c
515.8584 552.3301 516.2578 547.0635 514.6133 542.5923 c
513.7959 540.3462 512.4258 538.291 510.6211 536.7061 c
507.8281 534.2539 504.3818 533.2148 500.751 533.2085 c
484.8027 533.1709 485.1484 556.8975 499.3135 555.1958 c
509.207 554.002 506.9238 540.6104 498.6348 542.0171 c
494.6064 542.7031 494.5254 547.1821 496.9277 548.7651 c
497.2451 548.9717 497.8262 549.2222 498.1943 549.2373 c
498.3398 549.2285 498.4951 549.3633 498.6426 549.0674 c
498.5039 548.7437 498.4014 548.9058 497.8779 548.7363 c
495.2412 547.896 494.7617 543.2192 498.7393 542.5996 c
506.2744 541.436 508.1318 554.0171 498.4072 554.2754 c
495.3652 554.3643 492.7275 553.1475 491.2178 550.334 c
489.207 546.5996 489.7305 541.6138 492.375 538.3643 c
495.1807 534.8872 499.7334 534.2319 503.9023 535.167 c
517.4121 538.2104 517.3623 560.375 500.5967 560.2563 c
493.3555 560.2563 489.0449 559.1816 485.502 557.8911 c
481.9668 556.603 479.1826 555.1001 474.998 554.2461 c
469.7012 553.1704 466.1504 558.2969 466.1504 561.627 c
466.1504 564.9565 467.7266 569.3179 474.998 569.3179 C
f
524.6982 595.9312 m
528.8525 598.6636 534.4727 599.0918 540.3955 595.8945 c
537.1914 596.0415 535.4219 594.9448 534.2236 594.0313 c
527.0029 589.2358 521.0811 593.4126 524.6982 595.9312 C
f
547.3711 564.5947 m
550.6348 566.54 554.0957 568.2495 559.0918 566.3853 c
561.4268 565.5093 565.041 563.999 568.7031 564.4043 c
560.0557 552.3003 549.7725 560.272 547.3711 564.5947 C
f
527.1953 565.8467 m
532.1445 567.5039 537.502 578.9888 549.7725 569.3179 c
547.1133 568.3232 543.334 565.2217 541.125 564.7876 c
546.1191 563.041 550.1563 554.5107 555.0537 554.7021 c
539.7764 547.0205 534.5908 561.6123 527.1953 565.8467 C
f
510.4004 565.8467 m
518.7529 574.105 526.3398 574.5474 531.9971 573.6343 c
528.1533 568.9199 525.5537 566.6436 522.3916 566.3853 c
527.5781 563.3584 535.4375 553.9077 536.1299 552.3003 c
525.124 552.3003 515.0859 558.3569 510.4004 565.8467 C
f
539.9092 589.4712 m
541.6475 587.8799 542.8848 584.9995 542.5908 581.7217 c
559.5029 579.4375 588.3574 560.8164 600.1123 579.5928 c
590.8115 555.1807 557.3516 575.5049 535.4531 577.4565 c
542.5166 580.2632 541.1309 586.7607 539.9092 589.4712 C
f
*u
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
1 XR
492.9902 666.7012 m
498.5869 667.147 502.1309 664.9854 504.7129 660.9316 c
496.6611 664.1855 474.4395 663.7764 454.1172 646.0562 C
454.1172 647.3828 l
466.0635 657.5698 479.75 662.833 483.2832 664.1528 c
486.8174 665.4731 486.7588 665.5317 487.5576 665.8633 c
501.6455 670.5732 500.2793 684.6216 491.8662 686.4575 c
483.5801 688.2646 479.0713 680.4092 482.5576 674.9785 c
485.4414 670.4878 493.2891 672.7925 492.9072 678.002 c
492.5732 682.5776 487.4678 682.873 486.1836 680.3193 c
484.7764 677.5254 487.875 676.6089 487.8955 676.5669 c
487.7861 676.354 487.668 676.4414 487.5566 676.4424 c
485.3291 676.5947 484.3291 681.0771 487.873 682.1538 c
493.7441 683.9399 496.333 674.2114 489.0127 672.1733 c
479.4551 669.5103 476.876 684.6416 486.8252 687.418 c
499.041 690.8311 505.1064 674.6294 492.9902 666.7012 C
f
556.2959 663.0508 m
570.124 663.1187 572.6064 640.1768 556.6992 639.2603 c
544.2432 638.5439 543.0547 657.0146 555.4072 657.2334 c
561.7402 657.3447 563.8418 651.1572 561.5361 647.0464 c
558.9082 642.3613 551.0732 643.064 550.7637 648.7627 c
550.4756 654.0479 556.7695 654.644 558.0918 651.6089 c
559.3975 648.6064 555.9092 646.3218 554.1113 647.9756 c
552.6523 649.3193 554.6992 651.3291 555.1357 650.6538 c
554.9932 650.4258 554.8857 650.5225 554.7637 650.4497 c
553.3857 649.8057 553.6699 647.6621 555.8184 647.8086 c
558.417 647.9849 559.1387 652.7236 555.0918 652.9473 c
550.0273 653.2261 549.9453 645.041 555.459 644.644 c
560.9082 644.2539 562.9541 649.8984 560.833 653.5903 c
559.1113 656.5854 555.1904 656.8672 552.2412 655.6851 c
545.1211 652.832 546.6416 639.8945 556.6211 640.5332 c
570.5645 641.4258 567.9404 661.2778 556.2959 661.6387 C
556.2959 661.6338 l
556.1807 661.6387 556.0674 661.6421 555.9531 661.644 C
555.9248 661.644 l
548.5645 661.7734 542.4287 656.8008 540.5928 651.7344 c
535.0859 650.6777 525.2432 651.5073 524.1748 653.5537 c
528.0537 654.917 547.2578 663.0508 556.2959 663.0508 C
f
1 D
464.0352 622.1582 m
463.9023 622.332 460.6133 622.5659 460.6943 625.2979 c
460.8574 630.8154 470.9941 629.8115 468.8623 622.6558 c
466.9014 616.064 455.4805 617.667 456.2715 626.6479 c
456.5313 629.5869 458.2197 631.6963 460.5234 632.9253 c
467.1504 635.2876 477.9063 625.7114 493.6445 629.0791 c
483.8984 631.998 478.6172 640.395 473.9453 641.002 c
477.0166 642.8745 478.8887 646.5537 484.9805 649.0327 c
476.6279 650.2656 464.7969 644.9902 460.1152 634.3652 c
454.1504 631.2495 453.5703 623.624 457.4023 619.8833 c
461.5645 615.8188 469.6553 617.3872 469.8467 624.2715 c
470.0273 630.749 460.3428 630.96 460.3213 625.3096 c
460.3105 622.6855 463.6523 621.6714 464.0352 622.1582 C
f
454.1172 644.1045 m
454.1172 641.542 l
465.417 652.8457 495.2959 665.3569 521.6807 640.4434 c
516.4092 649.3042 509.5225 659.5215 495.8867 660.1514 c
486.084 660.6069 469.4951 657.3896 454.1172 644.1045 C
f
600.1123 645.437 m
579.5596 678.3003 547.5098 672.0571 507.875 659.7134 c
513.0029 656.8193 520.4336 648.9199 523.1729 641.2417 c
522.4902 647.4126 519.6221 655.7808 y
556.6553 671.9912 580.4775 671.8213 600.1123 645.437 C
f
0 D
454.1172 605.4824 m
454.1172 620.7231 l
455.292 617.6797 457.1289 616.2441 460.1426 615.5073 c
460.1426 611.8506 458.9512 607.9492 454.1172 605.4824 C
f
1 D
504.2012 632.8794 m
501.8545 633.7612 494.5332 643.186 492.5811 643.5762 c
494.5 644.3218 499.0273 646.7041 501.0576 647.292 c
489.2471 652.8457 481.8408 643.5283 478.6172 641.542 c
483.6924 640.3232 494.3887 624.9614 504.2012 632.8794 C
f
0 D
508.4658 634.8428 m
505.3496 633.2827 501.291 639.8306 497.7041 642.6943 c
500.6191 644.9097 503.2148 645.0552 504.7441 645.1255 c
506.2686 645.1973 508.2529 643.5762 513.0029 639.2422 c
511.375 637.4771 510.4346 635.8271 508.4658 634.8428 C
f
*U
*u
415.2383 666.7012 m
403.124 674.6294 409.1885 690.8311 421.4043 687.418 c
431.3525 684.6416 428.7764 669.5103 419.2148 672.1733 c
411.8975 674.2114 414.4854 683.9399 420.3564 682.1538 c
423.9014 681.0771 422.9023 676.5947 420.6729 676.4424 c
420.5615 676.4414 420.4443 676.354 420.335 676.5669 c
420.3545 676.6089 423.4531 677.5254 422.0469 680.3193 c
420.7627 682.873 415.6563 682.5776 415.3232 678.002 c
414.9414 672.7925 422.79 670.4878 425.6709 674.9785 c
429.1582 680.4092 424.6494 688.2646 416.3643 686.4575 c
407.9512 684.6216 406.584 670.5732 420.6709 665.8633 c
421.4707 665.5317 421.4121 665.4731 424.9473 664.1528 c
428.4795 662.833 442.166 657.5698 454.1123 647.3828 C
454.1123 646.0562 l
433.791 663.7764 411.5684 664.1855 403.5166 660.9316 c
406.0996 664.9854 409.6426 667.147 415.2383 666.7012 C
f
351.9365 663.0508 m
360.9707 663.0508 380.1748 654.917 384.0547 653.5537 c
382.9873 651.5073 373.1445 650.6777 367.6387 651.7344 c
365.8018 656.8008 359.6641 661.7734 352.3066 661.644 C
352.2773 661.644 l
352.1621 661.6421 352.0488 661.6387 351.9365 661.6338 C
351.9365 661.6387 l
340.2881 661.2778 337.666 641.4258 351.6094 640.5332 c
361.5898 639.8945 363.1094 652.832 355.9883 655.6851 c
353.04 656.8672 349.1182 656.5854 347.3965 653.5903 c
345.2764 649.8984 347.3203 644.2539 352.7705 644.644 c
358.2852 645.041 358.2012 653.2261 353.1387 652.9473 c
349.0908 652.7236 349.8135 647.9849 352.4111 647.8086 c
354.5596 647.6621 354.8428 649.8057 353.4658 650.4497 c
353.3447 650.5225 353.2363 650.4258 353.0947 650.6538 c
353.5313 651.3291 355.5771 649.3193 354.1182 647.9756 c
352.3213 646.3218 348.8311 648.6064 350.1387 651.6089 c
351.4609 654.644 357.7529 654.0479 357.4658 648.7627 c
357.1572 643.064 349.3223 642.3613 346.6934 647.0464 c
344.3877 651.1572 346.4912 657.3447 352.8232 657.2334 c
365.1758 657.0146 363.9873 638.5439 351.5313 639.2603 c
335.624 640.1768 338.1045 663.1187 351.9365 663.0508 C
f
1 D
444.1943 622.1582 m
444.5781 621.6714 447.9199 622.6855 447.9092 625.3096 c
447.8867 630.96 438.2031 630.749 438.3828 624.2715 c
438.5742 617.3872 446.666 615.8188 450.8281 619.8833 c
454.6592 623.624 454.0811 631.2495 448.1152 634.3652 c
443.4316 644.9902 431.6016 650.2656 423.249 649.0327 c
429.3418 646.5537 431.2148 642.8745 434.2832 641.002 c
429.6133 640.395 424.3311 631.998 414.5859 629.0791 c
430.3242 625.7114 441.0801 635.2876 447.707 632.9253 c
450.0107 631.6963 451.6992 629.5869 451.959 626.6479 c
452.75 617.667 441.3281 616.064 439.3672 622.6558 c
437.2363 629.8115 447.3721 630.8154 447.5371 625.2979 c
447.6162 622.5659 444.3281 622.332 444.1943 622.1582 C
f
454.1123 644.1045 m
438.7344 657.3896 422.1455 660.6069 412.3438 660.1514 c
398.709 659.5215 391.8203 649.3042 386.5498 640.4434 c
412.9336 665.3569 442.8125 652.8457 454.1123 641.542 C
454.1123 644.1045 L
f
308.1162 645.437 m
327.751 671.8213 351.5752 671.9912 388.6074 655.7808 c
385.7402 647.4126 385.0576 641.2417 v
387.7959 648.9199 395.2275 656.8193 400.3555 659.7134 c
360.7188 672.0571 328.6709 678.3003 308.1162 645.437 C
f
0 D
454.1123 605.4824 m
449.2793 607.9492 448.0869 611.8506 448.0869 615.5073 c
451.1016 616.2441 452.9385 617.6797 454.1123 620.7231 C
454.1123 605.4824 L
f
1 D
404.0293 632.8794 m
413.8428 624.9614 424.5381 640.3232 429.6133 641.542 c
426.3887 643.5283 418.9844 652.8457 407.1709 647.292 c
409.2031 646.7041 413.7305 644.3218 415.6484 643.5762 c
413.6982 643.186 406.375 633.7612 404.0293 632.8794 C
f
0 D
395.2275 639.2422 m
399.9766 643.5762 401.9619 645.1973 403.4854 645.1255 c
405.0156 645.0552 407.6123 644.9097 410.5254 642.6943 c
406.9385 639.8306 402.8799 633.2827 399.7646 634.8428 c
397.7949 635.8271 396.8555 637.4771 395.2275 639.2422 C
f
*U
*u
1 D
12.4038 385.6592 m
26.8452 381.9902 33.8408 365.9121 43.9917 352.2549 c
34.3491 356.1572 24.3569 352.1016 23.937 341.5674 c
23.4478 329.3975 41.1104 327.668 43.1978 338.2236 c
44.6401 345.5117 37.6992 349.0801 33.6245 346.8379 c
32.0566 345.9766 31.0479 344.1133 30.9897 342.4619 c
30.8237 337.5732 37.2339 338.3779 37.6626 339.915 c
37.4971 339.8066 37.3687 339.6904 37.2217 339.584 c
35.5981 338.3945 31.1919 338.626 31.4116 342.4453 C
31.4092 342.4307 l
32.4634 350.1396 44.1523 347.0879 42.1606 338.4443 c
40.1035 329.5215 25.5518 331.4609 25.8032 340.8711 c
25.9277 345.4941 28.3198 349.5146 32.9834 350.8242 c
39.0552 352.5293 45.6919 349.2695 49.8955 344.7979 C
50.0688 344.9697 l
59.8994 334.6836 73.3574 328.0625 96.7412 333.9277 c
45.3403 330.4316 53.8242 381.168 12.4038 385.6592 C
f
0 D
100.0342 337.4326 m
99.3599 346.4355 96.1699 362.2871 83.1875 369.6143 c
77.1172 380.8486 88.2666 391.458 96.9058 383.333 c
103.4717 377.1582 93.7358 367.2217 88.7588 371.6172 c
82.2217 377.3896 89.4512 383.1289 92.9966 379.6934 c
95.5752 377.1934 92.7339 374.3486 y
93.5464 374.2031 95.1836 376.4746 94.1294 378.9473 c
91.7441 384.5547 81.9087 379.6934 86.293 372.8262 c
89.7285 367.4404 95.3228 368.9287 98.4536 372.7314 c
96.9531 369.4854 96.186 365.5361 96.4351 360.8584 c
97.6157 338.71 129.1367 338.0059 132.7739 356.8574 c
136.7441 377.4453 108.7749 380.373 106.4268 364.6963 c
104.2339 350.0762 125.2676 350.5527 124.2441 362.5625 c
123.5596 370.5527 113.5283 366.2344 114.8604 364.1943 C
115.418 364.4502 l
117.3398 367.4434 123.043 367.4189 123.3848 362.4902 c
124.0879 352.373 107.4082 351.6172 107.439 362.543 c
107.4785 377.3096 131.2334 376.9814 131.5254 361.1318 c
131.9072 340.3027 99.5186 339.792 98.6182 360.9746 c
97.4463 388.6182 134.9233 387.4619 140.0117 364.332 c
145.8027 338.0186 114.1006 330.5791 100.0342 337.4326 C
f
100.2051 375.7715 m
111.752 392.125 145.4375 384.2734 143.4771 356.291 c
141.7949 332.2607 110.8359 327.8438 97.5469 334.9648 c
86.7656 335.3906 76.1719 338.917 68.0742 344.0537 c
68.0742 344.0527 76.4507 347.1602 86.2402 344.8984 c
81.3174 349.8223 79.2866 359.5107 80.0728 369.5156 c
74.4292 382.9219 88.3721 394.5869 98.228 384.6885 c
100.9512 381.9531 101.251 378.6289 100.2051 375.7715 C
f
56.3091 392.4297 m
65.9116 380.0986 60.2632 376.4307 60.6387 367.8643 c
56.1201 368.2764 52.7749 370.1016 51.6055 373.1855 c
49.561 378.5771 52.5962 386.9795 56.3091 392.4297 C
f
52.2642 366.1709 m
55.0869 367.0186 61.0146 364.8535 65.3467 360.9004 c
64.3101 363.1592 62.4297 371.7246 66.3809 379.8184 c
80.313 372.7588 72.7808 363.2539 80.5005 348.5703 c
64.1221 350.8291 60.0757 343.4873 52.2642 366.1709 C
f
44.5093 371.0635 m
44.5093 371.0615 40.8491 375.3457 38.519 378.2197 c
36.1904 381.0928 38.187 391.1484 49.8296 394.6416 c
44.6758 390.3184 43.6782 381.3359 44.5093 371.0635 C
f
*U
158.4028 348.7236 m
153.3452 348.7236 149.2456 352.8232 149.2456 357.8789 c
149.2456 362.9365 153.3452 367.0342 158.4028 367.0342 C
158.4028 348.7236 L
f
*u
1 D
304.4004 385.6592 m
262.98 381.168 271.4644 330.4316 220.0635 333.9277 c
243.4487 328.0625 256.9063 334.6836 266.7358 344.9697 C
266.9092 344.7979 l
271.1133 349.2695 277.751 352.5293 283.8223 350.8242 c
288.4844 349.5146 290.877 345.4941 291 340.8711 c
291.252 331.4609 276.7012 329.5215 274.6445 338.4443 c
272.6538 347.0879 284.3423 350.1396 285.395 342.4307 C
285.394 342.4453 l
285.6123 338.626 281.2065 338.3945 279.584 339.584 c
279.4346 339.6904 279.3071 339.8066 279.1406 339.915 c
279.5708 338.3779 285.9795 337.5732 285.814 342.4619 c
285.7568 344.1133 284.7466 345.9766 283.1797 346.8379 c
279.1055 349.0801 272.165 345.5117 273.6055 338.2236 c
275.6938 327.668 293.3564 329.3975 292.8687 341.5674 c
292.4478 352.1016 282.4565 356.1572 272.8135 352.2549 c
282.9634 365.9121 289.959 381.9902 304.4004 385.6592 C
f
0 D
216.769 337.4326 m
202.7051 330.5791 171.002 338.0186 176.7925 364.332 c
181.8823 387.4619 219.3589 388.6182 218.186 360.9746 c
217.2861 339.792 184.8975 340.3027 185.2803 361.1318 c
185.5713 376.9814 209.3262 377.3096 209.3643 362.543 c
209.396 351.6172 192.7168 352.373 193.4199 362.4902 c
193.7617 367.4189 199.4634 367.4434 201.3862 364.4502 C
201.9458 364.1943 l
203.2759 366.2344 193.2437 370.5527 192.5615 362.5625 c
191.5361 350.5527 212.5713 350.0762 210.3779 364.6963 c
208.0293 380.373 180.0601 377.4453 184.0317 356.8574 c
187.6694 338.0059 219.188 338.71 220.3706 360.8584 c
220.6196 365.5361 219.8491 369.4854 218.3516 372.7314 c
221.4814 368.9287 227.0747 367.4404 230.5112 372.8262 c
234.896 379.6934 225.0605 384.5547 222.6743 378.9473 c
221.6211 376.4746 223.2578 374.2031 224.0703 374.3486 c
221.231 377.1934 223.8081 379.6934 v
227.3545 383.1289 234.5845 377.3896 228.0464 371.6172 c
223.0688 367.2217 213.334 377.1582 219.8989 383.333 c
228.5371 391.458 239.687 380.8486 233.6157 369.6143 c
220.6362 362.2871 217.4448 346.4355 216.769 337.4326 C
f
216.6006 375.7715 m
215.5527 378.6289 215.854 381.9531 218.5762 384.6885 c
228.4326 394.5869 242.3755 382.9219 236.7319 369.5156 c
237.5166 359.5107 235.4873 349.8223 230.564 344.8984 c
240.355 347.1602 248.7295 344.0527 248.7295 344.0537 c
240.6313 338.917 230.0396 335.3906 219.2573 334.9648 c
205.9683 327.8438 175.0112 332.2607 173.3262 356.291 c
171.3672 384.2734 205.0532 392.125 216.6006 375.7715 C
f
260.4941 392.4297 m
264.207 386.9795 267.2422 378.5771 265.1978 373.1855 c
264.0298 370.1016 260.6846 368.2764 256.166 367.8643 c
256.541 376.4307 250.8931 380.0986 260.4941 392.4297 C
f
264.5405 366.1709 m
256.7285 343.4873 252.6802 350.8291 236.3042 348.5703 c
244.0229 363.2539 236.4922 372.7588 250.4224 379.8184 c
254.3755 371.7246 252.4932 363.1592 251.459 360.9004 c
255.7886 364.8535 261.7163 367.0186 264.5405 366.1709 C
f
266.9727 394.6416 m
278.6177 391.1484 280.6128 381.0928 278.2852 378.2197 c
275.9541 375.3457 272.2949 371.0615 272.2949 371.0635 c
273.126 381.3359 272.1289 390.3184 266.9727 394.6416 C
f
*U
158.4028 348.7236 m
163.458 348.7236 167.5576 352.8232 167.5576 357.8789 c
167.5576 362.9365 163.458 367.0342 158.4028 367.0342 C
158.4028 348.7236 L
f
*u
166.8008 484.874 m
162.8696 482.1216 161.353 481.626 158.4058 478.4487 C
158.4058 490.4482 l
160.1821 493.1777 163.7852 496.4736 166.2217 498.1406 c
169.728 494.4258 171.4849 488.1641 166.8008 484.874 C
f
264.7798 483.2036 m
274.5654 478.1719 275.0166 459.4575 259.6416 456.1807 c
253.5991 455.0859 245.2808 458.8047 241.9868 462.2319 c
237.9829 467.1489 230.8848 471.6958 229.6143 472.7861 c
239.2598 467.8745 247.0801 458.2285 258.1831 458.2285 c
269.2817 458.2285 274.9238 475.9956 262.7319 480.6689 c
262.6377 474.502 257.2612 475.2681 253.1323 474.5098 c
257.3643 475.5547 253.4282 486.4556 259.9155 485.084 C
259.9258 485.084 l
261.4443 484.7188 263.0693 484.1011 264.7798 483.2036 C
f
1 D
253.9878 482.3115 m
253.8789 483.3696 252.998 485.1987 250.3726 483.8779 C
250.3574 483.8672 l
244.5337 480.1812 243.3203 471.3394 248.6929 466.8008 c
247.9766 470.8569 248.9536 472.7495 250.6685 473.709 C
250.856 473.8071 l
252.9399 474.9639 254.2573 477.4644 253.9878 482.3115 C
f
219.4233 467.1431 m
234.1621 458.0464 244.7153 436.5762 258.3628 426.0918 c
272.0107 415.605 295.6665 414.9194 304.4009 438.8779 c
295.1201 419.9873 275.6523 422.6885 263.2305 432.0845 c
249.4736 442.4917 236.1582 461.0229 219.4233 467.1431 C
f
158.4048 451.6846 m
169.564 471.6958 209.5972 491.314 249.9941 447.3848 c
224.6992 489.8896 174.6587 492.0781 158.4048 451.6846 C
f
205.4736 447.6123 m
206.3218 449.1875 207.7769 453.436 207.4121 458.5332 c
227.2095 452.6587 235.3784 420.3081 259.6416 409.1484 c
234.2012 424.8081 230.937 467.4536 192.0073 467.9053 c
201.834 464.6284 205.8374 458.6533 205.4736 447.6123 C
f
158.4048 441.0615 m
162.771 461.0825 190.916 467.749 203.0469 447.7349 c
206.061 465.2026 178.2998 479.5176 158.4048 448.2192 C
158.4048 441.0615 L
f
0 D
182.4248 455.9507 m
190.5464 455.1265 197.8271 450.4297 199.4414 442.2905 c
204.0571 419.0522 168.4058 414.2974 169.5083 437.0381 c
170.2241 451.8379 191.814 451.811 192.9619 438.5151 c
194.0737 425.645 174.9575 425.0796 176.6665 436.5654 c
177.5684 442.6299 185.5439 442.5928 187.127 438.1885 c
189.8213 430.7041 179.2227 433.5542 181.2236 434.979 c
181.3628 435.0776 186.5972 431.0654 186.7393 436.458 c
186.9106 442.8647 175.1621 441.752 177.6611 433.3433 c
179.6074 426.7993 192.2261 428.1943 191.9653 437.6294 c
191.6182 450.2607 171.4434 450.4951 170.9463 436.9526 c
170.2944 419.1797 194.918 420.27 197.4624 435.6631 c
199.123 445.7158 192.1636 452.6108 182.4248 453.7534 C
182.4248 453.7515 l
165.1978 453.5874 161.7998 438.9985 158.4048 424.8081 C
158.4048 434.3931 l
163.8628 452.9482 173.2041 455.9507 182.4248 455.9507 C
f
1 D
158.4058 456.875 m
161.2588 467.0703 169.7104 470.4678 170.4146 482.9556 c
168.4922 482.7437 162.7832 480.9233 158.4058 475.3516 c
158.4058 461.1025 158.4058 456.875 V
f
158.4058 509.9883 m
158.4058 494.3428 l
165.8979 501.5835 163.9561 502.9219 158.4058 509.9883 C
f
*U
*u
0 D
150.0054 484.874 m
145.3208 488.1641 147.0771 494.4258 150.5835 498.1406 c
153.0205 496.4736 156.624 493.1777 158.4004 490.4482 C
158.4004 478.4487 l
155.4541 481.626 153.937 482.1216 150.0054 484.874 C
f
52.0254 483.2036 m
53.7363 484.1011 55.3613 484.7188 56.8813 485.084 C
56.8901 485.084 l
63.3774 486.4556 59.4419 475.5547 63.6733 474.5098 c
59.5449 475.2681 54.1675 474.502 54.0737 480.6689 c
41.8828 475.9956 47.5244 458.2285 58.6226 458.2285 c
69.7256 458.2285 77.5459 467.8745 87.1919 472.7861 c
85.9209 471.6958 78.8228 467.1489 74.8184 462.2319 c
71.5249 458.8047 63.208 455.0859 57.1641 456.1807 c
41.7886 459.4575 42.2397 478.1719 52.0254 483.2036 C
f
1 D
62.8179 482.3115 m
62.5488 477.4644 63.8657 474.9639 65.9512 473.8071 C
66.1372 473.709 l
67.853 472.7495 68.8291 470.8569 68.1123 466.8008 c
73.4854 471.3394 72.2715 480.1812 66.4482 483.8672 C
66.4326 483.8779 l
63.8091 485.1987 62.9263 483.3696 62.8179 482.3115 C
f
97.3823 467.1431 m
80.6479 461.0229 67.3306 442.4917 53.5752 432.0845 c
41.1538 422.6885 21.6855 419.9873 12.4043 438.8779 c
21.1392 414.9194 44.7949 415.605 58.4419 426.0918 c
72.0898 436.5762 82.6426 458.0464 97.3823 467.1431 C
f
158.4004 451.6846 m
142.146 492.0781 92.106 489.8896 66.812 447.3848 c
107.209 491.314 147.2417 471.6958 158.4004 451.6846 C
f
111.3325 447.6123 m
110.9692 458.6533 114.9712 464.6284 124.7988 467.9053 c
85.8687 467.4536 82.605 424.8081 57.1641 409.1484 c
81.4277 420.3081 89.5962 452.6587 109.3921 458.5332 c
109.0288 453.436 110.4844 449.1875 111.3325 447.6123 C
f
158.4004 441.0615 m
158.4004 448.2192 l
138.5073 479.5176 110.7451 465.2026 113.7603 447.7349 c
125.8896 467.749 154.0352 461.0825 158.4004 441.0615 C
f
0 D
134.3809 455.9507 m
143.6016 455.9507 152.9429 452.9482 158.4004 434.3931 C
158.4004 424.8081 l
155.0054 438.9985 151.6089 453.5874 134.3809 453.7515 C
134.3809 453.7534 l
124.6411 452.6108 117.6816 445.7158 119.3428 435.6631 c
121.8882 420.27 146.5112 419.1797 145.8599 436.9526 c
145.3623 450.4951 125.1885 450.2607 124.8389 437.6294 c
124.5801 428.1943 137.1987 426.7993 139.1455 433.3433 c
141.6436 441.752 129.8955 442.8647 130.0649 436.458 c
130.2085 431.0654 135.4434 435.0776 135.5811 434.979 c
137.583 433.5542 126.9844 430.7041 129.6782 438.1885 c
131.2622 442.5928 139.2378 442.6299 140.1387 436.5654 c
141.8486 425.0796 122.7334 425.645 123.8438 438.5151 c
124.9912 451.811 146.5811 451.8379 147.2988 437.0381 c
148.4004 414.2974 112.7495 419.0522 117.3643 442.2905 c
118.978 450.4297 126.2598 455.1265 134.3809 455.9507 C
f
1 D
158.4004 456.875 m
158.4004 461.1025 158.4004 475.3516 y
154.0225 480.9233 148.3149 482.7437 146.3896 482.9556 c
147.0947 470.4678 155.5469 467.0703 158.4004 456.875 C
f
158.4004 494.3428 m
158.4004 509.9883 l
152.8496 502.9219 150.9082 501.5835 158.4004 494.3428 C
f
*U
*u
287.1123 611.5332 m
286.5376 612.8784 288.1689 606.4448 v
289.8018 600.0132 294.313 598.3804 297.0015 595.4067 c
301.707 601.1646 297.3853 606.8296 287.1123 611.5332 C
f
0 D
166.0977 515.7305 m
170.1392 516.3242 172.2251 518.0264 173.3994 520.1597 c
175.9673 524.5972 188.7456 526.7407 185.8467 522.2197 C
185.709 522.0205 l
181.5264 516.3018 171.6929 513.542 166.0977 515.7305 C
f
1 D
158.4023 542.832 m
158.4023 535.1113 l
161.2456 544.7964 180.0122 545.7314 183.4951 532.959 c
175.2524 534.3145 175.7324 529.0464 174.6846 523.9482 c
178.811 528.4731 188.3481 524.7603 187.3862 530.1719 C
187.3765 530.2124 l
183.751 545.6978 167.4839 546.4629 158.4023 542.832 C
f
0 D
271.8467 564.3457 m
256.2168 565.8491 248.46 559.4316 233.6709 549.8374 c
218.8809 540.2417 195.2622 538.3848 177.7061 550.3838 c
193.9307 543.0996 208.0332 544.6338 217.77 547.2651 c
233.4214 551.4907 246.0605 569.8945 271.8467 564.3457 C
f
180.4097 574.3477 m
180.2666 574.3696 180.2393 574.3945 180.2397 574.4204 c
180.3398 578.5649 172.3711 578.186 174.6318 571.3257 c
176.2964 566.2734 185.8882 566.6367 185.6689 575.2939 c
185.3838 586.5996 165.4785 584.4702 169.166 570.605 c
172.1855 559.2485 192.103 559.3203 191.6987 575.4414 c
191.4556 585.1885 182.1211 589.3901 174.4854 587.377 c
162.5386 584.23 158.5552 567.5767 173.4883 556.7866 c
183.6748 549.8374 197.0322 548.9551 209.0918 551.6943 c
223.814 555.0439 227.9961 560.0615 226.3242 571.7715 c
228.834 568.2573 234.6885 552.1953 213.2744 548.1816 c
197.8809 545.855 186.6489 546.9585 172.5176 555.4482 C
173.4883 556.7866 L
172.5176 555.4531 l
168.2192 558.6045 164.5767 562.4648 163.1138 567.7363 c
156.3408 592.1465 192.5308 596.9521 192.8804 575.4585 c
193.1636 558.0576 171.5024 557.9238 168.3252 570.3853 c
164.4863 585.4351 186.0693 587.5811 186.27 575.3042 c
186.4346 565.3618 173.6294 565.0044 173.8735 573.7715 c
174.0146 578.8101 180.2627 578.3652 180.5615 574.6802 c
180.5854 574.3838 180.6074 574.3838 180.4097 574.3477 C
f
255.6001 516.8965 m
247.5708 520.5776 235.8599 523.4219 228.9893 524.9316 c
222.1182 526.4341 206.0815 529.2754 192.1958 531.583 C
190.3545 535.1113 l
196.043 532.4126 213.1069 528.2739 225.8223 529.2754 c
238.5366 530.2842 250.5811 523.5918 255.6001 516.8965 C
f
1 D
288.5581 553.2031 m
280.1938 545.8394 260.2856 532.6279 236.5293 530.7847 c
249.7461 529.2754 256.2705 521.2485 257.9438 517.9028 c
256.605 522.9189 253.4253 527.7734 y
268.1484 533.4595 281.4863 543.3286 288.5581 553.2031 C
f
278.855 563.2412 m
261.79 574.7837 242.5518 569.5972 235.6919 563.2412 c
235.3574 567.5889 232.6807 571.7715 227.9961 573.1108 c
231.6763 568.0884 232.5137 563.7427 230.5054 556.5479 c
245.061 565.2451 263.1284 571.439 278.855 563.2412 C
f
247.1733 552.2974 m
223.6895 524.1211 179.9814 533.4595 158.4004 568.0884 C
158.4004 563.7427 l
177.4727 535.1113 215.6162 526.6021 244.1021 534.2461 c
239.876 536.5537 244.1021 546.73 247.1733 552.2974 C
f
303.0513 579.6606 m
299.6895 578.2188 294.313 574.1855 292.4897 571.7861 c
290.4727 577.2573 284.7124 585.1328 280.2964 587.1475 c
276.7437 581.9624 274.728 574.2822 280.2964 568.9072 c
285.8643 563.5288 286.249 557.6733 274.2485 549.8008 c
262.2461 541.9272 246.5986 536.3594 249.3818 550.5688 c
246.2124 544.5215 244.582 537.5088 247.8462 535.1113 c
273.2871 541.3511 304.0112 563.1455 303.0513 579.6606 C
f
0 D
302.0903 583.3071 m
299.8809 581.7725 296.2539 579.7275 293.2896 576.6953 c
292.4917 579.1802 291.4336 581.4819 287.0142 586.0947 c
282.5952 590.7012 285.2896 596.269 287.4971 599.2451 c
290.7617 597.9971 295.2749 593.6772 296.9048 590.9883 c
297.6733 592.6191 300.1704 595.5967 302.0903 596.1714 c
305.9326 589.499 304.2988 584.8413 302.0903 583.3071 C
f
*U
*u
1 D
29.6885 611.5332 m
19.416 606.8296 15.0952 601.1646 19.7998 595.4067 c
22.4878 598.3804 27.0005 600.0132 28.6328 606.4448 c
30.2642 612.8784 29.6885 611.5332 Y
f
0 D
150.7031 515.7305 m
145.1079 513.542 135.2749 516.3018 131.0923 522.0205 C
130.9546 522.2197 l
128.0552 526.7407 140.8335 524.5972 143.4009 520.1597 c
144.5762 518.0264 146.6631 516.3242 150.7031 515.7305 C
f
1 D
158.3989 542.832 m
149.3164 546.4629 133.0503 545.6978 129.4258 530.2124 C
129.415 530.1719 l
128.4531 524.7603 137.9907 528.4731 142.1172 523.9482 c
141.0688 529.0464 141.5493 534.3145 133.3062 532.959 c
136.7881 545.7314 155.5552 544.7964 158.3989 535.1113 C
158.3989 542.832 L
f
0 D
44.9541 564.3457 m
70.7397 569.8945 83.3799 551.4907 99.0313 547.2651 c
108.7681 544.6338 122.8706 543.0996 139.0952 550.3838 c
121.5396 538.3848 97.9219 540.2417 83.1304 549.8374 c
68.3408 559.4316 60.585 565.8491 44.9541 564.3457 C
f
136.3921 574.3477 m
136.1934 574.3838 136.2158 574.3838 136.2397 574.6802 c
136.5391 578.3652 142.7871 578.8101 142.9282 573.7715 c
143.1724 565.0044 130.3672 565.3618 130.5303 575.3042 c
130.7319 587.5811 152.3154 585.4351 148.4771 570.3853 c
145.2988 557.9238 123.6367 558.0576 123.9209 575.4585 c
124.2715 596.9521 160.46 592.1465 153.688 567.7363 c
152.2241 562.4648 148.582 558.6045 144.2837 555.4531 C
143.3135 556.7866 L
144.2837 555.4482 l
130.1528 546.9585 118.9199 545.855 103.5269 548.1816 c
82.1123 552.1953 87.9678 568.2573 90.4771 571.7715 c
88.8057 560.0615 92.9873 555.0439 107.71 551.6943 c
119.769 548.9551 133.1255 549.8374 143.3135 556.7866 c
158.2451 567.5767 154.2617 584.23 142.3154 587.377 c
134.6802 589.3901 125.3457 585.1885 125.103 575.4414 c
124.6992 559.3203 144.6152 559.2485 147.6353 570.605 c
151.3232 584.4702 131.4175 586.5996 131.1323 575.2939 c
130.9136 566.6367 140.5049 566.2734 142.1699 571.3257 c
144.4297 578.186 136.4614 578.5649 136.5625 574.4204 c
136.563 574.3945 136.5347 574.3696 136.3921 574.3477 C
f
61.2007 516.8965 m
66.2202 523.5918 78.2642 530.2842 90.9785 529.2754 c
103.6934 528.2739 120.7588 532.4126 126.4463 535.1113 C
124.6055 531.583 l
110.7207 529.2754 94.6836 526.4341 87.812 524.9316 c
80.9419 523.4219 69.231 520.5776 61.2007 516.8965 C
f
1 D
28.2427 553.2031 m
35.3159 543.3286 48.6528 533.4595 63.3755 527.7734 c
60.1963 522.9189 58.8579 517.9028 v
60.5313 521.2485 67.0562 529.2754 80.272 530.7847 c
56.5156 532.6279 36.6074 545.8394 28.2427 553.2031 C
f
37.9463 563.2412 m
53.6724 571.439 71.7402 565.2451 86.2954 556.5479 c
84.2886 563.7427 85.1245 568.0884 88.8057 573.1108 c
84.1201 571.7715 81.4443 567.5889 81.1094 563.2412 c
74.25 569.5972 55.0117 574.7837 37.9463 563.2412 C
f
69.6274 552.2974 m
72.6997 546.73 76.9248 536.5537 72.6997 534.2461 c
101.1846 526.6021 139.3296 535.1113 158.4004 563.7427 C
158.4004 568.0884 l
136.8184 533.4595 93.1118 524.1211 69.6274 552.2974 C
f
13.75 579.6606 m
12.7915 563.1455 43.5142 541.3511 68.9561 535.1113 c
72.2192 537.5088 70.5884 544.5215 67.4194 550.5688 c
70.2031 536.3594 54.5552 541.9272 42.5527 549.8008 c
30.5527 557.6733 30.9355 563.5288 36.5044 568.9072 c
42.0723 574.2822 40.0581 581.9624 36.5044 587.1475 c
32.0889 585.1328 26.3276 577.2573 24.3115 571.7861 c
22.4878 574.1855 17.1118 578.2188 13.75 579.6606 C
f
0 D
14.7114 596.1714 m
16.6309 595.5967 19.1284 592.6191 19.8955 590.9883 c
21.5273 593.6772 26.04 597.9971 29.3042 599.2451 c
31.5122 596.269 34.2061 590.7012 29.7866 586.0947 c
25.3682 581.4819 24.3101 579.1802 23.5122 576.6953 c
20.5464 579.7275 16.9204 581.7725 14.7114 583.3071 c
12.5034 584.8413 10.8687 589.499 14.7114 596.1714 C
f
*U
*u
109.7915 621.4512 m
110.8613 626.8335 115.1914 631.2188 v
110.8198 630.1826 104.7188 632.5088 99.5732 636.4888 c
108.7129 643.0796 120.2231 637.9668 124.8882 635.2979 c
121.186 629.1631 115.5112 624.2441 109.7915 621.4512 C
f
1 D
136.4819 639.9824 m
125.3306 645.0278 86.9961 658.1128 53.6699 638.1606 c
86.73 651.9282 114.8281 642.4785 125.6299 637.457 c
126.8506 639.8501 132.6328 640.7783 136.4819 639.9824 C
f
0 D
158.4004 618.2085 m
158.4004 616.6118 l
145.498 630.2861 139.9692 625.7744 136.4819 624.0146 c
132.9966 622.2617 131.207 626.5693 133.9951 628.4302 c
141.8296 633.0752 151.7852 625.2402 158.4004 618.2085 C
f
1 D
158.4004 623.1177 m
140.9932 644.3291 120.9844 640.645 127.4907 627.2334 c
130.4106 633.4766 142.0454 639.8501 158.4004 620.4644 C
158.4004 623.1177 L
f
118.7676 649.208 m
111.3237 657.4146 103.1714 663.5195 78.2339 657.375 c
53.2964 651.2305 31.1001 634.5356 12.4023 644.4141 c
32.5596 630.8184 59.5527 647.6509 80.2637 652.5596 c
100.436 657.3354 108.8398 653.5376 118.7676 649.208 C
f
0 D
145.6338 652.0483 m
145.4414 646.5796 146.4038 644.1792 v
142.0137 646.8496 136.0137 651.2285 133.3965 653.3564 C
133.3667 653.3135 l
130.4033 655.4819 127.876 658.1499 126.8496 661.7788 c
124.7441 669.2192 129.4805 677.3076 137.9858 676.7246 c
143.2876 676.3628 147.3301 672.8867 147.5166 667.4126 c
147.6465 663.6006 146.1748 659.9902 142.5337 658.3359 c
136.7627 655.7148 129.3062 659.79 130.2129 666.938 c
130.9355 672.6484 137.9136 674.4512 141.4336 670.8267 c
143.1724 669.0347 143.4438 666 142.1934 663.9956 c
140.291 660.9443 134.0601 661.1362 134.2471 666.0547 c
134.3755 669.4238 138.4839 669.353 138.9727 666.8867 c
139.0317 666.5913 139.0547 666.5059 138.8374 666.4175 c
138.6416 666.4854 138.6523 666.5601 138.6494 666.6226 c
138.5474 667.687 137.5762 668.3638 136.5229 668.2769 c
134.106 668.0845 134.1714 664.3574 135.8955 663.125 c
137.9878 661.6265 142.8916 662.4321 142.4014 667.4819 c
141.9326 672.3389 135.2319 673.731 132.1304 669.8877 c
126.4492 662.9111 138.6167 653.5117 144.7993 661.0913 c
146.8521 663.6055 147.1387 667.73 145.9077 670.627 c
143.4121 676.5093 133.8364 677.9248 129.2471 671.6631 c
126.5938 668.0605 126.9082 662.7124 129.2842 659.0469 c
130.4888 657.1519 132.1904 655.5815 134.0381 654.2417 C
133.9736 654.1489 L
134.0479 654.2417 l
137.2271 652.2886 143.916 651.6826 145.6338 652.0483 C
f
1 D
158.4004 644.082 m
155.7129 648.2114 152.0293 652.2778 149.0898 653.7778 c
148.0332 646.7739 147.4585 642.2612 158.4004 628.5332 c
152.3325 643.4707 118.0591 651.2695 115.1045 668.4038 c
109.7861 643.2295 145.2417 646.3047 158.4004 625.98 C
158.4004 644.082 L
f
158.4004 648.022 m
158.4004 670.2881 l
145.1553 658.1943 155.146 653.7778 158.4004 648.022 C
f
0 D
80.709 630.8638 m
90.2451 631.918 90.3467 627.7837 94.9487 625.2246 c
93.2783 622.9902 91.2476 621.8345 89.2598 622.2119 c
85.7808 622.8765 82.3638 627.1699 80.709 630.8638 C
f
1 D
111.4243 629.4043 m
101.2627 630.0918 98.7168 637.0835 90.542 632.0732 c
93.5044 627.4004 98.5874 625.6309 100.103 625.4409 c
96.6426 624.4512 93.603 622.0454 93.1396 620.2988 c
107.5112 617.0864 104.9761 621.5645 111.4243 629.4043 C
f
*U
*u
0 D
207.0088 621.4512 m
201.2886 624.2441 195.6143 629.1631 191.9097 635.2979 c
196.5776 637.9668 208.0859 643.0796 217.2271 636.4888 c
212.0801 632.5088 205.9805 630.1826 201.6099 631.2188 c
205.9399 626.8335 207.0088 621.4512 Y
f
1 D
180.3169 639.9824 m
184.167 640.7783 189.9502 639.8501 191.1704 637.457 c
201.9727 642.4785 230.0688 651.9282 263.1304 638.1606 c
229.8042 658.1128 191.4702 645.0278 180.3169 639.9824 C
f
0 D
158.4004 618.2085 m
165.0151 625.2402 174.9717 633.0752 182.8047 628.4302 c
185.5942 626.5693 183.8037 622.2617 180.3169 624.0146 c
176.8325 625.7744 171.3018 630.2861 158.4004 616.6118 C
158.4004 618.2085 L
f
1 D
158.4004 623.1177 m
158.4004 620.4644 l
174.7549 639.8501 186.3901 633.4766 189.3101 627.2334 c
195.8154 640.645 175.8057 644.3291 158.4004 623.1177 C
f
198.0322 649.208 m
207.958 653.5376 216.3643 657.3354 236.5381 652.5596 c
257.248 647.6509 284.2402 630.8184 304.3984 644.4141 c
285.7002 634.5356 263.5034 651.2305 238.5669 657.375 c
213.6284 663.5195 205.4766 657.4146 198.0322 649.208 C
f
0 D
171.166 652.0483 m
172.8833 651.6826 179.5728 652.2886 182.7534 654.2417 C
182.8267 654.1489 L
182.7607 654.2417 l
184.6108 655.5815 186.3125 657.1519 187.5161 659.0469 c
189.8911 662.7124 190.2056 668.0605 187.5542 671.6631 c
182.9634 677.9248 173.3882 676.5093 170.8906 670.627 c
169.6616 667.73 169.9497 663.6055 172.0005 661.0913 c
178.1821 653.5117 190.3521 662.9111 184.6699 669.8877 c
181.5688 673.731 174.8677 672.3389 174.3989 667.4819 c
173.9092 662.4321 178.813 661.6265 180.9038 663.125 c
182.6274 664.3574 182.6943 668.0845 180.2783 668.2769 c
179.2236 668.3638 178.2524 667.687 178.1519 666.6226 c
178.1475 666.5601 178.1582 666.4854 177.9634 666.4175 c
177.7466 666.5059 177.7681 666.5913 177.8286 666.8867 c
178.3149 669.353 182.4248 669.4238 182.5527 666.0547 c
182.7417 661.1362 176.5088 660.9443 174.606 663.9956 c
173.3555 666 173.627 669.0347 175.3682 670.8267 c
178.8867 674.4512 185.8647 672.6484 186.5869 666.938 c
187.4941 659.79 180.0376 655.7148 174.2666 658.3359 c
170.624 659.9902 169.1543 663.6006 169.2837 667.4126 c
169.4707 672.8867 173.5142 676.3628 178.8149 676.7246 c
187.3213 677.3076 192.0576 669.2192 189.9512 661.7788 c
188.9243 658.1499 186.3975 655.4819 183.4336 653.3135 C
183.4038 653.3564 l
180.7866 651.2285 174.7861 646.8496 170.3975 644.1792 c
171.3574 646.5796 171.166 652.0483 Y
f
1 D
158.4004 644.082 m
158.4004 625.98 l
171.5571 646.3047 207.0151 643.2295 201.6953 668.4038 c
198.7397 651.2695 164.4673 643.4707 158.4004 628.5332 c
169.3428 642.2612 168.7666 646.7739 167.71 653.7778 c
164.771 652.2778 161.0869 648.2114 158.4004 644.082 C
f
158.4004 648.022 m
161.6543 653.7778 171.6455 658.1943 158.4004 670.2881 C
158.4004 648.022 L
f
0 D
236.0923 630.8638 m
234.4375 627.1699 231.0186 622.8765 227.5396 622.2119 c
225.5542 621.8345 223.5215 622.9902 221.8525 625.2246 c
226.4521 627.7837 226.5552 631.918 236.0923 630.8638 C
f
1 D
223.6611 620.2988 m
223.1963 622.0454 220.1577 624.4512 216.6968 625.4409 c
218.2124 625.6309 223.2964 627.4004 226.2563 632.0732 c
218.0845 637.0835 215.5361 630.0918 205.374 629.4043 c
211.8247 621.5645 209.2876 617.0864 223.6611 620.2988 C
f
*U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
